@import '../../../../theme/variables.scss';

$ptcg-max-energy-cards: 8;
$ptcg-energy-card-offset: 13%;

.ptcg-board-card {
  max-width: map-get($ptcg-size, card);
  min-width: map-get($ptcg-size, board-card);
  position: relative;

  &.power-activate {
    z-index: 9999;
    position: absolute;
    animation: powerActivateStart 0.5s ease-in-out forwards;

    &.upside-down {
      z-index: 9999;
      animation: powerActivateStartOpponent 0.5s ease-in-out forwards;
    }
  }

  &.power-deactivate {
    z-index: 9999;
    position: absolute;
    animation: powerActivateEnd 0.5s ease-in-out forwards;

    &.upside-down {
      z-index: 9999;
      animation: powerActivateEndOpponent 0.5s ease-in-out forwards;
    }
  }

  @keyframes powerActivateStart {
    0% {
      transform: rotate(0) scale(1);
      z-index: 9999;
    }

    100% {
      transform: translate(500px, -275px) rotate(180deg) scale(4);
      z-index: 9999;
    }
  }

  @keyframes powerActivateEnd {
    0% {
      transform: translate(500px, -275px) rotate(180deg) scale(4);
      z-index: 9999;
    }

    100% {
      transform: rotate(0) scale(1);
    }
  }

  &.empty:after {
    content: "";
    display: block;
    padding-bottom: $card-aspect-ratio * 100%;
  }

  &.face-down>div:not(.ptcg-card-counts),
  &.face-down>ptcg-card {
    display: none;
  }

  &.face-down:after {
    background-image: url(~src/assets/cardback.png);
    background-repeat: no-repeat;
    background-size: 100% 100%;
    content: "";
    display: block;
    padding-bottom: $card-aspect-ratio * 100%;
  }
}


.rising-sun {
  width: 300px; // Increased from 200px
  height: 300px; // Increased from 200px
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: 100;
  pointer-events: none;
  background: radial-gradient(circle at center,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 1) 15%,
      rgba(255, 255, 255, 0.9) 16%,
      rgba(255, 255, 255, 0.7) 17%,
      rgba(255, 255, 255, 0.4) 18%,
      rgba(255, 255, 255, 0.2) 19%,
      transparent 20%),
    repeating-conic-gradient(transparent 0deg,
      transparent 20deg,
      rgba(255, 255, 255, 1) 20deg,
      rgba(255, 255, 255, 1) 30deg);
  animation: risingSun 3s linear;

  &.ptcg-board-card {
    animation: cardFlash 3s ease-in-out;
  }
}

@keyframes risingSun {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }

  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

@keyframes cardFlash {
  0% {
    filter: brightness(2);
  }

  100% {
    filter: brightness(1);
  }
}

.ptcg-energy-cards {
  ptcg-card {
    width: 30%;
    // height: 25px;
    // width: 25px;
    top: 80%;
    left: -11%;
    z-index: 3;
    position: absolute;
    clip-path: circle(34%);

    // // Set custom energy card images based on their names
    // &[data-name="Grass Energy"] {
    //   background-image: url('#{$custom-grass-energy-image}');
    //   background-size: cover;
    //   background-repeat: no-repeat;
    //   &:after {
    //     content: '';
    //     display: block;
    //     padding-bottom: 100%;
    //   }
    // }

    // &[data-name="Fire Energy"] {
    //   background-image: url('#{$custom-fire-energy-image}');
    //   background-size: cover;
    //   background-repeat: no-repeat;
    //   &:after {
    //     content: '';
    //     display: block;
    //     padding-bottom: 100%;
    //   }
    // }

    // &:first-child {
    //   // Keep the first energy card at top: 76%, left: -11%
    // }

    // Move every subsequent energy card to the right
    @for $i from 2 through $ptcg-max-energy-cards {
      &:nth-child(#{$i}) {
        left: calc(-11% + (#{$i - 1} * #{$ptcg-energy-card-offset}));
      }
    }
  }
}

.ptcg-energy-more {
  padding: $ptcg-board-tiny-padding 0;
  position: absolute;
  transform: translateY(-100%);

  :host-context(.upside-down) & {
    transform: translateY(-100%) rotate(180deg);
  }
}

.upside-down {
  transform: rotate(180deg);
}

.asleep-position {
  transform: rotate(270deg);
}

.confused-position {
  transform: rotate(180);
}

.paralyzed-position {
  transform: rotate(90deg);
}

.ptcg-trainer-card {
  width: 100%; // Same as the card size
  left: 35%;
  position: absolute;
  transform: rotate(90deg);
}

.ptcg-card-counts {
  bottom: 0;
  padding: $ptcg-board-tiny-padding 0;
  position: absolute;
  right: 0;
  transform: translateY(100%);

  :host-context(.upside-down) & {
    transform: translateY(100%) rotate(180deg);
  }
}

.ptcg-card-damage {
  position: absolute;
  top: -2%;
  right: -2%;

  :host-context(.upside-down) & {
    transform: rotate(180deg);
  }
}

.ptcg-ability-used {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  :host-context(.upside-down) & {
    transform: translate(-50%, -50%) rotate(180deg);
  }
}


.ptcg-card-marker {
  z-index: 5;
  left: 0;
  padding: map-get($padding, small);
  position: absolute;
  top: 0;
  transform: translateX(-100%);

  &>div {
    padding-bottom: $ptcg-board-tiny-padding;
  }

  :host-context(.upside-down) & {
    transform: translateX(-100%) rotate(180deg);
  }
}

.holo {
  z-index: 2;
  position: relative;
  max-width: map-get($ptcg-size, card);
  min-width: map-get($ptcg-size, board-card);
  background: linear-gradient(100deg, #34DCE7 -6.37%, #7F5FFE 43.87%, #FF87A3 97.22%);
  border-radius: 4px;
}

.holo::after {
  content: '';
  opacity: 85%;
  border-radius: 4px;
  position: absolute;
  inset: 0;
  animation: holographic 3.5s linear infinite;
  background:
    linear-gradient(218deg,
      rgba(255, 255, 255, 0.00) 0%,
      #FFF 25%,
      rgba(255, 255, 255, 0.00) 50%,
      #FFF 75%,
      rgba(255, 255, 255, 0.00) 100%);
  background-size: 350% 100%;
  background-repeat: no-repeat;
  mix-blend-mode: overlay;
}

@keyframes holographic {
  0% {
    background-position: 100% 0;
  }

  100% {
    background-position: -350% 0;
  }
}

@keyframes holographic {
  to {
    background-position: 100%, 0;
  }
}

.upside-down {
  transform: rotate(180deg);
}

.ptcg-card-container {
  &.rotate-180 {
    transform: rotate(180deg);
  }

  &.rotate-90 {
    transform: rotate(90deg);
  }
}

.ptcg-special-conditions {
  left: 0;
  padding: map-get($padding, small);
  position: absolute;
  top: 0;
  transform: translateX(100%);

  &>div {
    padding-bottom: $ptcg-board-tiny-padding;
  }

  .asleep {
    transform: rotate(90deg);
  }

  .paralyzed {
    transform: translateX(-220%) translateY(150%) rotate(270deg);
  }

  .confused {
    transform: translateX(-220%) translateY(150%) rotate(270deg);
  }

  :host-context(.upside-down) & {
    transform: translateX(-100%) translateY(150%) rotate(180deg);
  }
}

// Ability Effects

// .power-glow {
//   box-shadow: 0 0 12px #00ff00;
//   animation: glow 2s ease-in-out forwards;
// }

// @keyframes glow {
//   0% {
//     box-shadow: 0 0 0 #00ff00;
//   }

//   50% {
//     box-shadow: 0 0 12px #00ff00;
//   }

//   100% {
//     box-shadow: 0 0 0 #00ff00;
//   }
// }


// .power-activate {
//   position: absolute;
//   z-index: 9999;
//   max-width: map-get($ptcg-size, card);
//   min-width: map-get($ptcg-size, board-card);
//   animation: powerActivateStart 0.5s ease-in-out forwards;
// }

// .power-deactivate {
//   position: absolute;
//   z-index: 9999;
//   max-width: map-get($ptcg-size, card);
//   min-width: map-get($ptcg-size, board-card);
//   animation: powerActivateEnd 0.5s ease-in-out forwards;
// }

.power-negated-glow {
  box-shadow: 0 0 12px #00ff00;
  animation: glow2 2s ease-in-out forwards;
}

@keyframes glow2 {
  0% {
    box-shadow: 0 0 0 #00ff00;
  }

  50% {
    box-shadow: 0 0 12px #00ff00;
  }

  100% {
    box-shadow: 0 0 0 #00ff00;
  }
}

@keyframes risingSun {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes risingSun {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes risingSun {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes cardFlash {
  0% {
    filter: brightness(1);
  }

  50% {
    filter: brightness(2);
  }

  100% {
    filter: brightness(1);
  }
}