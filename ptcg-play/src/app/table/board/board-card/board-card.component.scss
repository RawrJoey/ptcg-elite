@import '../../../../theme/variables.scss';

$ptcg-max-energy-cards: 5;
$ptcg-energy-card-offset: 14%;

.ptcg-board-card {
  max-width: map-get($ptcg-size, card);
  min-width: map-get($ptcg-size, board-card);
  // max-width: 4.5vw; // Adjust this value to your preference
  // min-width: 4.5vw; // Adjust this value to your preference
  // height: calc(4.5vw * #{$card-aspect-ratio}); // Maintain the aspect ratio
  // margin-left: 41px;
  // margin-left: calc(1 * $spacing-unit);
  // margin-right: calc(1 * $spacing-unit);
  position: relative;

  &.empty:after {
    content: "";
    display: block;
    padding-bottom: $card-aspect-ratio * 100%;
  }

  &.face-down > div:not(.ptcg-card-counts),
  &.face-down > ptcg-card {
    display: none;
  }

  &.face-down:after {
    background-image: url(~src/assets/cardback.png);
    background-repeat: no-repeat;
    background-size: 100% 100%;
    content: "";
    display: block;
    padding-bottom: $card-aspect-ratio * 100%;
  }
}

// Import custom energy card images
// $custom-grass-energy-image: '~src/assets/custom-grass-energy.png';
// $custom-fire-energy-image: '~src/assets/custom-fire-energy.png';

.ptcg-energy-cards {
  ptcg-card {
    width: 30%;
    // height: 25px;
    // width: 25px;
    top: 80%;
    left: -11%;
    z-index: 3;
    position: absolute;
    clip-path: circle(34%);

    // // Set custom energy card images based on their names
    // &[data-name="Grass Energy"] {
    //   background-image: url('#{$custom-grass-energy-image}');
    //   background-size: cover;
    //   background-repeat: no-repeat;
    //   &:after {
    //     content: '';
    //     display: block;
    //     padding-bottom: 100%;
    //   }
    // }

    // &[data-name="Fire Energy"] {
    //   background-image: url('#{$custom-fire-energy-image}');
    //   background-size: cover;
    //   background-repeat: no-repeat;
    //   &:after {
    //     content: '';
    //     display: block;
    //     padding-bottom: 100%;
    //   }
    // }

    // &:first-child {
    //   // Keep the first energy card at top: 76%, left: -11%
    // }

    // Move every subsequent energy card to the right
    @for $i from 2 through $ptcg-max-energy-cards {
      &:nth-child(#{$i}) {
        left: calc(-11% + (#{$i - 1} * #{$ptcg-energy-card-offset}));
      }
    }
  }
}


.ptcg-energy-more {
  padding: $ptcg-board-tiny-padding 0;
  position: absolute;
  top: #{-$ptcg-energy-card-offset * $ptcg-max-energy-cards};
  transform: translateY(-10%);

  :host-context(.upside-down) & {
    transform: translateY(-10%) rotate(180deg);
  }
}

.upside-down {
  transform: rotate(180deg);
}

.asleep-position {
  transform: rotate(270deg);
}

.confused-position {
  transform: rotate(180);
}

.paralyzed-position {
  transform: rotate(90deg);
}

.ptcg-trainer-card {
  width: 100%; // Same as the card size
  left: 35%;
  position: absolute;
  transform: rotate(90deg);
}

.ptcg-card-counts {
  bottom: 0;
  padding: $ptcg-board-tiny-padding 0;
  position: absolute;
  right: 0;
  transform: translateY(100%);

  :host-context(.upside-down) & {
    transform: translateY(100%) rotate(180deg);
  }
}

.ptcg-card-damage {
  position: absolute;
  top: -2%;
  right: -2%;

  :host-context(.upside-down) & {
    transform: rotate(180deg);
  }
}

.ptcg-ability-used {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  :host-context(.upside-down) & {
    top: 45%;
    left: -42%;
    transform: rotate(180deg) translate(-50%, -50%);
  }
}


.ptcg-card-marker {
  z-index: 5;
  left: 0;
  padding: map-get($padding, small);
  position: absolute;
  top: 0;
  transform: translateX(-100%);

  & > div {
    padding-bottom: $ptcg-board-tiny-padding;
  }

  :host-context(.upside-down) & {
    transform: translateX(-100%) rotate(180deg);
  }
}

.holo{
  z-index: 2;
  position:relative;
  max-width: map-get($ptcg-size, card);
  min-width: map-get($ptcg-size, board-card);
  background:linear-gradient(100deg, #34DCE7 -6.37%, #7F5FFE 43.87%, #FF87A3 97.22%);
}

.holo::after{
  content:'';
  position:absolute;
  inset:0;
  animation: holographic 2.4s linear infinite;
  background:
    linear-gradient(218deg, rgba(255, 255, 255, 0.00) 10.16%, #FFF 26.55%, rgba(255, 255, 255, 0.00) 41.78%, #FFF 56.62%, rgba(255, 255, 255, 0.00) 72.63%, #FFF 88.24%);
  background-position:0%,0%;
  background-size:200%;
  background-repeat:no-repeat;
  mix-blend-mode: overlay;
  
}

@keyframes holographic{
  to{
    background-position:100%,0;
  }
}

.upside-down {
  transform: rotate(180deg);
}

.ptcg-card-container {
  &.rotate-180 {
    transform: rotate(180deg);
  }
  &.rotate-90 {
    transform: rotate(90deg);
  }
}

.ptcg-special-conditions {
  left: 0;
  padding: map-get($padding, small);
  position: absolute;
  top: 0;
  transform: translateX(100%);

  & > div {
    padding-bottom: $ptcg-board-tiny-padding;
  }

  .asleep {
    transform: rotate(90deg);
  }

  .paralyzed {
    transform: translateX(-220%) translateY(150%) rotate(270deg);
  }

  .confused {
    transform: translateX(-220%) translateY(150%) rotate(270deg);
  }

  :host-context(.upside-down) & {
    transform: translateX(-100%) translateY(150%) rotate(180deg);
  }
}