"use strict";function cov_16w2ui8aft(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/damage-score.ts";var hash="81ea980481ec296de1fd7fa62387fc26bb6c1c0e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/damage-score.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:29}},"2":{start:{line:4,column:15},end:{line:4,column:36}},"3":{start:{line:5,column:16},end:{line:5,column:34}},"4":{start:{line:8,column:23},end:{line:8,column:54}},"5":{start:{line:9,column:25},end:{line:9,column:69}},"6":{start:{line:10,column:30},end:{line:10,column:31}},"7":{start:{line:11,column:20},end:{line:11,column:21}},"8":{start:{line:12,column:8},end:{line:19,column:11}},"9":{start:{line:13,column:47},end:{line:15,column:85}},"10":{start:{line:16,column:33},end:{line:16,column:80}},"11":{start:{line:17,column:12},end:{line:17,column:44}},"12":{start:{line:18,column:12},end:{line:18,column:64}},"13":{start:{line:20,column:8},end:{line:27,column:11}},"14":{start:{line:21,column:47},end:{line:23,column:87}},"15":{start:{line:24,column:33},end:{line:24,column:80}},"16":{start:{line:25,column:12},end:{line:25,column:44}},"17":{start:{line:26,column:12},end:{line:26,column:64}},"18":{start:{line:28,column:8},end:{line:28,column:52}},"19":{start:{line:29,column:8},end:{line:29,column:21}},"20":{start:{line:32,column:0},end:{line:32,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:4},end:{line:7,column:5}},loc:{start:{line:7,column:30},end:{line:30,column:5}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:63},end:{line:12,column:64}},loc:{start:{line:12,column:91},end:{line:19,column:9}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:62},end:{line:20,column:63}},loc:{start:{line:20,column:90},end:{line:27,column:9}},line:20}},branchMap:{"0":{loc:{start:{line:13,column:47},end:{line:15,column:85}},type:"cond-expr",locations:[{start:{line:14,column:18},end:{line:14,column:87}},{start:{line:15,column:18},end:{line:15,column:85}}],line:13},"1":{loc:{start:{line:21,column:47},end:{line:23,column:87}},type:"cond-expr",locations:[{start:{line:22,column:18},end:{line:22,column:89}},{start:{line:23,column:18},end:{line:23,column:87}}],line:21}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/damage-score.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/damage-score.ts"],names:[],mappings:";;;AAAA,qCAAqE;AACrE,mCAAsC;AAEtC,MAAa,WAAY,SAAQ,mBAAW;IAEnC,QAAQ,CAAC,KAAY,EAAE,QAAgB;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,iBAAU,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEvD,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,MAAM,CAAC,cAAc,CAAC,iBAAU,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;YACzE,MAAM,CAAE,aAAa,EAAE,SAAS,CAAE,GAAG,MAAM,CAAC,IAAI,KAAK,eAAQ,CAAC,MAAM;gBAClE,CAAC,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAE;gBACzE,CAAC,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAE,CAAC;YAE1E,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YACrE,eAAe,IAAI,YAAY,CAAC;YAChC,KAAK,IAAI,SAAS,GAAG,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,cAAc,CAAC,iBAAU,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;YACxE,MAAM,CAAE,aAAa,EAAE,SAAS,CAAE,GAAG,MAAM,CAAC,IAAI,KAAK,eAAQ,CAAC,MAAM;gBAClE,CAAC,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAE;gBAC3E,CAAC,CAAC,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAE,CAAC;YAE5E,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;YACrE,eAAe,IAAI,YAAY,CAAC;YAChC,KAAK,IAAI,SAAS,GAAG,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC,CAAC;QAC5C,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;AAjCD,kCAiCC",sourcesContent:["import { State, StateUtils, PlayerType, SlotType } from '../../game';\nimport { SimpleScore } from './score';\n\nexport class DamageScore extends SimpleScore {\n\n  public getScore(state: State, playerId: number): number {\n    const player = this.getPlayer(state, playerId);\n    const opponent = StateUtils.getOpponent(state, player);\n\n    let pokemonScoreSum = 0;\n    let score = 0;\n\n    player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, card, target) => {\n      const [ pokemonScores, multipier ] = target.slot === SlotType.ACTIVE\n        ? [ this.options.scores.active, this.options.scores.damage.playerActive ]\n        : [ this.options.scores.bench, this.options.scores.damage.playerBench ];\n\n      const pokemonScore = this.getPokemonScoreBy(pokemonScores, cardList);\n      pokemonScoreSum += pokemonScore;\n      score += multipier * pokemonScore * cardList.damage;\n    });\n\n    opponent.forEachPokemon(PlayerType.TOP_PLAYER, (cardList, card, target) => {\n      const [ pokemonScores, multipier ] = target.slot === SlotType.ACTIVE\n        ? [ this.options.scores.active, this.options.scores.damage.opponentActive ]\n        : [ this.options.scores.bench, this.options.scores.damage.opponentBench ];\n\n      const pokemonScore = this.getPokemonScoreBy(pokemonScores, cardList);\n      pokemonScoreSum += pokemonScore;\n      score += multipier * pokemonScore * cardList.damage;\n    });\n\n    score = Math.round(score / pokemonScoreSum);\n    return score;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"81ea980481ec296de1fd7fa62387fc26bb6c1c0e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_16w2ui8aft=function(){return actualCoverage;};}return actualCoverage;}cov_16w2ui8aft();cov_16w2ui8aft().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_16w2ui8aft().s[1]++;exports.DamageScore=void 0;const game_1=(cov_16w2ui8aft().s[2]++,require("../../game"));const score_1=(cov_16w2ui8aft().s[3]++,require("./score"));class DamageScore extends(score_1.SimpleScore){getScore(state,playerId){cov_16w2ui8aft().f[0]++;const player=(cov_16w2ui8aft().s[4]++,this.getPlayer(state,playerId));const opponent=(cov_16w2ui8aft().s[5]++,game_1.StateUtils.getOpponent(state,player));let pokemonScoreSum=(cov_16w2ui8aft().s[6]++,0);let score=(cov_16w2ui8aft().s[7]++,0);cov_16w2ui8aft().s[8]++;player.forEachPokemon(game_1.PlayerType.BOTTOM_PLAYER,(cardList,card,target)=>{cov_16w2ui8aft().f[1]++;const[pokemonScores,multipier]=(cov_16w2ui8aft().s[9]++,target.slot===game_1.SlotType.ACTIVE?(cov_16w2ui8aft().b[0][0]++,[this.options.scores.active,this.options.scores.damage.playerActive]):(cov_16w2ui8aft().b[0][1]++,[this.options.scores.bench,this.options.scores.damage.playerBench]));const pokemonScore=(cov_16w2ui8aft().s[10]++,this.getPokemonScoreBy(pokemonScores,cardList));cov_16w2ui8aft().s[11]++;pokemonScoreSum+=pokemonScore;cov_16w2ui8aft().s[12]++;score+=multipier*pokemonScore*cardList.damage;});cov_16w2ui8aft().s[13]++;opponent.forEachPokemon(game_1.PlayerType.TOP_PLAYER,(cardList,card,target)=>{cov_16w2ui8aft().f[2]++;const[pokemonScores,multipier]=(cov_16w2ui8aft().s[14]++,target.slot===game_1.SlotType.ACTIVE?(cov_16w2ui8aft().b[1][0]++,[this.options.scores.active,this.options.scores.damage.opponentActive]):(cov_16w2ui8aft().b[1][1]++,[this.options.scores.bench,this.options.scores.damage.opponentBench]));const pokemonScore=(cov_16w2ui8aft().s[15]++,this.getPokemonScoreBy(pokemonScores,cardList));cov_16w2ui8aft().s[16]++;pokemonScoreSum+=pokemonScore;cov_16w2ui8aft().s[17]++;score+=multipier*pokemonScore*cardList.damage;});cov_16w2ui8aft().s[18]++;score=Math.round(score/pokemonScoreSum);cov_16w2ui8aft().s[19]++;return score;}}cov_16w2ui8aft().s[20]++;exports.DamageScore=DamageScore;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2pvZW15ZXJzY291Z2gvRG9jdW1lbnRzL0dpdEh1Yi9wdGNnLWVwc2QvcHRjZy1zZXJ2ZXIvc3JjL3NpbXBsZS1ib3Qvc3RhdGUtc2NvcmUvZGFtYWdlLXNjb3JlLnRzIiwic291cmNlcyI6WyIvVXNlcnMvam9lbXllcnNjb3VnaC9Eb2N1bWVudHMvR2l0SHViL3B0Y2ctZXBzZC9wdGNnLXNlcnZlci9zcmMvc2ltcGxlLWJvdC9zdGF0ZS1zY29yZS9kYW1hZ2Utc2NvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEscUNBQXFFO0FBQ3JFLG1DQUFzQztBQUV0QyxNQUFhLFdBQVksU0FBUSxtQkFBVztJQUVuQyxRQUFRLENBQUMsS0FBWSxFQUFFLFFBQWdCO1FBQzVDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQy9DLE1BQU0sUUFBUSxHQUFHLGlCQUFVLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztRQUV2RCxJQUFJLGVBQWUsR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBRWQsTUFBTSxDQUFDLGNBQWMsQ0FBQyxpQkFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDekUsTUFBTSxDQUFFLGFBQWEsRUFBRSxTQUFTLENBQUUsR0FBRyxNQUFNLENBQUMsSUFBSSxLQUFLLGVBQVEsQ0FBQyxNQUFNO2dCQUNsRSxDQUFDLENBQUMsQ0FBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBRTtnQkFDekUsQ0FBQyxDQUFDLENBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUUsQ0FBQztZQUUxRSxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ3JFLGVBQWUsSUFBSSxZQUFZLENBQUM7WUFDaEMsS0FBSyxJQUFJLFNBQVMsR0FBRyxZQUFZLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUN0RCxDQUFDLENBQUMsQ0FBQztRQUVILFFBQVEsQ0FBQyxjQUFjLENBQUMsaUJBQVUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3hFLE1BQU0sQ0FBRSxhQUFhLEVBQUUsU0FBUyxDQUFFLEdBQUcsTUFBTSxDQUFDLElBQUksS0FBSyxlQUFRLENBQUMsTUFBTTtnQkFDbEUsQ0FBQyxDQUFDLENBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUU7Z0JBQzNFLENBQUMsQ0FBQyxDQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFFLENBQUM7WUFFNUUsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FBQztZQUNyRSxlQUFlLElBQUksWUFBWSxDQUFDO1lBQ2hDLEtBQUssSUFBSSxTQUFTLEdBQUcsWUFBWSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUM7UUFDdEQsQ0FBQyxDQUFDLENBQUM7UUFFSCxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsZUFBZSxDQUFDLENBQUM7UUFDNUMsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0NBRUY7QUFqQ0Qsa0NBaUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhdGUsIFN0YXRlVXRpbHMsIFBsYXllclR5cGUsIFNsb3RUeXBlIH0gZnJvbSAnLi4vLi4vZ2FtZSc7XG5pbXBvcnQgeyBTaW1wbGVTY29yZSB9IGZyb20gJy4vc2NvcmUnO1xuXG5leHBvcnQgY2xhc3MgRGFtYWdlU2NvcmUgZXh0ZW5kcyBTaW1wbGVTY29yZSB7XG5cbiAgcHVibGljIGdldFNjb3JlKHN0YXRlOiBTdGF0ZSwgcGxheWVySWQ6IG51bWJlcik6IG51bWJlciB7XG4gICAgY29uc3QgcGxheWVyID0gdGhpcy5nZXRQbGF5ZXIoc3RhdGUsIHBsYXllcklkKTtcbiAgICBjb25zdCBvcHBvbmVudCA9IFN0YXRlVXRpbHMuZ2V0T3Bwb25lbnQoc3RhdGUsIHBsYXllcik7XG5cbiAgICBsZXQgcG9rZW1vblNjb3JlU3VtID0gMDtcbiAgICBsZXQgc2NvcmUgPSAwO1xuXG4gICAgcGxheWVyLmZvckVhY2hQb2tlbW9uKFBsYXllclR5cGUuQk9UVE9NX1BMQVlFUiwgKGNhcmRMaXN0LCBjYXJkLCB0YXJnZXQpID0+IHtcbiAgICAgIGNvbnN0IFsgcG9rZW1vblNjb3JlcywgbXVsdGlwaWVyIF0gPSB0YXJnZXQuc2xvdCA9PT0gU2xvdFR5cGUuQUNUSVZFXG4gICAgICAgID8gWyB0aGlzLm9wdGlvbnMuc2NvcmVzLmFjdGl2ZSwgdGhpcy5vcHRpb25zLnNjb3Jlcy5kYW1hZ2UucGxheWVyQWN0aXZlIF1cbiAgICAgICAgOiBbIHRoaXMub3B0aW9ucy5zY29yZXMuYmVuY2gsIHRoaXMub3B0aW9ucy5zY29yZXMuZGFtYWdlLnBsYXllckJlbmNoIF07XG5cbiAgICAgIGNvbnN0IHBva2Vtb25TY29yZSA9IHRoaXMuZ2V0UG9rZW1vblNjb3JlQnkocG9rZW1vblNjb3JlcywgY2FyZExpc3QpO1xuICAgICAgcG9rZW1vblNjb3JlU3VtICs9IHBva2Vtb25TY29yZTtcbiAgICAgIHNjb3JlICs9IG11bHRpcGllciAqIHBva2Vtb25TY29yZSAqIGNhcmRMaXN0LmRhbWFnZTtcbiAgICB9KTtcblxuICAgIG9wcG9uZW50LmZvckVhY2hQb2tlbW9uKFBsYXllclR5cGUuVE9QX1BMQVlFUiwgKGNhcmRMaXN0LCBjYXJkLCB0YXJnZXQpID0+IHtcbiAgICAgIGNvbnN0IFsgcG9rZW1vblNjb3JlcywgbXVsdGlwaWVyIF0gPSB0YXJnZXQuc2xvdCA9PT0gU2xvdFR5cGUuQUNUSVZFXG4gICAgICAgID8gWyB0aGlzLm9wdGlvbnMuc2NvcmVzLmFjdGl2ZSwgdGhpcy5vcHRpb25zLnNjb3Jlcy5kYW1hZ2Uub3Bwb25lbnRBY3RpdmUgXVxuICAgICAgICA6IFsgdGhpcy5vcHRpb25zLnNjb3Jlcy5iZW5jaCwgdGhpcy5vcHRpb25zLnNjb3Jlcy5kYW1hZ2Uub3Bwb25lbnRCZW5jaCBdO1xuXG4gICAgICBjb25zdCBwb2tlbW9uU2NvcmUgPSB0aGlzLmdldFBva2Vtb25TY29yZUJ5KHBva2Vtb25TY29yZXMsIGNhcmRMaXN0KTtcbiAgICAgIHBva2Vtb25TY29yZVN1bSArPSBwb2tlbW9uU2NvcmU7XG4gICAgICBzY29yZSArPSBtdWx0aXBpZXIgKiBwb2tlbW9uU2NvcmUgKiBjYXJkTGlzdC5kYW1hZ2U7XG4gICAgfSk7XG5cbiAgICBzY29yZSA9IE1hdGgucm91bmQoc2NvcmUgLyBwb2tlbW9uU2NvcmVTdW0pO1xuICAgIHJldHVybiBzY29yZTtcbiAgfVxuXG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9zaW1wbGUtYm90L3N0YXRlLXNjb3JlL2RhbWFnZS1zY29yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoid2pNQWlCTTsrTkFqQk4sS0FBQSxDQUFBLE1BQUEsMEJBQUEsT0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLE9BQUEsMEJBQUEsT0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBRUEsS0FBYSxDQUFBLFdBQWIsU0FBaUMsT0FBQSxDQUFBLFdBQWpDLENBQTRDLENBRW5DLFFBQVEsQ0FBQyxLQUFELENBQWUsUUFBZixDQUErQix5QkFDNUMsS0FBTSxDQUFBLE1BQU0sMEJBQUcsS0FBSyxTQUFMLENBQWUsS0FBZixDQUFzQixRQUF0QixDQUFILENBQVosQ0FDQSxLQUFNLENBQUEsUUFBUSwwQkFBRyxNQUFBLENBQUEsVUFBQSxDQUFXLFdBQVgsQ0FBdUIsS0FBdkIsQ0FBOEIsTUFBOUIsQ0FBSCxDQUFkLENBRUEsR0FBSSxDQUFBLGVBQWUsMEJBQUcsQ0FBSCxDQUFuQixDQUNBLEdBQUksQ0FBQSxLQUFLLDBCQUFHLENBQUgsQ0FBVCxDQUw0Qyx3QkFPNUMsTUFBTSxDQUFDLGNBQVAsQ0FBc0IsTUFBQSxDQUFBLFVBQUEsQ0FBVyxhQUFqQyxDQUFnRCxDQUFDLFFBQUQsQ0FBVyxJQUFYLENBQWlCLE1BQWpCLEdBQTJCLHlCQUN6RSxLQUFNLENBQUUsYUFBRixDQUFpQixTQUFqQiwyQkFBK0IsTUFBTSxDQUFDLElBQVAsR0FBZ0IsTUFBQSxDQUFBLFFBQUEsQ0FBUyxNQUF6Qiw2QkFDakMsQ0FBRSxLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQW9CLE1BQXRCLENBQThCLEtBQUssT0FBTCxDQUFhLE1BQWIsQ0FBb0IsTUFBcEIsQ0FBMkIsWUFBekQsQ0FEaUMsOEJBRWpDLENBQUUsS0FBSyxPQUFMLENBQWEsTUFBYixDQUFvQixLQUF0QixDQUE2QixLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQW9CLE1BQXBCLENBQTJCLFdBQXhELENBRmlDLENBQS9CLENBQU4sQ0FJQSxLQUFNLENBQUEsWUFBWSwyQkFBRyxLQUFLLGlCQUFMLENBQXVCLGFBQXZCLENBQXNDLFFBQXRDLENBQUgsQ0FBbEIsQ0FMeUUseUJBTXpFLGVBQWUsRUFBSSxZQUFuQixDQU55RSx5QkFPekUsS0FBSyxFQUFJLFNBQVMsQ0FBRyxZQUFaLENBQTJCLFFBQVEsQ0FBQyxNQUE3QyxDQUNELENBUkQsRUFQNEMseUJBaUI1QyxRQUFRLENBQUMsY0FBVCxDQUF3QixNQUFBLENBQUEsVUFBQSxDQUFXLFVBQW5DLENBQStDLENBQUMsUUFBRCxDQUFXLElBQVgsQ0FBaUIsTUFBakIsR0FBMkIseUJBQ3hFLEtBQU0sQ0FBRSxhQUFGLENBQWlCLFNBQWpCLDRCQUErQixNQUFNLENBQUMsSUFBUCxHQUFnQixNQUFBLENBQUEsUUFBQSxDQUFTLE1BQXpCLDZCQUNqQyxDQUFFLEtBQUssT0FBTCxDQUFhLE1BQWIsQ0FBb0IsTUFBdEIsQ0FBOEIsS0FBSyxPQUFMLENBQWEsTUFBYixDQUFvQixNQUFwQixDQUEyQixjQUF6RCxDQURpQyw4QkFFakMsQ0FBRSxLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQW9CLEtBQXRCLENBQTZCLEtBQUssT0FBTCxDQUFhLE1BQWIsQ0FBb0IsTUFBcEIsQ0FBMkIsYUFBeEQsQ0FGaUMsQ0FBL0IsQ0FBTixDQUlBLEtBQU0sQ0FBQSxZQUFZLDJCQUFHLEtBQUssaUJBQUwsQ0FBdUIsYUFBdkIsQ0FBc0MsUUFBdEMsQ0FBSCxDQUFsQixDQUx3RSx5QkFNeEUsZUFBZSxFQUFJLFlBQW5CLENBTndFLHlCQU94RSxLQUFLLEVBQUksU0FBUyxDQUFHLFlBQVosQ0FBMkIsUUFBUSxDQUFDLE1BQTdDLENBQ0QsQ0FSRCxFQWpCNEMseUJBMkI1QyxLQUFLLENBQUcsSUFBSSxDQUFDLEtBQUwsQ0FBVyxLQUFLLENBQUcsZUFBbkIsQ0FBUixDQTNCNEMseUJBNEI1QyxNQUFPLENBQUEsS0FBUCxDQUNELENBL0J5QyxDLHlCQUE1QyxPQUFBLENBQUEsV0FBQSxDQUFBLFdBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YXRlLCBTdGF0ZVV0aWxzLCBQbGF5ZXJUeXBlLCBTbG90VHlwZSB9IGZyb20gJy4uLy4uL2dhbWUnO1xuaW1wb3J0IHsgU2ltcGxlU2NvcmUgfSBmcm9tICcuL3Njb3JlJztcblxuZXhwb3J0IGNsYXNzIERhbWFnZVNjb3JlIGV4dGVuZHMgU2ltcGxlU2NvcmUge1xuXG4gIHB1YmxpYyBnZXRTY29yZShzdGF0ZTogU3RhdGUsIHBsYXllcklkOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGNvbnN0IHBsYXllciA9IHRoaXMuZ2V0UGxheWVyKHN0YXRlLCBwbGF5ZXJJZCk7XG4gICAgY29uc3Qgb3Bwb25lbnQgPSBTdGF0ZVV0aWxzLmdldE9wcG9uZW50KHN0YXRlLCBwbGF5ZXIpO1xuXG4gICAgbGV0IHBva2Vtb25TY29yZVN1bSA9IDA7XG4gICAgbGV0IHNjb3JlID0gMDtcblxuICAgIHBsYXllci5mb3JFYWNoUG9rZW1vbihQbGF5ZXJUeXBlLkJPVFRPTV9QTEFZRVIsIChjYXJkTGlzdCwgY2FyZCwgdGFyZ2V0KSA9PiB7XG4gICAgICBjb25zdCBbIHBva2Vtb25TY29yZXMsIG11bHRpcGllciBdID0gdGFyZ2V0LnNsb3QgPT09IFNsb3RUeXBlLkFDVElWRVxuICAgICAgICA/IFsgdGhpcy5vcHRpb25zLnNjb3Jlcy5hY3RpdmUsIHRoaXMub3B0aW9ucy5zY29yZXMuZGFtYWdlLnBsYXllckFjdGl2ZSBdXG4gICAgICAgIDogWyB0aGlzLm9wdGlvbnMuc2NvcmVzLmJlbmNoLCB0aGlzLm9wdGlvbnMuc2NvcmVzLmRhbWFnZS5wbGF5ZXJCZW5jaCBdO1xuXG4gICAgICBjb25zdCBwb2tlbW9uU2NvcmUgPSB0aGlzLmdldFBva2Vtb25TY29yZUJ5KHBva2Vtb25TY29yZXMsIGNhcmRMaXN0KTtcbiAgICAgIHBva2Vtb25TY29yZVN1bSArPSBwb2tlbW9uU2NvcmU7XG4gICAgICBzY29yZSArPSBtdWx0aXBpZXIgKiBwb2tlbW9uU2NvcmUgKiBjYXJkTGlzdC5kYW1hZ2U7XG4gICAgfSk7XG5cbiAgICBvcHBvbmVudC5mb3JFYWNoUG9rZW1vbihQbGF5ZXJUeXBlLlRPUF9QTEFZRVIsIChjYXJkTGlzdCwgY2FyZCwgdGFyZ2V0KSA9PiB7XG4gICAgICBjb25zdCBbIHBva2Vtb25TY29yZXMsIG11bHRpcGllciBdID0gdGFyZ2V0LnNsb3QgPT09IFNsb3RUeXBlLkFDVElWRVxuICAgICAgICA/IFsgdGhpcy5vcHRpb25zLnNjb3Jlcy5hY3RpdmUsIHRoaXMub3B0aW9ucy5zY29yZXMuZGFtYWdlLm9wcG9uZW50QWN0aXZlIF1cbiAgICAgICAgOiBbIHRoaXMub3B0aW9ucy5zY29yZXMuYmVuY2gsIHRoaXMub3B0aW9ucy5zY29yZXMuZGFtYWdlLm9wcG9uZW50QmVuY2ggXTtcblxuICAgICAgY29uc3QgcG9rZW1vblNjb3JlID0gdGhpcy5nZXRQb2tlbW9uU2NvcmVCeShwb2tlbW9uU2NvcmVzLCBjYXJkTGlzdCk7XG4gICAgICBwb2tlbW9uU2NvcmVTdW0gKz0gcG9rZW1vblNjb3JlO1xuICAgICAgc2NvcmUgKz0gbXVsdGlwaWVyICogcG9rZW1vblNjb3JlICogY2FyZExpc3QuZGFtYWdlO1xuICAgIH0pO1xuXG4gICAgc2NvcmUgPSBNYXRoLnJvdW5kKHNjb3JlIC8gcG9rZW1vblNjb3JlU3VtKTtcbiAgICByZXR1cm4gc2NvcmU7XG4gIH1cblxufVxuIl19