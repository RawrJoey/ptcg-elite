{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/reducers/play-card-reducer.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/reducers/play-card-reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action } from '../actions/action';\nimport { AttachEnergyEffect, PlayPokemonEffect, PlayStadiumEffect,\n  PlaySupporterEffect, AttachPokemonToolEffect, PlayItemEffect } from '../effects/play-card-effects';\nimport { CardList } from '../state/card-list';\nimport { EnergyCard } from '../card/energy-card';\nimport { GameError } from '../../game-error';\nimport { GameMessage } from '../../game-message';\nimport { PlayCardAction, PlayerType, SlotType, CardTarget } from '../actions/play-card-action';\nimport { PokemonCard } from '../card/pokemon-card';\nimport { PokemonCardList } from '../state/pokemon-card-list';\nimport { State, GamePhase } from '../state/state';\nimport { StoreLike } from '../store-like';\nimport { TrainerCard } from '../card/trainer-card';\nimport { TrainerType } from '../card/card-types';\nimport { Effect } from '../effects/effect';\nimport { StateUtils } from '../state-utils';\n\nfunction findCardList(state: State, target: CardTarget): CardList | undefined {\n  const player = target.player === PlayerType.BOTTOM_PLAYER\n    ? state.players[state.activePlayer]\n    : state.players[state.activePlayer ? 0 : 1];\n\n  switch (target.slot) {\n    case SlotType.ACTIVE:\n      return player.active;\n    case SlotType.BENCH:\n      return player.bench[target.index];\n  }\n}\n\nexport function playCardReducer(store: StoreLike, state: State, action: Action): State {\n  const player = state.players[state.activePlayer];\n\n  if (state.phase === GamePhase.PLAYER_TURN) {\n\n    if (action instanceof PlayCardAction) {\n      if (player === undefined || player.id !== action.id) {\n        throw new GameError(GameMessage.NOT_YOUR_TURN);\n      }\n\n      const handCard = player.hand.cards[action.handIndex];\n\n      if (handCard === undefined) {\n        throw new GameError(GameMessage.UNKNOWN_CARD);\n      }\n\n      if (handCard instanceof EnergyCard) {\n        const target = findCardList(state, action.target);\n        if (!(target instanceof PokemonCardList) || target.cards.length === 0) {\n          throw new GameError(GameMessage.INVALID_TARGET);\n        }\n        if (player.energyPlayedTurn === state.turn) {\n          throw new GameError(GameMessage.ENERGY_ALREADY_ATTACHED);\n        }\n        player.energyPlayedTurn = state.turn;\n\n        const effect = new AttachEnergyEffect(player, handCard, target);\n        return store.reduceEffect(state, effect);\n      }\n\n      if (handCard instanceof PokemonCard) {\n        const target = findCardList(state, action.target);\n        if (!(target instanceof PokemonCardList)) {\n          throw new GameError(GameMessage.INVALID_TARGET);\n        }\n\n        const effect = new PlayPokemonEffect(player, handCard, target);\n        return store.reduceEffect(state, effect);\n      }\n\n      if (handCard instanceof TrainerCard) {\n        const target = findCardList(state, action.target);\n        let effect: Effect;\n        switch (handCard.trainerType) {\n          case TrainerType.SUPPORTER:\n            if (state.turn === 1 && !state.rules.firstTurnUseSupporter) {\n              throw new GameError(GameMessage.CANNOT_PLAY_THIS_CARD);\n            }\n            if (player.supporter.cards.length > 0) {\n              throw new GameError(GameMessage.SUPPORTER_ALREADY_PLAYED);\n            }\n            effect = new PlaySupporterEffect(player, handCard, target);\n            break;\n          case TrainerType.STADIUM: {\n            if (player.stadiumPlayedTurn === state.turn) {\n              throw new GameError(GameMessage.STADIUM_ALREADY_PLAYED);\n            }\n            const stadium = StateUtils.getStadiumCard(state);\n            if (stadium && stadium.name === handCard.name) {\n              throw new GameError(GameMessage.SAME_STADIUM_ALREADY_IN_PLAY);\n            }\n            player.stadiumPlayedTurn = state.turn;\n            effect = new PlayStadiumEffect(player, handCard);\n            break;\n          }\n          case TrainerType.TOOL:\n            if (!(target instanceof PokemonCardList)) {\n              throw new GameError(GameMessage.INVALID_TARGET);\n            }\n            effect = new AttachPokemonToolEffect(player, handCard, target);\n            break;\n          default:\n            effect = new PlayItemEffect(player, handCard, target);\n            break;\n        }\n        return store.reduceEffect(state, effect);\n      }\n    }\n\n  }\n\n  return state;\n}\n"]}