"use strict";function cov_2lu2owkxiw(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-energy-prompt-resolver.ts";var hash="08154436bb3ccb75907e871b146328752141b385";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-energy-prompt-resolver.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:42}},"2":{start:{line:4,column:15},end:{line:4,column:36}},"3":{start:{line:5,column:26},end:{line:5,column:54}},"4":{start:{line:6,column:16},end:{line:6,column:44}},"5":{start:{line:9,column:8},end:{line:12,column:9}},"6":{start:{line:10,column:27},end:{line:10,column:62}},"7":{start:{line:11,column:12},end:{line:11,column:69}},"8":{start:{line:15,column:21},end:{line:15,column:60}},"9":{start:{line:16,column:26},end:{line:16,column:63}},"10":{start:{line:17,column:20},end:{line:17,column:38}},"11":{start:{line:18,column:20},end:{line:18,column:38}},"12":{start:{line:19,column:23},end:{line:19,column:25}},"13":{start:{line:20,column:24},end:{line:20,column:66}},"14":{start:{line:21,column:25},end:{line:21,column:30}},"15":{start:{line:22,column:8},end:{line:52,column:9}},"16":{start:{line:23,column:30},end:{line:23,column:78}},"17":{start:{line:24,column:12},end:{line:24,column:56}},"18":{start:{line:24,column:37},end:{line:24,column:54}},"19":{start:{line:25,column:12},end:{line:27,column:13}},"20":{start:{line:26,column:16},end:{line:26,column:22}},"21":{start:{line:28,column:25},end:{line:28,column:37}},"22":{start:{line:29,column:30},end:{line:29,column:62}},"23":{start:{line:30,column:12},end:{line:30,column:43}},"24":{start:{line:31,column:12},end:{line:33,column:13}},"25":{start:{line:32,column:16},end:{line:32,column:34}},"26":{start:{line:36,column:12},end:{line:38,column:13}},"27":{start:{line:37,column:16},end:{line:37,column:22}},"28":{start:{line:40,column:12},end:{line:42,column:13}},"29":{start:{line:41,column:16},end:{line:41,column:22}},"30":{start:{line:43,column:27},end:{line:43,column:53}},"31":{start:{line:44,column:27},end:{line:44,column:42}},"32":{start:{line:45,column:25},end:{line:45,column:43}},"33":{start:{line:46,column:12},end:{line:46,column:44}},"34":{start:{line:47,column:12},end:{line:47,column:30}},"35":{start:{line:48,column:12},end:{line:48,column:35}},"36":{start:{line:49,column:12},end:{line:51,column:13}},"37":{start:{line:50,column:16},end:{line:50,column:22}},"38":{start:{line:53,column:8},end:{line:55,column:9}},"39":{start:{line:54,column:12},end:{line:54,column:24}},"40":{start:{line:56,column:8},end:{line:58,column:9}},"41":{start:{line:57,column:12},end:{line:57,column:24}},"42":{start:{line:59,column:8},end:{line:59,column:58}},"43":{start:{line:62,column:23},end:{line:62,column:72}},"44":{start:{line:62,column:47},end:{line:62,column:71}},"45":{start:{line:63,column:8},end:{line:65,column:9}},"46":{start:{line:64,column:12},end:{line:64,column:22}},"47":{start:{line:66,column:8},end:{line:74,column:11}},"48":{start:{line:67,column:29},end:{line:67,column:91}},"49":{start:{line:68,column:25},end:{line:68,column:64}},"50":{start:{line:69,column:12},end:{line:73,column:14}},"51":{start:{line:77,column:24},end:{line:77,column:26}},"52":{start:{line:78,column:8},end:{line:93,column:11}},"53":{start:{line:79,column:33},end:{line:79,column:50}},"54":{start:{line:80,column:32},end:{line:80,column:88}},"55":{start:{line:81,column:12},end:{line:92,column:13}},"56":{start:{line:82,column:16},end:{line:91,column:17}},"57":{start:{line:83,column:20},end:{line:83,column:76}},"58":{start:{line:84,column:20},end:{line:89,column:23}},"59":{start:{line:90,column:20},end:{line:90,column:76}},"60":{start:{line:94,column:8},end:{line:94,column:23}},"61":{start:{line:97,column:30},end:{line:97,column:32}},"62":{start:{line:98,column:28},end:{line:98,column:86}},"63":{start:{line:99,column:8},end:{line:121,column:11}},"64":{start:{line:100,column:31},end:{line:104,column:14}},"65":{start:{line:101,column:16},end:{line:103,column:66}},"66":{start:{line:105,column:28},end:{line:105,column:64}},"67":{start:{line:106,column:29},end:{line:106,column:50}},"68":{start:{line:107,column:12},end:{line:111,column:15}},"69":{start:{line:108,column:16},end:{line:110,column:17}},"70":{start:{line:109,column:20},end:{line:109,column:46}},"71":{start:{line:112,column:12},end:{line:112,column:60}},"72":{start:{line:113,column:12},end:{line:120,column:15}},"73":{start:{line:114,column:16},end:{line:119,column:19}},"74":{start:{line:122,column:8},end:{line:122,column:29}},"75":{start:{line:125,column:23},end:{line:125,column:72}},"76":{start:{line:125,column:47},end:{line:125,column:71}},"77":{start:{line:126,column:25},end:{line:126,column:74}},"78":{start:{line:126,column:49},end:{line:126,column:73}},"79":{start:{line:127,column:8},end:{line:129,column:9}},"80":{start:{line:128,column:12},end:{line:128,column:22}},"81":{start:{line:130,column:28},end:{line:130,column:109}},"82":{start:{line:131,column:26},end:{line:131,column:110}},"83":{start:{line:132,column:22},end:{line:132,column:24}},"84":{start:{line:133,column:8},end:{line:139,column:9}},"85":{start:{line:134,column:12},end:{line:138,column:15}},"86":{start:{line:135,column:16},end:{line:137,column:17}},"87":{start:{line:136,column:20},end:{line:136,column:55}},"88":{start:{line:140,column:8},end:{line:146,column:9}},"89":{start:{line:141,column:12},end:{line:145,column:15}},"90":{start:{line:142,column:16},end:{line:144,column:17}},"91":{start:{line:143,column:20},end:{line:143,column:55}},"92":{start:{line:147,column:28},end:{line:147,column:91}},"93":{start:{line:147,column:45},end:{line:147,column:90}},"94":{start:{line:148,column:8},end:{line:148,column:73}},"95":{start:{line:148,column:38},end:{line:148,column:71}},"96":{start:{line:149,column:8},end:{line:149,column:23}},"97":{start:{line:152,column:0},end:{line:152,column:60}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:41},end:{line:13,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:35},end:{line:60,column:5}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:24,column:27},end:{line:24,column:28}},loc:{start:{line:24,column:37},end:{line:24,column:54}},line:24},"3":{name:"(anonymous_3)",decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:41},end:{line:75,column:5}},line:61},"4":{name:"(anonymous_4)",decl:{start:{line:62,column:42},end:{line:62,column:43}},loc:{start:{line:62,column:47},end:{line:62,column:71}},line:62},"5":{name:"(anonymous_5)",decl:{start:{line:66,column:25},end:{line:66,column:26}},loc:{start:{line:66,column:33},end:{line:74,column:9}},line:66},"6":{name:"(anonymous_6)",decl:{start:{line:76,column:4},end:{line:76,column:5}},loc:{start:{line:76,column:53},end:{line:95,column:5}},line:76},"7":{name:"(anonymous_7)",decl:{start:{line:78,column:30},end:{line:78,column:31}},loc:{start:{line:78,column:38},end:{line:93,column:9}},line:78},"8":{name:"(anonymous_8)",decl:{start:{line:96,column:4},end:{line:96,column:5}},loc:{start:{line:96,column:38},end:{line:123,column:5}},line:96},"9":{name:"(anonymous_9)",decl:{start:{line:99,column:28},end:{line:99,column:29}},loc:{start:{line:99,column:42},end:{line:121,column:9}},line:99},"10":{name:"(anonymous_10)",decl:{start:{line:100,column:62},end:{line:100,column:63}},loc:{start:{line:100,column:67},end:{line:104,column:13}},line:100},"11":{name:"(anonymous_11)",decl:{start:{line:107,column:46},end:{line:107,column:47}},loc:{start:{line:107,column:63},end:{line:111,column:13}},line:107},"12":{name:"(anonymous_12)",decl:{start:{line:113,column:35},end:{line:113,column:36}},loc:{start:{line:113,column:43},end:{line:120,column:13}},line:113},"13":{name:"(anonymous_13)",decl:{start:{line:124,column:4},end:{line:124,column:5}},loc:{start:{line:124,column:39},end:{line:150,column:5}},line:124},"14":{name:"(anonymous_14)",decl:{start:{line:125,column:42},end:{line:125,column:43}},loc:{start:{line:125,column:47},end:{line:125,column:71}},line:125},"15":{name:"(anonymous_15)",decl:{start:{line:126,column:44},end:{line:126,column:45}},loc:{start:{line:126,column:49},end:{line:126,column:73}},line:126},"16":{name:"(anonymous_16)",decl:{start:{line:134,column:66},end:{line:134,column:67}},loc:{start:{line:134,column:94},end:{line:138,column:13}},line:134},"17":{name:"(anonymous_17)",decl:{start:{line:141,column:67},end:{line:141,column:68}},loc:{start:{line:141,column:95},end:{line:145,column:13}},line:141},"18":{name:"(anonymous_18)",decl:{start:{line:147,column:40},end:{line:147,column:41}},loc:{start:{line:147,column:45},end:{line:147,column:90}},line:147},"19":{name:"(anonymous_19)",decl:{start:{line:148,column:33},end:{line:148,column:34}},loc:{start:{line:148,column:38},end:{line:148,column:71}},line:148}},branchMap:{"0":{loc:{start:{line:9,column:8},end:{line:12,column:9}},type:"if",locations:[{start:{line:9,column:8},end:{line:12,column:9}},{start:{line:9,column:8},end:{line:12,column:9}}],line:9},"1":{loc:{start:{line:22,column:15},end:{line:22,column:75}},type:"binary-expr",locations:[{start:{line:22,column:15},end:{line:22,column:35}},{start:{line:22,column:40},end:{line:22,column:51}},{start:{line:22,column:55},end:{line:22,column:74}}],line:22},"2":{loc:{start:{line:25,column:12},end:{line:27,column:13}},type:"if",locations:[{start:{line:25,column:12},end:{line:27,column:13}},{start:{line:25,column:12},end:{line:27,column:13}}],line:25},"3":{loc:{start:{line:31,column:12},end:{line:33,column:13}},type:"if",locations:[{start:{line:31,column:12},end:{line:33,column:13}},{start:{line:31,column:12},end:{line:33,column:13}}],line:31},"4":{loc:{start:{line:36,column:12},end:{line:38,column:13}},type:"if",locations:[{start:{line:36,column:12},end:{line:38,column:13}},{start:{line:36,column:12},end:{line:38,column:13}}],line:36},"5":{loc:{start:{line:36,column:16},end:{line:36,column:56}},type:"binary-expr",locations:[{start:{line:36,column:16},end:{line:36,column:26}},{start:{line:36,column:30},end:{line:36,column:56}}],line:36},"6":{loc:{start:{line:40,column:12},end:{line:42,column:13}},type:"if",locations:[{start:{line:40,column:12},end:{line:42,column:13}},{start:{line:40,column:12},end:{line:42,column:13}}],line:40},"7":{loc:{start:{line:40,column:16},end:{line:40,column:50}},type:"binary-expr",locations:[{start:{line:40,column:16},end:{line:40,column:26}},{start:{line:40,column:30},end:{line:40,column:50}}],line:40},"8":{loc:{start:{line:49,column:12},end:{line:51,column:13}},type:"if",locations:[{start:{line:49,column:12},end:{line:51,column:13}},{start:{line:49,column:12},end:{line:51,column:13}}],line:49},"9":{loc:{start:{line:49,column:16},end:{line:49,column:57}},type:"binary-expr",locations:[{start:{line:49,column:16},end:{line:49,column:33}},{start:{line:49,column:37},end:{line:49,column:57}}],line:49},"10":{loc:{start:{line:53,column:8},end:{line:55,column:9}},type:"if",locations:[{start:{line:53,column:8},end:{line:55,column:9}},{start:{line:53,column:8},end:{line:55,column:9}}],line:53},"11":{loc:{start:{line:53,column:12},end:{line:53,column:61}},type:"binary-expr",locations:[{start:{line:53,column:12},end:{line:53,column:31}},{start:{line:53,column:35},end:{line:53,column:61}}],line:53},"12":{loc:{start:{line:56,column:8},end:{line:58,column:9}},type:"if",locations:[{start:{line:56,column:8},end:{line:58,column:9}},{start:{line:56,column:8},end:{line:58,column:9}}],line:56},"13":{loc:{start:{line:56,column:12},end:{line:56,column:61}},type:"binary-expr",locations:[{start:{line:56,column:12},end:{line:56,column:31}},{start:{line:56,column:35},end:{line:56,column:61}}],line:56},"14":{loc:{start:{line:63,column:8},end:{line:65,column:9}},type:"if",locations:[{start:{line:63,column:8},end:{line:65,column:9}},{start:{line:63,column:8},end:{line:65,column:9}}],line:63},"15":{loc:{start:{line:82,column:16},end:{line:91,column:17}},type:"if",locations:[{start:{line:82,column:16},end:{line:91,column:17}},{start:{line:82,column:16},end:{line:91,column:17}}],line:82},"16":{loc:{start:{line:101,column:23},end:{line:103,column:65}},type:"binary-expr",locations:[{start:{line:101,column:23},end:{line:101,column:67}},{start:{line:102,column:23},end:{line:102,column:63}},{start:{line:103,column:23},end:{line:103,column:65}}],line:101},"17":{loc:{start:{line:105,column:28},end:{line:105,column:64}},type:"cond-expr",locations:[{start:{line:105,column:41},end:{line:105,column:59}},{start:{line:105,column:62},end:{line:105,column:64}}],line:105},"18":{loc:{start:{line:108,column:16},end:{line:110,column:17}},type:"if",locations:[{start:{line:108,column:16},end:{line:110,column:17}},{start:{line:108,column:16},end:{line:110,column:17}}],line:108},"19":{loc:{start:{line:127,column:8},end:{line:129,column:9}},type:"if",locations:[{start:{line:127,column:8},end:{line:129,column:9}},{start:{line:127,column:8},end:{line:129,column:9}}],line:127},"20":{loc:{start:{line:127,column:12},end:{line:127,column:58}},type:"binary-expr",locations:[{start:{line:127,column:12},end:{line:127,column:32}},{start:{line:127,column:36},end:{line:127,column:58}}],line:127},"21":{loc:{start:{line:133,column:8},end:{line:139,column:9}},type:"if",locations:[{start:{line:133,column:8},end:{line:139,column:9}},{start:{line:133,column:8},end:{line:139,column:9}}],line:133},"22":{loc:{start:{line:135,column:16},end:{line:137,column:17}},type:"if",locations:[{start:{line:135,column:16},end:{line:137,column:17}},{start:{line:135,column:16},end:{line:137,column:17}}],line:135},"23":{loc:{start:{line:140,column:8},end:{line:146,column:9}},type:"if",locations:[{start:{line:140,column:8},end:{line:146,column:9}},{start:{line:140,column:8},end:{line:146,column:9}}],line:140},"24":{loc:{start:{line:142,column:16},end:{line:144,column:17}},type:"if",locations:[{start:{line:142,column:16},end:{line:144,column:17}},{start:{line:142,column:16},end:{line:144,column:17}}],line:142}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-energy-prompt-resolver.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-energy-prompt-resolver.ts"],names:[],mappings:"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",sourcesContent:["import { Player, State, Action, ResolvePromptAction, Prompt, StateUtils,\n  PlayerType, CardList, Card, CardTarget, MoveEnergyPrompt, CardTransfer } from '../../game';\nimport { PromptResolver } from './prompt-resolver';\nimport { deepClone } from '../../utils/utils';\n\ninterface TransferItem {\n  fromItem: FromItem;\n  toCardList: CardList;\n  to: CardTarget;\n  score: number;\n}\n\ninterface TargetList {\n  cardList: CardList;\n  target: CardTarget;\n}\n\ninterface FromItem {\n  fromCardList: CardList;\n  from: CardTarget;\n  card: Card;\n  cardIndex: number;\n}\n\nexport class MoveEnergyPromptResolver extends PromptResolver {\n\n  public resolvePrompt(state: State, player: Player, prompt: Prompt<any>): Action | undefined {\n    if (prompt instanceof MoveEnergyPrompt) {\n      const result = this.getPromptResult(state, prompt);\n      return new ResolvePromptAction(prompt.id, result);\n    }\n  }\n\n  private getPromptResult(state: State, prompt: MoveEnergyPrompt): CardTransfer[] | null {\n    const copy = deepClone(state, [ Card ]);\n    const fromItems = this.buildFromCardItems(copy, prompt);\n\n    const max = prompt.options.max;\n    const min = prompt.options.min;\n    const result: TransferItem[] = [];\n\n    let prevScore = this.getStateScore(state, prompt.playerId);\n    let isNegative = false;\n\n    while (fromItems.length > 0 && (!isNegative || result.length < min)) {\n      const transfers = this.buildTransferItems(copy, prompt, fromItems);\n      transfers.sort((a, b) => b.score - a.score);\n      if (transfers.length === 0) {\n        break;\n      }\n\n      const best = transfers[0];\n      const fromIndex = fromItems.indexOf(best.fromItem);\n\n      fromItems.splice(fromIndex, 1);\n\n      if (best.score < prevScore) {\n        isNegative = true;\n      }\n\n      // Moving any card gives negative score, and we are able to cancel\n      // Don't append any results, just cancel the prompt\n      if (isNegative && prompt.options.allowCancel) {\n        break;\n      }\n\n      // Score is negative, and we already have minimum transfers\n      if (isNegative && result.length >= min) {\n        break;\n      }\n\n      const source = best.fromItem.fromCardList;\n      const target = best.toCardList;\n      const card = best.fromItem.card;\n      source.moveCardTo(card, target);\n      result.push(best);\n      prevScore = best.score;\n\n      if (max !== undefined && result.length >= max) {\n        break;\n      }\n    }\n\n    if (result.length === 0 && prompt.options.allowCancel) {\n      return null;\n    }\n\n    if (result.length < min && prompt.options.allowCancel) {\n      return null;\n    }\n\n    return this.translateItems(state, prompt, result);\n  }\n\n  private translateItems(state: State, prompt: MoveEnergyPrompt, items: TransferItem[]): CardTransfer[] {\n    const player = state.players.find(p => p.id === prompt.playerId);\n    if (player === undefined) {\n      return [];\n    }\n\n    return items.map(item => {\n      const cardList = StateUtils.getTarget(state, player, item.fromItem.from);\n      const card = cardList.cards[item.fromItem.cardIndex];\n      return {\n        from: item.fromItem.from,\n        to: item.to,\n        card\n      };\n    });\n  }\n\n  private buildTransferItems(state: State, prompt: MoveEnergyPrompt, fromCardItems: FromItem[]): TransferItem[] {\n    const results: TransferItem[] = [];\n\n    fromCardItems.forEach(item => {\n      const fromCardList = item.fromCardList;\n      const cardTargets = this.getTargets(state, prompt, prompt.options.blockedTo);\n      for (const cardTarget of cardTargets) {\n        if (cardTarget.cardList !== fromCardList) {\n          fromCardList.moveCardTo(item.card, cardTarget.cardList);\n          results.push({\n            fromItem: item,\n            to: cardTarget.target,\n            toCardList: cardTarget.cardList,\n            score: this.getStateScore(state, prompt.playerId)\n          });\n          cardTarget.cardList.moveCardTo(item.card, fromCardList);\n        }\n      }\n    });\n\n    return results;\n  }\n\n  private buildFromCardItems(state: State, prompt: MoveEnergyPrompt): FromItem[] {\n    const fromCardItems: FromItem[] = [];\n\n    const fromTargets = this.getTargets(state, prompt, prompt.options.blockedFrom);\n    fromTargets.forEach(fromTarget => {\n      const blockedMap = prompt.options.blockedMap.find(b => {\n        return b.source.player === fromTarget.target.player\n          && b.source.slot === fromTarget.target.slot\n          && b.source.index === fromTarget.target.index;\n      });\n      const blocked = blockedMap ? blockedMap.blocked : [];\n      const cardList = new CardList();\n      fromTarget.cardList.cards.forEach((card, index) => {\n        if (!blocked.includes(index)) {\n          cardList.cards.push(card);\n        }\n      });\n      cardList.cards = cardList.filter(prompt.filter);\n      cardList.cards.forEach(card => {\n        fromCardItems.push({\n          fromCardList: fromTarget.cardList,\n          from: fromTarget.target,\n          card: card,\n          cardIndex: fromTarget.cardList.cards.indexOf(card)\n        });\n      });\n    });\n    return fromCardItems;\n  }\n\n  private getTargets(state: State, prompt: MoveEnergyPrompt, blocked: CardTarget[]): TargetList[] {\n    const player = state.players.find(p => p.id === prompt.playerId);\n    const opponent = state.players.find(p => p.id !== prompt.playerId);\n    if (player === undefined || opponent === undefined) {\n      return [];\n    }\n    const hasOpponent = [PlayerType.TOP_PLAYER, PlayerType.ANY].includes(prompt.playerType);\n    const hasPlayer = [PlayerType.BOTTOM_PLAYER, PlayerType.ANY].includes(prompt.playerType);\n    let results: TargetList[] = [];\n    if (hasOpponent) {\n      opponent.forEachPokemon(PlayerType.TOP_PLAYER, (cardList, card, target) => {\n        if (prompt.slots.includes(target.slot)) {\n          results.push({ target, cardList });\n        }\n      });\n    }\n    if (hasPlayer) {\n      player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, card, target) => {\n        if (prompt.slots.includes(target.slot)) {\n          results.push({ target, cardList });\n        }\n      });\n    }\n\n    const blockedList: CardList[] = blocked.map(b => StateUtils.getTarget(state, player, b));\n    results = results.filter(i => !blockedList.includes(i.cardList));\n    return results;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"08154436bb3ccb75907e871b146328752141b385"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2lu2owkxiw=function(){return actualCoverage;};}return actualCoverage;}cov_2lu2owkxiw();cov_2lu2owkxiw().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2lu2owkxiw().s[1]++;exports.MoveEnergyPromptResolver=void 0;const game_1=(cov_2lu2owkxiw().s[2]++,require("../../game"));const prompt_resolver_1=(cov_2lu2owkxiw().s[3]++,require("./prompt-resolver"));const utils_1=(cov_2lu2owkxiw().s[4]++,require("../../utils/utils"));class MoveEnergyPromptResolver extends(prompt_resolver_1.PromptResolver){resolvePrompt(state,player,prompt){cov_2lu2owkxiw().f[0]++;cov_2lu2owkxiw().s[5]++;if(prompt instanceof game_1.MoveEnergyPrompt){cov_2lu2owkxiw().b[0][0]++;const result=(cov_2lu2owkxiw().s[6]++,this.getPromptResult(state,prompt));cov_2lu2owkxiw().s[7]++;return new game_1.ResolvePromptAction(prompt.id,result);}else{cov_2lu2owkxiw().b[0][1]++;}}getPromptResult(state,prompt){cov_2lu2owkxiw().f[1]++;const copy=(cov_2lu2owkxiw().s[8]++,utils_1.deepClone(state,[game_1.Card]));const fromItems=(cov_2lu2owkxiw().s[9]++,this.buildFromCardItems(copy,prompt));const max=(cov_2lu2owkxiw().s[10]++,prompt.options.max);const min=(cov_2lu2owkxiw().s[11]++,prompt.options.min);const result=(cov_2lu2owkxiw().s[12]++,[]);let prevScore=(cov_2lu2owkxiw().s[13]++,this.getStateScore(state,prompt.playerId));let isNegative=(cov_2lu2owkxiw().s[14]++,false);cov_2lu2owkxiw().s[15]++;while((cov_2lu2owkxiw().b[1][0]++,fromItems.length>0)&&((cov_2lu2owkxiw().b[1][1]++,!isNegative)||(cov_2lu2owkxiw().b[1][2]++,result.length<min))){const transfers=(cov_2lu2owkxiw().s[16]++,this.buildTransferItems(copy,prompt,fromItems));cov_2lu2owkxiw().s[17]++;transfers.sort((a,b)=>{cov_2lu2owkxiw().f[2]++;cov_2lu2owkxiw().s[18]++;return b.score-a.score;});cov_2lu2owkxiw().s[19]++;if(transfers.length===0){cov_2lu2owkxiw().b[2][0]++;cov_2lu2owkxiw().s[20]++;break;}else{cov_2lu2owkxiw().b[2][1]++;}const best=(cov_2lu2owkxiw().s[21]++,transfers[0]);const fromIndex=(cov_2lu2owkxiw().s[22]++,fromItems.indexOf(best.fromItem));cov_2lu2owkxiw().s[23]++;fromItems.splice(fromIndex,1);cov_2lu2owkxiw().s[24]++;if(best.score<prevScore){cov_2lu2owkxiw().b[3][0]++;cov_2lu2owkxiw().s[25]++;isNegative=true;}else{cov_2lu2owkxiw().b[3][1]++;}// Moving any card gives negative score, and we are able to cancel
// Don't append any results, just cancel the prompt
cov_2lu2owkxiw().s[26]++;if((cov_2lu2owkxiw().b[5][0]++,isNegative)&&(cov_2lu2owkxiw().b[5][1]++,prompt.options.allowCancel)){cov_2lu2owkxiw().b[4][0]++;cov_2lu2owkxiw().s[27]++;break;}else{cov_2lu2owkxiw().b[4][1]++;}// Score is negative, and we already have minimum transfers
cov_2lu2owkxiw().s[28]++;if((cov_2lu2owkxiw().b[7][0]++,isNegative)&&(cov_2lu2owkxiw().b[7][1]++,result.length>=min)){cov_2lu2owkxiw().b[6][0]++;cov_2lu2owkxiw().s[29]++;break;}else{cov_2lu2owkxiw().b[6][1]++;}const source=(cov_2lu2owkxiw().s[30]++,best.fromItem.fromCardList);const target=(cov_2lu2owkxiw().s[31]++,best.toCardList);const card=(cov_2lu2owkxiw().s[32]++,best.fromItem.card);cov_2lu2owkxiw().s[33]++;source.moveCardTo(card,target);cov_2lu2owkxiw().s[34]++;result.push(best);cov_2lu2owkxiw().s[35]++;prevScore=best.score;cov_2lu2owkxiw().s[36]++;if((cov_2lu2owkxiw().b[9][0]++,max!==undefined)&&(cov_2lu2owkxiw().b[9][1]++,result.length>=max)){cov_2lu2owkxiw().b[8][0]++;cov_2lu2owkxiw().s[37]++;break;}else{cov_2lu2owkxiw().b[8][1]++;}}cov_2lu2owkxiw().s[38]++;if((cov_2lu2owkxiw().b[11][0]++,result.length===0)&&(cov_2lu2owkxiw().b[11][1]++,prompt.options.allowCancel)){cov_2lu2owkxiw().b[10][0]++;cov_2lu2owkxiw().s[39]++;return null;}else{cov_2lu2owkxiw().b[10][1]++;}cov_2lu2owkxiw().s[40]++;if((cov_2lu2owkxiw().b[13][0]++,result.length<min)&&(cov_2lu2owkxiw().b[13][1]++,prompt.options.allowCancel)){cov_2lu2owkxiw().b[12][0]++;cov_2lu2owkxiw().s[41]++;return null;}else{cov_2lu2owkxiw().b[12][1]++;}cov_2lu2owkxiw().s[42]++;return this.translateItems(state,prompt,result);}translateItems(state,prompt,items){cov_2lu2owkxiw().f[3]++;const player=(cov_2lu2owkxiw().s[43]++,state.players.find(p=>{cov_2lu2owkxiw().f[4]++;cov_2lu2owkxiw().s[44]++;return p.id===prompt.playerId;}));cov_2lu2owkxiw().s[45]++;if(player===undefined){cov_2lu2owkxiw().b[14][0]++;cov_2lu2owkxiw().s[46]++;return[];}else{cov_2lu2owkxiw().b[14][1]++;}cov_2lu2owkxiw().s[47]++;return items.map(item=>{cov_2lu2owkxiw().f[5]++;const cardList=(cov_2lu2owkxiw().s[48]++,game_1.StateUtils.getTarget(state,player,item.fromItem.from));const card=(cov_2lu2owkxiw().s[49]++,cardList.cards[item.fromItem.cardIndex]);cov_2lu2owkxiw().s[50]++;return{from:item.fromItem.from,to:item.to,card};});}buildTransferItems(state,prompt,fromCardItems){cov_2lu2owkxiw().f[6]++;const results=(cov_2lu2owkxiw().s[51]++,[]);cov_2lu2owkxiw().s[52]++;fromCardItems.forEach(item=>{cov_2lu2owkxiw().f[7]++;const fromCardList=(cov_2lu2owkxiw().s[53]++,item.fromCardList);const cardTargets=(cov_2lu2owkxiw().s[54]++,this.getTargets(state,prompt,prompt.options.blockedTo));cov_2lu2owkxiw().s[55]++;for(const cardTarget of cardTargets){cov_2lu2owkxiw().s[56]++;if(cardTarget.cardList!==fromCardList){cov_2lu2owkxiw().b[15][0]++;cov_2lu2owkxiw().s[57]++;fromCardList.moveCardTo(item.card,cardTarget.cardList);cov_2lu2owkxiw().s[58]++;results.push({fromItem:item,to:cardTarget.target,toCardList:cardTarget.cardList,score:this.getStateScore(state,prompt.playerId)});cov_2lu2owkxiw().s[59]++;cardTarget.cardList.moveCardTo(item.card,fromCardList);}else{cov_2lu2owkxiw().b[15][1]++;}}});cov_2lu2owkxiw().s[60]++;return results;}buildFromCardItems(state,prompt){cov_2lu2owkxiw().f[8]++;const fromCardItems=(cov_2lu2owkxiw().s[61]++,[]);const fromTargets=(cov_2lu2owkxiw().s[62]++,this.getTargets(state,prompt,prompt.options.blockedFrom));cov_2lu2owkxiw().s[63]++;fromTargets.forEach(fromTarget=>{cov_2lu2owkxiw().f[9]++;const blockedMap=(cov_2lu2owkxiw().s[64]++,prompt.options.blockedMap.find(b=>{cov_2lu2owkxiw().f[10]++;cov_2lu2owkxiw().s[65]++;return(cov_2lu2owkxiw().b[16][0]++,b.source.player===fromTarget.target.player)&&(cov_2lu2owkxiw().b[16][1]++,b.source.slot===fromTarget.target.slot)&&(cov_2lu2owkxiw().b[16][2]++,b.source.index===fromTarget.target.index);}));const blocked=(cov_2lu2owkxiw().s[66]++,blockedMap?(cov_2lu2owkxiw().b[17][0]++,blockedMap.blocked):(cov_2lu2owkxiw().b[17][1]++,[]));const cardList=(cov_2lu2owkxiw().s[67]++,new game_1.CardList());cov_2lu2owkxiw().s[68]++;fromTarget.cardList.cards.forEach((card,index)=>{cov_2lu2owkxiw().f[11]++;cov_2lu2owkxiw().s[69]++;if(!blocked.includes(index)){cov_2lu2owkxiw().b[18][0]++;cov_2lu2owkxiw().s[70]++;cardList.cards.push(card);}else{cov_2lu2owkxiw().b[18][1]++;}});cov_2lu2owkxiw().s[71]++;cardList.cards=cardList.filter(prompt.filter);cov_2lu2owkxiw().s[72]++;cardList.cards.forEach(card=>{cov_2lu2owkxiw().f[12]++;cov_2lu2owkxiw().s[73]++;fromCardItems.push({fromCardList:fromTarget.cardList,from:fromTarget.target,card:card,cardIndex:fromTarget.cardList.cards.indexOf(card)});});});cov_2lu2owkxiw().s[74]++;return fromCardItems;}getTargets(state,prompt,blocked){cov_2lu2owkxiw().f[13]++;const player=(cov_2lu2owkxiw().s[75]++,state.players.find(p=>{cov_2lu2owkxiw().f[14]++;cov_2lu2owkxiw().s[76]++;return p.id===prompt.playerId;}));const opponent=(cov_2lu2owkxiw().s[77]++,state.players.find(p=>{cov_2lu2owkxiw().f[15]++;cov_2lu2owkxiw().s[78]++;return p.id!==prompt.playerId;}));cov_2lu2owkxiw().s[79]++;if((cov_2lu2owkxiw().b[20][0]++,player===undefined)||(cov_2lu2owkxiw().b[20][1]++,opponent===undefined)){cov_2lu2owkxiw().b[19][0]++;cov_2lu2owkxiw().s[80]++;return[];}else{cov_2lu2owkxiw().b[19][1]++;}const hasOpponent=(cov_2lu2owkxiw().s[81]++,[game_1.PlayerType.TOP_PLAYER,game_1.PlayerType.ANY].includes(prompt.playerType));const hasPlayer=(cov_2lu2owkxiw().s[82]++,[game_1.PlayerType.BOTTOM_PLAYER,game_1.PlayerType.ANY].includes(prompt.playerType));let results=(cov_2lu2owkxiw().s[83]++,[]);cov_2lu2owkxiw().s[84]++;if(hasOpponent){cov_2lu2owkxiw().b[21][0]++;cov_2lu2owkxiw().s[85]++;opponent.forEachPokemon(game_1.PlayerType.TOP_PLAYER,(cardList,card,target)=>{cov_2lu2owkxiw().f[16]++;cov_2lu2owkxiw().s[86]++;if(prompt.slots.includes(target.slot)){cov_2lu2owkxiw().b[22][0]++;cov_2lu2owkxiw().s[87]++;results.push({target,cardList});}else{cov_2lu2owkxiw().b[22][1]++;}});}else{cov_2lu2owkxiw().b[21][1]++;}cov_2lu2owkxiw().s[88]++;if(hasPlayer){cov_2lu2owkxiw().b[23][0]++;cov_2lu2owkxiw().s[89]++;player.forEachPokemon(game_1.PlayerType.BOTTOM_PLAYER,(cardList,card,target)=>{cov_2lu2owkxiw().f[17]++;cov_2lu2owkxiw().s[90]++;if(prompt.slots.includes(target.slot)){cov_2lu2owkxiw().b[24][0]++;cov_2lu2owkxiw().s[91]++;results.push({target,cardList});}else{cov_2lu2owkxiw().b[24][1]++;}});}else{cov_2lu2owkxiw().b[23][1]++;}const blockedList=(cov_2lu2owkxiw().s[92]++,blocked.map(b=>{cov_2lu2owkxiw().f[18]++;cov_2lu2owkxiw().s[93]++;return game_1.StateUtils.getTarget(state,player,b);}));cov_2lu2owkxiw().s[94]++;results=results.filter(i=>{cov_2lu2owkxiw().f[19]++;cov_2lu2owkxiw().s[95]++;return!blockedList.includes(i.cardList);});cov_2lu2owkxiw().s[96]++;return results;}}cov_2lu2owkxiw().s[97]++;exports.MoveEnergyPromptResolver=MoveEnergyPromptResolver;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9zaW1wbGUtYm90L3Byb21wdC1yZXNvbHZlci9tb3ZlLWVuZXJneS1wcm9tcHQtcmVzb2x2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjRwM0JBbUNJOzRPQW5DSixLQUFBLENBQUEsTUFBQSwwQkFBQSxPQUFBLENBQUEsWUFBQSxDQUFBLENBQUEsQ0FFQSxLQUFBLENBQUEsaUJBQUEsMEJBQUEsT0FBQSxDQUFBLG1CQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxPQUFBLDBCQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FxQkEsS0FBYSxDQUFBLHdCQUFiLFNBQThDLGlCQUFBLENBQUEsY0FBOUMsQ0FBNEQsQ0FFbkQsYUFBYSxDQUFDLEtBQUQsQ0FBZSxNQUFmLENBQStCLE1BQS9CLENBQWtELGlEQUNwRSxHQUFJLE1BQU0sV0FBWSxDQUFBLE1BQUEsQ0FBQSxnQkFBdEIsQ0FBd0MsNEJBQ3RDLEtBQU0sQ0FBQSxNQUFNLDBCQUFHLEtBQUssZUFBTCxDQUFxQixLQUFyQixDQUE0QixNQUE1QixDQUFILENBQVosQ0FEc0Msd0JBRXRDLE1BQU8sSUFBSSxDQUFBLE1BQUEsQ0FBQSxtQkFBSixDQUF3QixNQUFNLENBQUMsRUFBL0IsQ0FBbUMsTUFBbkMsQ0FBUCxDQUNELENBSEQsaUNBSUQsQ0FFTyxlQUFlLENBQUMsS0FBRCxDQUFlLE1BQWYsQ0FBdUMseUJBQzVELEtBQU0sQ0FBQSxJQUFJLDBCQUFHLE9BQUEsQ0FBQSxTQUFBLENBQVUsS0FBVixDQUFpQixDQUFFLE1BQUEsQ0FBQSxJQUFGLENBQWpCLENBQUgsQ0FBVixDQUNBLEtBQU0sQ0FBQSxTQUFTLDBCQUFHLEtBQUssa0JBQUwsQ0FBd0IsSUFBeEIsQ0FBOEIsTUFBOUIsQ0FBSCxDQUFmLENBRUEsS0FBTSxDQUFBLEdBQUcsMkJBQUcsTUFBTSxDQUFDLE9BQVAsQ0FBZSxHQUFsQixDQUFULENBQ0EsS0FBTSxDQUFBLEdBQUcsMkJBQUcsTUFBTSxDQUFDLE9BQVAsQ0FBZSxHQUFsQixDQUFULENBQ0EsS0FBTSxDQUFBLE1BQU0sMkJBQW1CLEVBQW5CLENBQVosQ0FFQSxHQUFJLENBQUEsU0FBUywyQkFBRyxLQUFLLGFBQUwsQ0FBbUIsS0FBbkIsQ0FBMEIsTUFBTSxDQUFDLFFBQWpDLENBQUgsQ0FBYixDQUNBLEdBQUksQ0FBQSxVQUFVLDJCQUFHLEtBQUgsQ0FBZCxDQVQ0RCx5QkFXNUQsTUFBTyw0QkFBQSxTQUFTLENBQUMsTUFBVixDQUFtQixDQUFuQixJQUF5Qiw2QkFBQyxVQUFELCtCQUFlLE1BQU0sQ0FBQyxNQUFQLENBQWdCLEdBQS9CLENBQXpCLENBQVAsQ0FBcUUsQ0FDbkUsS0FBTSxDQUFBLFNBQVMsMkJBQUcsS0FBSyxrQkFBTCxDQUF3QixJQUF4QixDQUE4QixNQUE5QixDQUFzQyxTQUF0QyxDQUFILENBQWYsQ0FEbUUseUJBRW5FLFNBQVMsQ0FBQyxJQUFWLENBQWUsQ0FBQyxDQUFELENBQUksQ0FBSixHQUFVLHdEQUFBLENBQUEsQ0FBQyxDQUFDLEtBQUYsQ0FBVSxDQUFDLENBQUMsS0FBWixDQUFpQixDQUExQyxFQUZtRSx5QkFHbkUsR0FBSSxTQUFTLENBQUMsTUFBVixHQUFxQixDQUF6QixDQUE0QixxREFDMUIsTUFDRCxDQUZELGlDQUlBLEtBQU0sQ0FBQSxJQUFJLDJCQUFHLFNBQVMsQ0FBQyxDQUFELENBQVosQ0FBVixDQUNBLEtBQU0sQ0FBQSxTQUFTLDJCQUFHLFNBQVMsQ0FBQyxPQUFWLENBQWtCLElBQUksQ0FBQyxRQUF2QixDQUFILENBQWYsQ0FSbUUseUJBVW5FLFNBQVMsQ0FBQyxNQUFWLENBQWlCLFNBQWpCLENBQTRCLENBQTVCLEVBVm1FLHlCQVluRSxHQUFJLElBQUksQ0FBQyxLQUFMLENBQWEsU0FBakIsQ0FBNEIscURBQzFCLFVBQVUsQ0FBRyxJQUFiLENBQ0QsQ0FGRCxpQ0FJQTtBQUNBO0FBakJtRSx5QkFrQm5FLEdBQUksNEJBQUEsVUFBVSwrQkFBSSxNQUFNLENBQUMsT0FBUCxDQUFlLFdBQW5CLENBQWQsQ0FBOEMscURBQzVDLE1BQ0QsQ0FGRCxpQ0FJQTtBQXRCbUUseUJBdUJuRSxHQUFJLDRCQUFBLFVBQVUsK0JBQUksTUFBTSxDQUFDLE1BQVAsRUFBaUIsR0FBckIsQ0FBZCxDQUF3QyxxREFDdEMsTUFDRCxDQUZELGlDQUlBLEtBQU0sQ0FBQSxNQUFNLDJCQUFHLElBQUksQ0FBQyxRQUFMLENBQWMsWUFBakIsQ0FBWixDQUNBLEtBQU0sQ0FBQSxNQUFNLDJCQUFHLElBQUksQ0FBQyxVQUFSLENBQVosQ0FDQSxLQUFNLENBQUEsSUFBSSwyQkFBRyxJQUFJLENBQUMsUUFBTCxDQUFjLElBQWpCLENBQVYsQ0E3Qm1FLHlCQThCbkUsTUFBTSxDQUFDLFVBQVAsQ0FBa0IsSUFBbEIsQ0FBd0IsTUFBeEIsRUE5Qm1FLHlCQStCbkUsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFaLEVBL0JtRSx5QkFnQ25FLFNBQVMsQ0FBRyxJQUFJLENBQUMsS0FBakIsQ0FoQ21FLHlCQWtDbkUsR0FBSSw0QkFBQSxHQUFHLEdBQUssU0FBUiwrQkFBcUIsTUFBTSxDQUFDLE1BQVAsRUFBaUIsR0FBdEMsQ0FBSixDQUErQyxxREFDN0MsTUFDRCxDQUZELGlDQUdELENBaEQyRCx5QkFrRDVELEdBQUksNkJBQUEsTUFBTSxDQUFDLE1BQVAsR0FBa0IsQ0FBbEIsZ0NBQXVCLE1BQU0sQ0FBQyxPQUFQLENBQWUsV0FBdEMsQ0FBSixDQUF1RCxzREFDckQsTUFBTyxLQUFQLENBQ0QsQ0FGRCxrQ0FsRDRELHlCQXNENUQsR0FBSSw2QkFBQSxNQUFNLENBQUMsTUFBUCxDQUFnQixHQUFoQixnQ0FBdUIsTUFBTSxDQUFDLE9BQVAsQ0FBZSxXQUF0QyxDQUFKLENBQXVELHNEQUNyRCxNQUFPLEtBQVAsQ0FDRCxDQUZELGtDQXRENEQseUJBMEQ1RCxNQUFPLE1BQUssY0FBTCxDQUFvQixLQUFwQixDQUEyQixNQUEzQixDQUFtQyxNQUFuQyxDQUFQLENBQ0QsQ0FFTyxjQUFjLENBQUMsS0FBRCxDQUFlLE1BQWYsQ0FBeUMsS0FBekMsQ0FBOEQseUJBQ2xGLEtBQU0sQ0FBQSxNQUFNLDJCQUFHLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxDQUFtQixDQUFDLEVBQUksd0RBQUEsQ0FBQSxDQUFDLENBQUMsRUFBRixHQUFTLE1BQU0sQ0FBQyxRQUFoQixDQUF3QixDQUFoRCxDQUFILENBQVosQ0FEa0YseUJBRWxGLEdBQUksTUFBTSxHQUFLLFNBQWYsQ0FBMEIsc0RBQ3hCLE1BQU8sRUFBUCxDQUNELENBRkQsa0NBRmtGLHlCQU1sRixNQUFPLENBQUEsS0FBSyxDQUFDLEdBQU4sQ0FBVSxJQUFJLEVBQUcseUJBQ3RCLEtBQU0sQ0FBQSxRQUFRLDJCQUFHLE1BQUEsQ0FBQSxVQUFBLENBQVcsU0FBWCxDQUFxQixLQUFyQixDQUE0QixNQUE1QixDQUFvQyxJQUFJLENBQUMsUUFBTCxDQUFjLElBQWxELENBQUgsQ0FBZCxDQUNBLEtBQU0sQ0FBQSxJQUFJLDJCQUFHLFFBQVEsQ0FBQyxLQUFULENBQWUsSUFBSSxDQUFDLFFBQUwsQ0FBYyxTQUE3QixDQUFILENBQVYsQ0FGc0IseUJBR3RCLE1BQU8sQ0FDTCxJQUFJLENBQUUsSUFBSSxDQUFDLFFBQUwsQ0FBYyxJQURmLENBRUwsRUFBRSxDQUFFLElBQUksQ0FBQyxFQUZKLENBR0wsSUFISyxDQUFQLENBS0QsQ0FSTSxDQUFQLENBU0QsQ0FFTyxrQkFBa0IsQ0FBQyxLQUFELENBQWUsTUFBZixDQUF5QyxhQUF6QyxDQUFrRSx5QkFDMUYsS0FBTSxDQUFBLE9BQU8sMkJBQW1CLEVBQW5CLENBQWIsQ0FEMEYseUJBRzFGLGFBQWEsQ0FBQyxPQUFkLENBQXNCLElBQUksRUFBRyx5QkFDM0IsS0FBTSxDQUFBLFlBQVksMkJBQUcsSUFBSSxDQUFDLFlBQVIsQ0FBbEIsQ0FDQSxLQUFNLENBQUEsV0FBVywyQkFBRyxLQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsQ0FBdUIsTUFBdkIsQ0FBK0IsTUFBTSxDQUFDLE9BQVAsQ0FBZSxTQUE5QyxDQUFILENBQWpCLENBRjJCLHlCQUczQixJQUFLLEtBQU0sQ0FBQSxVQUFYLEdBQXlCLENBQUEsV0FBekIsQ0FBc0MsMEJBQ3BDLEdBQUksVUFBVSxDQUFDLFFBQVgsR0FBd0IsWUFBNUIsQ0FBMEMsc0RBQ3hDLFlBQVksQ0FBQyxVQUFiLENBQXdCLElBQUksQ0FBQyxJQUE3QixDQUFtQyxVQUFVLENBQUMsUUFBOUMsRUFEd0MseUJBRXhDLE9BQU8sQ0FBQyxJQUFSLENBQWEsQ0FDWCxRQUFRLENBQUUsSUFEQyxDQUVYLEVBQUUsQ0FBRSxVQUFVLENBQUMsTUFGSixDQUdYLFVBQVUsQ0FBRSxVQUFVLENBQUMsUUFIWixDQUlYLEtBQUssQ0FBRSxLQUFLLGFBQUwsQ0FBbUIsS0FBbkIsQ0FBMEIsTUFBTSxDQUFDLFFBQWpDLENBSkksQ0FBYixFQUZ3Qyx5QkFReEMsVUFBVSxDQUFDLFFBQVgsQ0FBb0IsVUFBcEIsQ0FBK0IsSUFBSSxDQUFDLElBQXBDLENBQTBDLFlBQTFDLEVBQ0QsQ0FURCxrQ0FVRCxDQUNGLENBZkQsRUFIMEYseUJBb0IxRixNQUFPLENBQUEsT0FBUCxDQUNELENBRU8sa0JBQWtCLENBQUMsS0FBRCxDQUFlLE1BQWYsQ0FBdUMseUJBQy9ELEtBQU0sQ0FBQSxhQUFhLDJCQUFlLEVBQWYsQ0FBbkIsQ0FFQSxLQUFNLENBQUEsV0FBVywyQkFBRyxLQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsQ0FBdUIsTUFBdkIsQ0FBK0IsTUFBTSxDQUFDLE9BQVAsQ0FBZSxXQUE5QyxDQUFILENBQWpCLENBSCtELHlCQUkvRCxXQUFXLENBQUMsT0FBWixDQUFvQixVQUFVLEVBQUcseUJBQy9CLEtBQU0sQ0FBQSxVQUFVLDJCQUFHLE1BQU0sQ0FBQyxPQUFQLENBQWUsVUFBZixDQUEwQixJQUExQixDQUErQixDQUFDLEVBQUcsbURBQ3BELE1BQU8sNkJBQUEsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxNQUFULEdBQW9CLFVBQVUsQ0FBQyxNQUFYLENBQWtCLE1BQXRDLGdDQUNGLENBQUMsQ0FBQyxNQUFGLENBQVMsSUFBVCxHQUFrQixVQUFVLENBQUMsTUFBWCxDQUFrQixJQURsQyxnQ0FFRixDQUFDLENBQUMsTUFBRixDQUFTLEtBQVQsR0FBbUIsVUFBVSxDQUFDLE1BQVgsQ0FBa0IsS0FGbkMsQ0FBUCxDQUdELENBSmtCLENBQUgsQ0FBaEIsQ0FLQSxLQUFNLENBQUEsT0FBTywyQkFBRyxVQUFVLDhCQUFHLFVBQVUsQ0FBQyxPQUFkLCtCQUF3QixFQUF4QixDQUFiLENBQWIsQ0FDQSxLQUFNLENBQUEsUUFBUSwyQkFBRyxHQUFJLENBQUEsTUFBQSxDQUFBLFFBQUosRUFBSCxDQUFkLENBUCtCLHlCQVEvQixVQUFVLENBQUMsUUFBWCxDQUFvQixLQUFwQixDQUEwQixPQUExQixDQUFrQyxDQUFDLElBQUQsQ0FBTyxLQUFQLEdBQWdCLG1EQUNoRCxHQUFJLENBQUMsT0FBTyxDQUFDLFFBQVIsQ0FBaUIsS0FBakIsQ0FBTCxDQUE4QixzREFDNUIsUUFBUSxDQUFDLEtBQVQsQ0FBZSxJQUFmLENBQW9CLElBQXBCLEVBQ0QsQ0FGRCxrQ0FHRCxDQUpELEVBUitCLHlCQWEvQixRQUFRLENBQUMsS0FBVCxDQUFpQixRQUFRLENBQUMsTUFBVCxDQUFnQixNQUFNLENBQUMsTUFBdkIsQ0FBakIsQ0FiK0IseUJBYy9CLFFBQVEsQ0FBQyxLQUFULENBQWUsT0FBZixDQUF1QixJQUFJLEVBQUcsbURBQzVCLGFBQWEsQ0FBQyxJQUFkLENBQW1CLENBQ2pCLFlBQVksQ0FBRSxVQUFVLENBQUMsUUFEUixDQUVqQixJQUFJLENBQUUsVUFBVSxDQUFDLE1BRkEsQ0FHakIsSUFBSSxDQUFFLElBSFcsQ0FJakIsU0FBUyxDQUFFLFVBQVUsQ0FBQyxRQUFYLENBQW9CLEtBQXBCLENBQTBCLE9BQTFCLENBQWtDLElBQWxDLENBSk0sQ0FBbkIsRUFNRCxDQVBELEVBUUQsQ0F0QkQsRUFKK0QseUJBMkIvRCxNQUFPLENBQUEsYUFBUCxDQUNELENBRU8sVUFBVSxDQUFDLEtBQUQsQ0FBZSxNQUFmLENBQXlDLE9BQXpDLENBQThELDBCQUM5RSxLQUFNLENBQUEsTUFBTSwyQkFBRyxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsQ0FBbUIsQ0FBQyxFQUFJLHlEQUFBLENBQUEsQ0FBQyxDQUFDLEVBQUYsR0FBUyxNQUFNLENBQUMsUUFBaEIsQ0FBd0IsQ0FBaEQsQ0FBSCxDQUFaLENBQ0EsS0FBTSxDQUFBLFFBQVEsMkJBQUcsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLENBQW1CLENBQUMsRUFBSSx5REFBQSxDQUFBLENBQUMsQ0FBQyxFQUFGLEdBQVMsTUFBTSxDQUFDLFFBQWhCLENBQXdCLENBQWhELENBQUgsQ0FBZCxDQUY4RSx5QkFHOUUsR0FBSSw2QkFBQSxNQUFNLEdBQUssU0FBWCxnQ0FBd0IsUUFBUSxHQUFLLFNBQXJDLENBQUosQ0FBb0Qsc0RBQ2xELE1BQU8sRUFBUCxDQUNELENBRkQsa0NBR0EsS0FBTSxDQUFBLFdBQVcsMkJBQUcsQ0FBQyxNQUFBLENBQUEsVUFBQSxDQUFXLFVBQVosQ0FBd0IsTUFBQSxDQUFBLFVBQUEsQ0FBVyxHQUFuQyxFQUF3QyxRQUF4QyxDQUFpRCxNQUFNLENBQUMsVUFBeEQsQ0FBSCxDQUFqQixDQUNBLEtBQU0sQ0FBQSxTQUFTLDJCQUFHLENBQUMsTUFBQSxDQUFBLFVBQUEsQ0FBVyxhQUFaLENBQTJCLE1BQUEsQ0FBQSxVQUFBLENBQVcsR0FBdEMsRUFBMkMsUUFBM0MsQ0FBb0QsTUFBTSxDQUFDLFVBQTNELENBQUgsQ0FBZixDQUNBLEdBQUksQ0FBQSxPQUFPLDJCQUFpQixFQUFqQixDQUFYLENBUjhFLHlCQVM5RSxHQUFJLFdBQUosQ0FBaUIsc0RBQ2YsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsTUFBQSxDQUFBLFVBQUEsQ0FBVyxVQUFuQyxDQUErQyxDQUFDLFFBQUQsQ0FBVyxJQUFYLENBQWlCLE1BQWpCLEdBQTJCLG1EQUN4RSxHQUFJLE1BQU0sQ0FBQyxLQUFQLENBQWEsUUFBYixDQUFzQixNQUFNLENBQUMsSUFBN0IsQ0FBSixDQUF3QyxzREFDdEMsT0FBTyxDQUFDLElBQVIsQ0FBYSxDQUFFLE1BQUYsQ0FBVSxRQUFWLENBQWIsRUFDRCxDQUZELGtDQUdELENBSkQsRUFLRCxDQU5ELGtDQVQ4RSx5QkFnQjlFLEdBQUksU0FBSixDQUFlLHNEQUNiLE1BQU0sQ0FBQyxjQUFQLENBQXNCLE1BQUEsQ0FBQSxVQUFBLENBQVcsYUFBakMsQ0FBZ0QsQ0FBQyxRQUFELENBQVcsSUFBWCxDQUFpQixNQUFqQixHQUEyQixtREFDekUsR0FBSSxNQUFNLENBQUMsS0FBUCxDQUFhLFFBQWIsQ0FBc0IsTUFBTSxDQUFDLElBQTdCLENBQUosQ0FBd0Msc0RBQ3RDLE9BQU8sQ0FBQyxJQUFSLENBQWEsQ0FBRSxNQUFGLENBQVUsUUFBVixDQUFiLEVBQ0QsQ0FGRCxrQ0FHRCxDQUpELEVBS0QsQ0FORCxrQ0FRQSxLQUFNLENBQUEsV0FBVywyQkFBZSxPQUFPLENBQUMsR0FBUixDQUFZLENBQUMsRUFBSSx5REFBQSxDQUFBLE1BQUEsQ0FBQSxVQUFBLENBQVcsU0FBWCxDQUFxQixLQUFyQixDQUE0QixNQUE1QixDQUFvQyxDQUFwQyxFQUFzQyxDQUF2RCxDQUFmLENBQWpCLENBeEI4RSx5QkF5QjlFLE9BQU8sQ0FBRyxPQUFPLENBQUMsTUFBUixDQUFlLENBQUMsRUFBSSwwREFBQyxXQUFXLENBQUMsUUFBWixDQUFxQixDQUFDLENBQUMsUUFBdkIsQ0FBRCxDQUFpQyxDQUFyRCxDQUFWLENBekI4RSx5QkEwQjlFLE1BQU8sQ0FBQSxPQUFQLENBQ0QsQ0F2S3lELEMseUJBQTVELE9BQUEsQ0FBQSx3QkFBQSxDQUFBLHdCQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbGF5ZXIsIFN0YXRlLCBBY3Rpb24sIFJlc29sdmVQcm9tcHRBY3Rpb24sIFByb21wdCwgU3RhdGVVdGlscyxcbiAgUGxheWVyVHlwZSwgQ2FyZExpc3QsIENhcmQsIENhcmRUYXJnZXQsIE1vdmVFbmVyZ3lQcm9tcHQsIENhcmRUcmFuc2ZlciB9IGZyb20gJy4uLy4uL2dhbWUnO1xuaW1wb3J0IHsgUHJvbXB0UmVzb2x2ZXIgfSBmcm9tICcuL3Byb21wdC1yZXNvbHZlcic7XG5pbXBvcnQgeyBkZWVwQ2xvbmUgfSBmcm9tICcuLi8uLi91dGlscy91dGlscyc7XG5cbmludGVyZmFjZSBUcmFuc2Zlckl0ZW0ge1xuICBmcm9tSXRlbTogRnJvbUl0ZW07XG4gIHRvQ2FyZExpc3Q6IENhcmRMaXN0O1xuICB0bzogQ2FyZFRhcmdldDtcbiAgc2NvcmU6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFRhcmdldExpc3Qge1xuICBjYXJkTGlzdDogQ2FyZExpc3Q7XG4gIHRhcmdldDogQ2FyZFRhcmdldDtcbn1cblxuaW50ZXJmYWNlIEZyb21JdGVtIHtcbiAgZnJvbUNhcmRMaXN0OiBDYXJkTGlzdDtcbiAgZnJvbTogQ2FyZFRhcmdldDtcbiAgY2FyZDogQ2FyZDtcbiAgY2FyZEluZGV4OiBudW1iZXI7XG59XG5cbmV4cG9ydCBjbGFzcyBNb3ZlRW5lcmd5UHJvbXB0UmVzb2x2ZXIgZXh0ZW5kcyBQcm9tcHRSZXNvbHZlciB7XG5cbiAgcHVibGljIHJlc29sdmVQcm9tcHQoc3RhdGU6IFN0YXRlLCBwbGF5ZXI6IFBsYXllciwgcHJvbXB0OiBQcm9tcHQ8YW55Pik6IEFjdGlvbiB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKHByb21wdCBpbnN0YW5jZW9mIE1vdmVFbmVyZ3lQcm9tcHQpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZ2V0UHJvbXB0UmVzdWx0KHN0YXRlLCBwcm9tcHQpO1xuICAgICAgcmV0dXJuIG5ldyBSZXNvbHZlUHJvbXB0QWN0aW9uKHByb21wdC5pZCwgcmVzdWx0KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldFByb21wdFJlc3VsdChzdGF0ZTogU3RhdGUsIHByb21wdDogTW92ZUVuZXJneVByb21wdCk6IENhcmRUcmFuc2ZlcltdIHwgbnVsbCB7XG4gICAgY29uc3QgY29weSA9IGRlZXBDbG9uZShzdGF0ZSwgWyBDYXJkIF0pO1xuICAgIGNvbnN0IGZyb21JdGVtcyA9IHRoaXMuYnVpbGRGcm9tQ2FyZEl0ZW1zKGNvcHksIHByb21wdCk7XG5cbiAgICBjb25zdCBtYXggPSBwcm9tcHQub3B0aW9ucy5tYXg7XG4gICAgY29uc3QgbWluID0gcHJvbXB0Lm9wdGlvbnMubWluO1xuICAgIGNvbnN0IHJlc3VsdDogVHJhbnNmZXJJdGVtW10gPSBbXTtcblxuICAgIGxldCBwcmV2U2NvcmUgPSB0aGlzLmdldFN0YXRlU2NvcmUoc3RhdGUsIHByb21wdC5wbGF5ZXJJZCk7XG4gICAgbGV0IGlzTmVnYXRpdmUgPSBmYWxzZTtcblxuICAgIHdoaWxlIChmcm9tSXRlbXMubGVuZ3RoID4gMCAmJiAoIWlzTmVnYXRpdmUgfHwgcmVzdWx0Lmxlbmd0aCA8IG1pbikpIHtcbiAgICAgIGNvbnN0IHRyYW5zZmVycyA9IHRoaXMuYnVpbGRUcmFuc2Zlckl0ZW1zKGNvcHksIHByb21wdCwgZnJvbUl0ZW1zKTtcbiAgICAgIHRyYW5zZmVycy5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSk7XG4gICAgICBpZiAodHJhbnNmZXJzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgY29uc3QgYmVzdCA9IHRyYW5zZmVyc1swXTtcbiAgICAgIGNvbnN0IGZyb21JbmRleCA9IGZyb21JdGVtcy5pbmRleE9mKGJlc3QuZnJvbUl0ZW0pO1xuXG4gICAgICBmcm9tSXRlbXMuc3BsaWNlKGZyb21JbmRleCwgMSk7XG5cbiAgICAgIGlmIChiZXN0LnNjb3JlIDwgcHJldlNjb3JlKSB7XG4gICAgICAgIGlzTmVnYXRpdmUgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvLyBNb3ZpbmcgYW55IGNhcmQgZ2l2ZXMgbmVnYXRpdmUgc2NvcmUsIGFuZCB3ZSBhcmUgYWJsZSB0byBjYW5jZWxcbiAgICAgIC8vIERvbid0IGFwcGVuZCBhbnkgcmVzdWx0cywganVzdCBjYW5jZWwgdGhlIHByb21wdFxuICAgICAgaWYgKGlzTmVnYXRpdmUgJiYgcHJvbXB0Lm9wdGlvbnMuYWxsb3dDYW5jZWwpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIC8vIFNjb3JlIGlzIG5lZ2F0aXZlLCBhbmQgd2UgYWxyZWFkeSBoYXZlIG1pbmltdW0gdHJhbnNmZXJzXG4gICAgICBpZiAoaXNOZWdhdGl2ZSAmJiByZXN1bHQubGVuZ3RoID49IG1pbikge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgY29uc3Qgc291cmNlID0gYmVzdC5mcm9tSXRlbS5mcm9tQ2FyZExpc3Q7XG4gICAgICBjb25zdCB0YXJnZXQgPSBiZXN0LnRvQ2FyZExpc3Q7XG4gICAgICBjb25zdCBjYXJkID0gYmVzdC5mcm9tSXRlbS5jYXJkO1xuICAgICAgc291cmNlLm1vdmVDYXJkVG8oY2FyZCwgdGFyZ2V0KTtcbiAgICAgIHJlc3VsdC5wdXNoKGJlc3QpO1xuICAgICAgcHJldlNjb3JlID0gYmVzdC5zY29yZTtcblxuICAgICAgaWYgKG1heCAhPT0gdW5kZWZpbmVkICYmIHJlc3VsdC5sZW5ndGggPj0gbWF4KSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChyZXN1bHQubGVuZ3RoID09PSAwICYmIHByb21wdC5vcHRpb25zLmFsbG93Q2FuY2VsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAocmVzdWx0Lmxlbmd0aCA8IG1pbiAmJiBwcm9tcHQub3B0aW9ucy5hbGxvd0NhbmNlbCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlSXRlbXMoc3RhdGUsIHByb21wdCwgcmVzdWx0KTtcbiAgfVxuXG4gIHByaXZhdGUgdHJhbnNsYXRlSXRlbXMoc3RhdGU6IFN0YXRlLCBwcm9tcHQ6IE1vdmVFbmVyZ3lQcm9tcHQsIGl0ZW1zOiBUcmFuc2Zlckl0ZW1bXSk6IENhcmRUcmFuc2ZlcltdIHtcbiAgICBjb25zdCBwbGF5ZXIgPSBzdGF0ZS5wbGF5ZXJzLmZpbmQocCA9PiBwLmlkID09PSBwcm9tcHQucGxheWVySWQpO1xuICAgIGlmIChwbGF5ZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIHJldHVybiBpdGVtcy5tYXAoaXRlbSA9PiB7XG4gICAgICBjb25zdCBjYXJkTGlzdCA9IFN0YXRlVXRpbHMuZ2V0VGFyZ2V0KHN0YXRlLCBwbGF5ZXIsIGl0ZW0uZnJvbUl0ZW0uZnJvbSk7XG4gICAgICBjb25zdCBjYXJkID0gY2FyZExpc3QuY2FyZHNbaXRlbS5mcm9tSXRlbS5jYXJkSW5kZXhdO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZnJvbTogaXRlbS5mcm9tSXRlbS5mcm9tLFxuICAgICAgICB0bzogaXRlbS50byxcbiAgICAgICAgY2FyZFxuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgYnVpbGRUcmFuc2Zlckl0ZW1zKHN0YXRlOiBTdGF0ZSwgcHJvbXB0OiBNb3ZlRW5lcmd5UHJvbXB0LCBmcm9tQ2FyZEl0ZW1zOiBGcm9tSXRlbVtdKTogVHJhbnNmZXJJdGVtW10ge1xuICAgIGNvbnN0IHJlc3VsdHM6IFRyYW5zZmVySXRlbVtdID0gW107XG5cbiAgICBmcm9tQ2FyZEl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICBjb25zdCBmcm9tQ2FyZExpc3QgPSBpdGVtLmZyb21DYXJkTGlzdDtcbiAgICAgIGNvbnN0IGNhcmRUYXJnZXRzID0gdGhpcy5nZXRUYXJnZXRzKHN0YXRlLCBwcm9tcHQsIHByb21wdC5vcHRpb25zLmJsb2NrZWRUbyk7XG4gICAgICBmb3IgKGNvbnN0IGNhcmRUYXJnZXQgb2YgY2FyZFRhcmdldHMpIHtcbiAgICAgICAgaWYgKGNhcmRUYXJnZXQuY2FyZExpc3QgIT09IGZyb21DYXJkTGlzdCkge1xuICAgICAgICAgIGZyb21DYXJkTGlzdC5tb3ZlQ2FyZFRvKGl0ZW0uY2FyZCwgY2FyZFRhcmdldC5jYXJkTGlzdCk7XG4gICAgICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgICAgIGZyb21JdGVtOiBpdGVtLFxuICAgICAgICAgICAgdG86IGNhcmRUYXJnZXQudGFyZ2V0LFxuICAgICAgICAgICAgdG9DYXJkTGlzdDogY2FyZFRhcmdldC5jYXJkTGlzdCxcbiAgICAgICAgICAgIHNjb3JlOiB0aGlzLmdldFN0YXRlU2NvcmUoc3RhdGUsIHByb21wdC5wbGF5ZXJJZClcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjYXJkVGFyZ2V0LmNhcmRMaXN0Lm1vdmVDYXJkVG8oaXRlbS5jYXJkLCBmcm9tQ2FyZExpc3QpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfVxuXG4gIHByaXZhdGUgYnVpbGRGcm9tQ2FyZEl0ZW1zKHN0YXRlOiBTdGF0ZSwgcHJvbXB0OiBNb3ZlRW5lcmd5UHJvbXB0KTogRnJvbUl0ZW1bXSB7XG4gICAgY29uc3QgZnJvbUNhcmRJdGVtczogRnJvbUl0ZW1bXSA9IFtdO1xuXG4gICAgY29uc3QgZnJvbVRhcmdldHMgPSB0aGlzLmdldFRhcmdldHMoc3RhdGUsIHByb21wdCwgcHJvbXB0Lm9wdGlvbnMuYmxvY2tlZEZyb20pO1xuICAgIGZyb21UYXJnZXRzLmZvckVhY2goZnJvbVRhcmdldCA9PiB7XG4gICAgICBjb25zdCBibG9ja2VkTWFwID0gcHJvbXB0Lm9wdGlvbnMuYmxvY2tlZE1hcC5maW5kKGIgPT4ge1xuICAgICAgICByZXR1cm4gYi5zb3VyY2UucGxheWVyID09PSBmcm9tVGFyZ2V0LnRhcmdldC5wbGF5ZXJcbiAgICAgICAgICAmJiBiLnNvdXJjZS5zbG90ID09PSBmcm9tVGFyZ2V0LnRhcmdldC5zbG90XG4gICAgICAgICAgJiYgYi5zb3VyY2UuaW5kZXggPT09IGZyb21UYXJnZXQudGFyZ2V0LmluZGV4O1xuICAgICAgfSk7XG4gICAgICBjb25zdCBibG9ja2VkID0gYmxvY2tlZE1hcCA/IGJsb2NrZWRNYXAuYmxvY2tlZCA6IFtdO1xuICAgICAgY29uc3QgY2FyZExpc3QgPSBuZXcgQ2FyZExpc3QoKTtcbiAgICAgIGZyb21UYXJnZXQuY2FyZExpc3QuY2FyZHMuZm9yRWFjaCgoY2FyZCwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKCFibG9ja2VkLmluY2x1ZGVzKGluZGV4KSkge1xuICAgICAgICAgIGNhcmRMaXN0LmNhcmRzLnB1c2goY2FyZCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgY2FyZExpc3QuY2FyZHMgPSBjYXJkTGlzdC5maWx0ZXIocHJvbXB0LmZpbHRlcik7XG4gICAgICBjYXJkTGlzdC5jYXJkcy5mb3JFYWNoKGNhcmQgPT4ge1xuICAgICAgICBmcm9tQ2FyZEl0ZW1zLnB1c2goe1xuICAgICAgICAgIGZyb21DYXJkTGlzdDogZnJvbVRhcmdldC5jYXJkTGlzdCxcbiAgICAgICAgICBmcm9tOiBmcm9tVGFyZ2V0LnRhcmdldCxcbiAgICAgICAgICBjYXJkOiBjYXJkLFxuICAgICAgICAgIGNhcmRJbmRleDogZnJvbVRhcmdldC5jYXJkTGlzdC5jYXJkcy5pbmRleE9mKGNhcmQpXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZyb21DYXJkSXRlbXM7XG4gIH1cblxuICBwcml2YXRlIGdldFRhcmdldHMoc3RhdGU6IFN0YXRlLCBwcm9tcHQ6IE1vdmVFbmVyZ3lQcm9tcHQsIGJsb2NrZWQ6IENhcmRUYXJnZXRbXSk6IFRhcmdldExpc3RbXSB7XG4gICAgY29uc3QgcGxheWVyID0gc3RhdGUucGxheWVycy5maW5kKHAgPT4gcC5pZCA9PT0gcHJvbXB0LnBsYXllcklkKTtcbiAgICBjb25zdCBvcHBvbmVudCA9IHN0YXRlLnBsYXllcnMuZmluZChwID0+IHAuaWQgIT09IHByb21wdC5wbGF5ZXJJZCk7XG4gICAgaWYgKHBsYXllciA9PT0gdW5kZWZpbmVkIHx8IG9wcG9uZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgY29uc3QgaGFzT3Bwb25lbnQgPSBbUGxheWVyVHlwZS5UT1BfUExBWUVSLCBQbGF5ZXJUeXBlLkFOWV0uaW5jbHVkZXMocHJvbXB0LnBsYXllclR5cGUpO1xuICAgIGNvbnN0IGhhc1BsYXllciA9IFtQbGF5ZXJUeXBlLkJPVFRPTV9QTEFZRVIsIFBsYXllclR5cGUuQU5ZXS5pbmNsdWRlcyhwcm9tcHQucGxheWVyVHlwZSk7XG4gICAgbGV0IHJlc3VsdHM6IFRhcmdldExpc3RbXSA9IFtdO1xuICAgIGlmIChoYXNPcHBvbmVudCkge1xuICAgICAgb3Bwb25lbnQuZm9yRWFjaFBva2Vtb24oUGxheWVyVHlwZS5UT1BfUExBWUVSLCAoY2FyZExpc3QsIGNhcmQsIHRhcmdldCkgPT4ge1xuICAgICAgICBpZiAocHJvbXB0LnNsb3RzLmluY2x1ZGVzKHRhcmdldC5zbG90KSkge1xuICAgICAgICAgIHJlc3VsdHMucHVzaCh7IHRhcmdldCwgY2FyZExpc3QgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoaGFzUGxheWVyKSB7XG4gICAgICBwbGF5ZXIuZm9yRWFjaFBva2Vtb24oUGxheWVyVHlwZS5CT1RUT01fUExBWUVSLCAoY2FyZExpc3QsIGNhcmQsIHRhcmdldCkgPT4ge1xuICAgICAgICBpZiAocHJvbXB0LnNsb3RzLmluY2x1ZGVzKHRhcmdldC5zbG90KSkge1xuICAgICAgICAgIHJlc3VsdHMucHVzaCh7IHRhcmdldCwgY2FyZExpc3QgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGJsb2NrZWRMaXN0OiBDYXJkTGlzdFtdID0gYmxvY2tlZC5tYXAoYiA9PiBTdGF0ZVV0aWxzLmdldFRhcmdldChzdGF0ZSwgcGxheWVyLCBiKSk7XG4gICAgcmVzdWx0cyA9IHJlc3VsdHMuZmlsdGVyKGkgPT4gIWJsb2NrZWRMaXN0LmluY2x1ZGVzKGkuY2FyZExpc3QpKTtcbiAgICByZXR1cm4gcmVzdWx0cztcbiAgfVxuXG59XG4iXX0=