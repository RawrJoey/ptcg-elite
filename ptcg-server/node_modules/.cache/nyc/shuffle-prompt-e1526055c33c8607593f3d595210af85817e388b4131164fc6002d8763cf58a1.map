{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/shuffle-prompt.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/shuffle-prompt.ts"],"names":[],"mappings":";;;AAAA,qCAAkC;AAGlC,MAAa,iBAAkB,SAAQ,eAAgB;IAIrD,YAAY,QAAgB;QAC1B,KAAK,CAAC,QAAQ,CAAC,CAAC;QAHT,SAAI,GAAW,cAAc,CAAC;IAIvC,CAAC;IAEM,QAAQ,CAAC,MAAuB,EAAE,KAAY;QACnD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,KAAK,CAAC;SACd;QACD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC9C,OAAO,KAAK,CAAC;SACd;QACD,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,IAAI,EAAE,CAAC;QACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBACd,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;AA7BD,8CA6BC","sourcesContent":["import { Prompt } from './prompt';\nimport { State } from '../state/state';\n\nexport class ShuffleDeckPrompt extends Prompt<number[]> {\n\n  readonly type: string = 'Shuffle deck';\n\n  constructor(playerId: number) {\n    super(playerId);\n  }\n\n  public validate(result: number[] | null, state: State): boolean {\n    if (result === null) {\n      return false;\n    }\n    const player = state.players.find(p => p.id === this.playerId);\n    if (player === undefined) {\n      return false;\n    }\n    if (result.length !== player.deck.cards.length) {\n      return false;\n    }\n    const s = result.slice();\n    s.sort();\n    for (let i = 0; i < s.length; i++) {\n      if (s[i] !== i) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n"]}