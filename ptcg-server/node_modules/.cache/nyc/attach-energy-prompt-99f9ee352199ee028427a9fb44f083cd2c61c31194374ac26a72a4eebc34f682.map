{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/attach-energy-prompt.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/attach-energy-prompt.ts"],"names":[],"mappings":";;;AACA,iDAA6C;AAC7C,qDAAiD;AACjD,qCAAkC;AAMrB,QAAA,sBAAsB,GAAG,eAAe,CAAC;AAmBtD,MAAa,kBAAmB,SAAQ,eAAoB;IAM1D,YACE,QAAgB,EACT,OAAoB,EACpB,QAAkB,EAClB,UAAsB,EACtB,KAAiB,EACjB,MAAkB,EACzB,OAAsC;QAEtC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAPT,YAAO,GAAP,OAAO,CAAa;QACpB,aAAQ,GAAR,QAAQ,CAAU;QAClB,eAAU,GAAV,UAAU,CAAY;QACtB,UAAK,GAAL,KAAK,CAAY;QACjB,WAAM,GAAN,MAAM,CAAY;QAVlB,SAAI,GAAW,8BAAsB,CAAC;QAe7C,kBAAkB;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YAC/B,WAAW,EAAE,IAAI;YACjB,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM;YAC1B,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,KAAK;YACjB,gBAAgB,EAAE,KAAK;SACxB,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,MAAqC,EAAE,KAAY;QAC/D,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,MAAM,CAAC,CAAE,sBAAsB;SACvC;QACD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,qBAAqB,CAAC,CAAC;SACxD;QACD,MAAM,SAAS,GAAiB,EAAE,CAAC;QACnC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACrC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACnB,CAAC;IAEM,QAAQ,CAAC,MAA2B;QACzC,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAE,sBAAsB;SACzD;QACD,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YACxE,OAAO,KAAK,CAAC;SACd;QAED,oCAAoC;QACpC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAChD,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACvB,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAChC,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM;uBAC1B,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;uBACpB,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC;YAC9B,CAAC,CAAC,CAAC;YACH,IAAI,SAAS,EAAE;gBACb,OAAO,KAAK,CAAC;aACd;SACF;QAED,8CAA8C;QAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACvB,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;oBACjC,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM;2BAC1B,CAAC,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;2BACpB,CAAC,CAAC,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC;gBAC9B,CAAC,CAAC,CAAC;gBACH,IAAI,KAAK,KAAK,CAAC,EAAE;oBACf,OAAO,KAAK,CAAC;iBACd;aACF;SACF;QAED,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;IACjD,CAAC;CAEF;AArFD,gDAqFC","sourcesContent":["import { Card } from '../card/card';\nimport { GameError } from '../../game-error';\nimport { GameMessage } from '../../game-message';\nimport { Prompt } from './prompt';\nimport { PlayerType, SlotType, CardTarget } from '../actions/play-card-action';\nimport { State } from '../state/state';\nimport { CardList } from '../state/card-list';\nimport { FilterType } from './choose-cards-prompt';\n\nexport const AttachEnergyPromptType = 'Attach energy';\n\nexport interface AttachEnergyOptions {\n  allowCancel: boolean;\n  min: number;\n  max: number;\n  blocked: number[];\n  blockedTo: CardTarget[];\n  sameTarget: boolean;\n  differentTargets: boolean;\n}\n\nexport type AttachEnergyResultType = {to: CardTarget, index: number}[];\n\nexport interface CardAssign {\n  to: CardTarget;\n  card: Card;\n}\n\nexport class AttachEnergyPrompt extends Prompt<CardAssign[]> {\n\n  readonly type: string = AttachEnergyPromptType;\n\n  public options: AttachEnergyOptions;\n\n  constructor(\n    playerId: number,\n    public message: GameMessage,\n    public cardList: CardList,\n    public playerType: PlayerType,\n    public slots: SlotType[],\n    public filter: FilterType,\n    options?: Partial<AttachEnergyOptions>\n  ) {\n    super(playerId);\n\n    // Default options\n    this.options = Object.assign({}, {\n      allowCancel: true,\n      min: 0,\n      max: cardList.cards.length,\n      blocked: [],\n      blockedTo: [],\n      sameTarget: false,\n      differentTargets: false\n    }, options);\n  }\n\n  public decode(result: AttachEnergyResultType | null, state: State): CardAssign[] | null {\n    if (result === null) {\n      return result;  // operation cancelled\n    }\n    const player = state.players.find(p => p.id === this.playerId);\n    if (player === undefined) {\n      throw new GameError(GameMessage.INVALID_PROMPT_RESULT);\n    }\n    const transfers: CardAssign[] = [];\n    result.forEach(t => {\n      const cardList = this.cardList;\n      const card = cardList.cards[t.index];\n      transfers.push({ to: t.to, card });\n    });\n    return transfers;\n  }\n\n  public validate(result: CardAssign[] | null): boolean {\n    if (result === null) {\n      return this.options.allowCancel;  // operation cancelled\n    }\n    if (result.length < this.options.min || result.length > this.options.max) {\n      return false;\n    }\n\n    // Check if all targets are the same\n    if (this.options.sameTarget && result.length > 1) {\n      const t = result[0].to;\n      const different = result.some(r => {\n        return r.to.player !== t.player\n          || r.to.slot !== t.slot\n          || r.to.index !== t.index;\n      });\n      if (different) {\n        return false;\n      }\n    }\n\n    // Check if all selected targets are different\n    if (this.options.differentTargets && result.length > 1) {\n      for (let i = 0; i < result.length; i++) {\n        const t = result[i].to;\n        const index = result.findIndex(r => {\n          return r.to.player === t.player\n            && r.to.slot === t.slot\n            && r.to.index === t.index;\n        });\n        if (index !== i) {\n          return false;\n        }\n      }\n    }\n\n    return result.every(r => r.card !== undefined);\n  }\n\n}\n"]}