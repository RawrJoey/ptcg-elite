"use strict";function cov_wx7zwvxfl(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/choose-cards-prompt.ts";var hash="2808565eb3141a0ce0d519e8a39ce560d47d93b1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/choose-cards-prompt.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:67}},"2":{start:{line:4,column:17},end:{line:4,column:36}},"3":{start:{line:5,column:21},end:{line:5,column:50}},"4":{start:{line:6,column:0},end:{line:6,column:47}},"5":{start:{line:9,column:8},end:{line:9,column:24}},"6":{start:{line:10,column:8},end:{line:10,column:31}},"7":{start:{line:11,column:8},end:{line:11,column:27}},"8":{start:{line:12,column:8},end:{line:12,column:29}},"9":{start:{line:13,column:8},end:{line:13,column:50}},"10":{start:{line:15,column:8},end:{line:25,column:20}},"11":{start:{line:28,column:8},end:{line:30,column:9}},"12":{start:{line:29,column:12},end:{line:29,column:24}},"13":{start:{line:31,column:22},end:{line:31,column:38}},"14":{start:{line:32,column:8},end:{line:32,column:49}},"15":{start:{line:32,column:35},end:{line:32,column:47}},"16":{start:{line:35,column:8},end:{line:37,column:9}},"17":{start:{line:36,column:12},end:{line:36,column:44}},"18":{start:{line:38,column:8},end:{line:40,column:9}},"19":{start:{line:39,column:12},end:{line:39,column:25}},"20":{start:{line:42,column:8},end:{line:53,column:9}},"21":{start:{line:43,column:28},end:{line:43,column:30}},"22":{start:{line:44,column:12},end:{line:52,column:13}},"23":{start:{line:45,column:33},end:{line:45,column:68}},"24":{start:{line:46,column:16},end:{line:51,column:17}},"25":{start:{line:47,column:20},end:{line:47,column:33}},"26":{start:{line:50,column:20},end:{line:50,column:45}},"27":{start:{line:55,column:25},end:{line:55,column:27}},"28":{start:{line:56,column:8},end:{line:59,column:9}},"29":{start:{line:57,column:26},end:{line:57,column:55}},"30":{start:{line:58,column:12},end:{line:58,column:49}},"31":{start:{line:60,column:58},end:{line:60,column:70}},"32":{start:{line:61,column:8},end:{line:65,column:9}},"33":{start:{line:64,column:12},end:{line:64,column:25}},"34":{start:{line:66,column:24},end:{line:66,column:44}},"35":{start:{line:67,column:8},end:{line:70,column:11}},"36":{start:{line:68,column:26},end:{line:68,column:53}},"37":{start:{line:69,column:12},end:{line:69,column:85}},"38":{start:{line:73,column:8},end:{line:76,column:9}},"39":{start:{line:74,column:31},end:{line:74,column:35}},"40":{start:{line:75,column:12},end:{line:75,column:104}},"41":{start:{line:77,column:8},end:{line:80,column:9}},"42":{start:{line:78,column:32},end:{line:78,column:36}},"43":{start:{line:79,column:12},end:{line:79,column:40}},"44":{start:{line:81,column:8},end:{line:81,column:42}},"45":{start:{line:84,column:8},end:{line:90,column:9}},"46":{start:{line:85,column:12},end:{line:89,column:13}},"47":{start:{line:86,column:16},end:{line:88,column:17}},"48":{start:{line:87,column:20},end:{line:87,column:33}},"49":{start:{line:91,column:8},end:{line:91,column:20}},"50":{start:{line:94,column:0},end:{line:94,column:46}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:59},end:{line:26,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:19},end:{line:33,column:5}},line:27},"2":{name:"(anonymous_2)",decl:{start:{line:32,column:26},end:{line:32,column:27}},loc:{start:{line:32,column:35},end:{line:32,column:47}},line:32},"3":{name:"(anonymous_3)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:21},end:{line:71,column:5}},line:34},"4":{name:"(anonymous_4)",decl:{start:{line:67,column:28},end:{line:67,column:29}},loc:{start:{line:67,column:33},end:{line:70,column:9}},line:67},"5":{name:"(anonymous_5)",decl:{start:{line:72,column:4},end:{line:72,column:5}},loc:{start:{line:72,column:29},end:{line:82,column:5}},line:72},"6":{name:"(anonymous_6)",decl:{start:{line:83,column:4},end:{line:83,column:5}},loc:{start:{line:83,column:24},end:{line:92,column:5}},line:83}},branchMap:{"0":{loc:{start:{line:28,column:8},end:{line:30,column:9}},type:"if",locations:[{start:{line:28,column:8},end:{line:30,column:9}},{start:{line:28,column:8},end:{line:30,column:9}}],line:28},"1":{loc:{start:{line:35,column:8},end:{line:37,column:9}},type:"if",locations:[{start:{line:35,column:8},end:{line:37,column:9}},{start:{line:35,column:8},end:{line:37,column:9}}],line:35},"2":{loc:{start:{line:38,column:8},end:{line:40,column:9}},type:"if",locations:[{start:{line:38,column:8},end:{line:40,column:9}},{start:{line:38,column:8},end:{line:40,column:9}}],line:38},"3":{loc:{start:{line:38,column:12},end:{line:38,column:80}},type:"binary-expr",locations:[{start:{line:38,column:12},end:{line:38,column:44}},{start:{line:38,column:48},end:{line:38,column:80}}],line:38},"4":{loc:{start:{line:42,column:8},end:{line:53,column:9}},type:"if",locations:[{start:{line:42,column:8},end:{line:53,column:9}},{start:{line:42,column:8},end:{line:53,column:9}}],line:42},"5":{loc:{start:{line:46,column:16},end:{line:51,column:17}},type:"if",locations:[{start:{line:46,column:16},end:{line:51,column:17}},{start:{line:46,column:16},end:{line:51,column:17}}],line:46},"6":{loc:{start:{line:57,column:26},end:{line:57,column:55}},type:"binary-expr",locations:[{start:{line:57,column:26},end:{line:57,column:50}},{start:{line:57,column:54},end:{line:57,column:55}}],line:57},"7":{loc:{start:{line:61,column:8},end:{line:65,column:9}},type:"if",locations:[{start:{line:61,column:8},end:{line:65,column:9}},{start:{line:61,column:8},end:{line:65,column:9}}],line:61},"8":{loc:{start:{line:61,column:12},end:{line:63,column:100}},type:"binary-expr",locations:[{start:{line:61,column:13},end:{line:61,column:38}},{start:{line:61,column:42},end:{line:61,column:96}},{start:{line:62,column:16},end:{line:62,column:41}},{start:{line:62,column:45},end:{line:62,column:98}},{start:{line:63,column:16},end:{line:63,column:41}},{start:{line:63,column:45},end:{line:63,column:99}}],line:61},"9":{loc:{start:{line:69,column:19},end:{line:69,column:84}},type:"binary-expr",locations:[{start:{line:69,column:19},end:{line:69,column:31}},{start:{line:69,column:35},end:{line:69,column:59}},{start:{line:69,column:63},end:{line:69,column:84}}],line:69},"10":{loc:{start:{line:73,column:8},end:{line:76,column:9}},type:"if",locations:[{start:{line:73,column:8},end:{line:76,column:9}},{start:{line:73,column:8},end:{line:76,column:9}}],line:73},"11":{loc:{start:{line:75,column:19},end:{line:75,column:103}},type:"cond-expr",locations:[{start:{line:75,column:52},end:{line:75,column:74}},{start:{line:75,column:77},end:{line:75,column:103}}],line:75},"12":{loc:{start:{line:77,column:8},end:{line:80,column:9}},type:"if",locations:[{start:{line:77,column:8},end:{line:80,column:9}},{start:{line:77,column:8},end:{line:80,column:9}}],line:77},"13":{loc:{start:{line:85,column:12},end:{line:89,column:13}},type:"if",locations:[{start:{line:85,column:12},end:{line:89,column:13}},{start:{line:85,column:12},end:{line:89,column:13}}],line:85},"14":{loc:{start:{line:86,column:16},end:{line:88,column:17}},type:"if",locations:[{start:{line:86,column:16},end:{line:88,column:17}},{start:{line:86,column:16},end:{line:88,column:17}}],line:86}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0,0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/choose-cards-prompt.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/choose-cards-prompt.ts"],names:[],mappings:"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",sourcesContent:["import { Card } from '../card/card';\nimport { CardList } from '../state/card-list';\nimport { EnergyCard } from '../card/energy-card';\nimport { GameMessage } from '../../game-message';\nimport { Prompt } from './prompt';\nimport { PokemonCard } from '../card/pokemon-card';\nimport { TrainerCard } from '../card/trainer-card';\nimport { CardType, SuperType } from '../card/card-types';\n\nexport const ChooseCardsPromptType = 'Choose cards';\n\nexport interface ChooseCardsOptions {\n  min: number;\n  max: number;\n  allowCancel: boolean;\n  blocked: number[];\n  isSecret: boolean;\n  differentTypes: boolean;\n  maxPokemons: number | undefined;\n  maxEnergies: number | undefined;\n  maxTrainers: number | undefined;\n}\n\nexport type FilterType = Partial<PokemonCard | TrainerCard | EnergyCard>;\n\nexport class ChooseCardsPrompt extends Prompt<Card[]> {\n\n  readonly type: string = ChooseCardsPromptType;\n  \n  public options: ChooseCardsOptions;\n\n  constructor(\n    playerId: number,\n    public message: GameMessage,\n    public cards: CardList,\n    public filter: FilterType,\n    options?: Partial<ChooseCardsOptions>\n  ) {\n    super(playerId);\n\n    // Default options\n    this.options = Object.assign({}, {\n      min: 0,\n      max: cards.cards.length,\n      allowCancel: true,\n      blocked: [],\n      isSecret: false,\n      differentTypes: false,\n      maxPokemons: undefined,\n      maxEnergies: undefined,\n      maxTrainers: undefined\n    }, options);\n  }\n\n  public decode(result: number[] | null): Card[] | null {\n    if (result === null) {\n      return null;\n    }\n    const cards: Card[] = this.cards.cards;\n    return result.map(index => cards[index]);\n  }\n\n  public validate(result: Card[] | null): boolean {\n    if (result === null) {\n      return this.options.allowCancel;\n    }\n    if (result.length < this.options.min || result.length > this.options.max) {\n      return false;\n    }\n\n    // Check if 'different types' restriction is valid\n    if (this.options.differentTypes) {\n      const typeMap: {[key: number]: boolean} = {};\n      for (const card of result) {\n        const cardType = ChooseCardsPrompt.getCardType(card);\n        if (typeMap[cardType] === true) {\n          return false;\n        } else {\n          typeMap[cardType] = true;\n        }\n      }\n    }\n\n    // Check if 'max' restrictions are valid\n    const countMap: {[key: number]: number} = {};\n    for (const card of result) {\n      const count = countMap[card.superType] || 0;\n      countMap[card.superType] = count + 1;\n    }\n    const { maxPokemons, maxEnergies, maxTrainers } = this.options;\n    if ((maxPokemons !== undefined && maxPokemons < countMap[SuperType.POKEMON])\n      || (maxEnergies !== undefined && maxEnergies < countMap[SuperType.ENERGY])\n      || (maxTrainers !== undefined && maxTrainers < countMap[SuperType.TRAINER])) {\n      return false;\n    }\n\n    const blocked = this.options.blocked;\n    return result.every(r => {\n      const index = this.cards.cards.indexOf(r);\n      return index !== -1 && !blocked.includes(index) && this.matchesFilter(r);\n    });\n  }\n\n  public static getCardType(card: Card): CardType {\n    if (card.superType === SuperType.ENERGY) {\n      const energyCard = card as EnergyCard;\n      return energyCard.provides.length > 0 ? energyCard.provides[0] : CardType.NONE;\n    }\n    if (card.superType === SuperType.POKEMON) {\n      const pokemonCard = card as PokemonCard;\n      return pokemonCard.cardType;\n    }\n    return CardType.NONE;\n  }\n\n  private matchesFilter(card: Card): boolean {\n    for (const key in this.filter) {\n      if (Object.prototype.hasOwnProperty.call(this.filter, key)) {\n        if ((this.filter as any)[key] !== (card as any)[key]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"2808565eb3141a0ce0d519e8a39ce560d47d93b1"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_wx7zwvxfl=function(){return actualCoverage;};}return actualCoverage;}cov_wx7zwvxfl();cov_wx7zwvxfl().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_wx7zwvxfl().s[1]++;exports.ChooseCardsPrompt=exports.ChooseCardsPromptType=void 0;const prompt_1=(cov_wx7zwvxfl().s[2]++,require("./prompt"));const card_types_1=(cov_wx7zwvxfl().s[3]++,require("../card/card-types"));cov_wx7zwvxfl().s[4]++;exports.ChooseCardsPromptType='Choose cards';class ChooseCardsPrompt extends(prompt_1.Prompt){constructor(playerId,message,cards,filter,options){cov_wx7zwvxfl().f[0]++;cov_wx7zwvxfl().s[5]++;super(playerId);cov_wx7zwvxfl().s[6]++;this.message=message;cov_wx7zwvxfl().s[7]++;this.cards=cards;cov_wx7zwvxfl().s[8]++;this.filter=filter;cov_wx7zwvxfl().s[9]++;this.type=exports.ChooseCardsPromptType;// Default options
cov_wx7zwvxfl().s[10]++;this.options=Object.assign({},{min:0,max:cards.cards.length,allowCancel:true,blocked:[],isSecret:false,differentTypes:false,maxPokemons:undefined,maxEnergies:undefined,maxTrainers:undefined},options);}decode(result){cov_wx7zwvxfl().f[1]++;cov_wx7zwvxfl().s[11]++;if(result===null){cov_wx7zwvxfl().b[0][0]++;cov_wx7zwvxfl().s[12]++;return null;}else{cov_wx7zwvxfl().b[0][1]++;}const cards=(cov_wx7zwvxfl().s[13]++,this.cards.cards);cov_wx7zwvxfl().s[14]++;return result.map(index=>{cov_wx7zwvxfl().f[2]++;cov_wx7zwvxfl().s[15]++;return cards[index];});}validate(result){cov_wx7zwvxfl().f[3]++;cov_wx7zwvxfl().s[16]++;if(result===null){cov_wx7zwvxfl().b[1][0]++;cov_wx7zwvxfl().s[17]++;return this.options.allowCancel;}else{cov_wx7zwvxfl().b[1][1]++;}cov_wx7zwvxfl().s[18]++;if((cov_wx7zwvxfl().b[3][0]++,result.length<this.options.min)||(cov_wx7zwvxfl().b[3][1]++,result.length>this.options.max)){cov_wx7zwvxfl().b[2][0]++;cov_wx7zwvxfl().s[19]++;return false;}else{cov_wx7zwvxfl().b[2][1]++;}// Check if 'different types' restriction is valid
cov_wx7zwvxfl().s[20]++;if(this.options.differentTypes){cov_wx7zwvxfl().b[4][0]++;const typeMap=(cov_wx7zwvxfl().s[21]++,{});cov_wx7zwvxfl().s[22]++;for(const card of result){const cardType=(cov_wx7zwvxfl().s[23]++,ChooseCardsPrompt.getCardType(card));cov_wx7zwvxfl().s[24]++;if(typeMap[cardType]===true){cov_wx7zwvxfl().b[5][0]++;cov_wx7zwvxfl().s[25]++;return false;}else{cov_wx7zwvxfl().b[5][1]++;cov_wx7zwvxfl().s[26]++;typeMap[cardType]=true;}}}else{cov_wx7zwvxfl().b[4][1]++;}// Check if 'max' restrictions are valid
const countMap=(cov_wx7zwvxfl().s[27]++,{});cov_wx7zwvxfl().s[28]++;for(const card of result){const count=(cov_wx7zwvxfl().s[29]++,(cov_wx7zwvxfl().b[6][0]++,countMap[card.superType])||(cov_wx7zwvxfl().b[6][1]++,0));cov_wx7zwvxfl().s[30]++;countMap[card.superType]=count+1;}const{maxPokemons,maxEnergies,maxTrainers}=(cov_wx7zwvxfl().s[31]++,this.options);cov_wx7zwvxfl().s[32]++;if((cov_wx7zwvxfl().b[8][0]++,maxPokemons!==undefined)&&(cov_wx7zwvxfl().b[8][1]++,maxPokemons<countMap[card_types_1.SuperType.POKEMON])||(cov_wx7zwvxfl().b[8][2]++,maxEnergies!==undefined)&&(cov_wx7zwvxfl().b[8][3]++,maxEnergies<countMap[card_types_1.SuperType.ENERGY])||(cov_wx7zwvxfl().b[8][4]++,maxTrainers!==undefined)&&(cov_wx7zwvxfl().b[8][5]++,maxTrainers<countMap[card_types_1.SuperType.TRAINER])){cov_wx7zwvxfl().b[7][0]++;cov_wx7zwvxfl().s[33]++;return false;}else{cov_wx7zwvxfl().b[7][1]++;}const blocked=(cov_wx7zwvxfl().s[34]++,this.options.blocked);cov_wx7zwvxfl().s[35]++;return result.every(r=>{cov_wx7zwvxfl().f[4]++;const index=(cov_wx7zwvxfl().s[36]++,this.cards.cards.indexOf(r));cov_wx7zwvxfl().s[37]++;return(cov_wx7zwvxfl().b[9][0]++,index!==-1)&&(cov_wx7zwvxfl().b[9][1]++,!blocked.includes(index))&&(cov_wx7zwvxfl().b[9][2]++,this.matchesFilter(r));});}static getCardType(card){cov_wx7zwvxfl().f[5]++;cov_wx7zwvxfl().s[38]++;if(card.superType===card_types_1.SuperType.ENERGY){cov_wx7zwvxfl().b[10][0]++;const energyCard=(cov_wx7zwvxfl().s[39]++,card);cov_wx7zwvxfl().s[40]++;return energyCard.provides.length>0?(cov_wx7zwvxfl().b[11][0]++,energyCard.provides[0]):(cov_wx7zwvxfl().b[11][1]++,card_types_1.CardType.NONE);}else{cov_wx7zwvxfl().b[10][1]++;}cov_wx7zwvxfl().s[41]++;if(card.superType===card_types_1.SuperType.POKEMON){cov_wx7zwvxfl().b[12][0]++;const pokemonCard=(cov_wx7zwvxfl().s[42]++,card);cov_wx7zwvxfl().s[43]++;return pokemonCard.cardType;}else{cov_wx7zwvxfl().b[12][1]++;}cov_wx7zwvxfl().s[44]++;return card_types_1.CardType.NONE;}matchesFilter(card){cov_wx7zwvxfl().f[6]++;cov_wx7zwvxfl().s[45]++;for(const key in this.filter){cov_wx7zwvxfl().s[46]++;if(Object.prototype.hasOwnProperty.call(this.filter,key)){cov_wx7zwvxfl().b[13][0]++;cov_wx7zwvxfl().s[47]++;if(this.filter[key]!==card[key]){cov_wx7zwvxfl().b[14][0]++;cov_wx7zwvxfl().s[48]++;return false;}else{cov_wx7zwvxfl().b[14][1]++;}}else{cov_wx7zwvxfl().b[13][1]++;}}cov_wx7zwvxfl().s[49]++;return true;}}cov_wx7zwvxfl().s[50]++;exports.ChooseCardsPrompt=ChooseCardsPrompt;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,