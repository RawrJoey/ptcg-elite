"use strict";function cov_k6c6qoji3(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/state-serializer.ts";var hash="311697c64fb2a7957e50a31e90aae2b0701474d6";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/state-serializer.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:33}},"2":{start:{line:4,column:21},end:{line:4,column:45}},"3":{start:{line:5,column:23},end:{line:5,column:49}},"4":{start:{line:6,column:16},end:{line:6,column:47}},"5":{start:{line:7,column:29},end:{line:7,column:60}},"6":{start:{line:8,column:16},end:{line:8,column:47}},"7":{start:{line:9,column:17},end:{line:9,column:49}},"8":{start:{line:10,column:26},end:{line:10,column:54}},"9":{start:{line:11,column:31},end:{line:11,column:64}},"10":{start:{line:12,column:22},end:{line:12,column:59}},"11":{start:{line:13,column:31},end:{line:13,column:64}},"12":{start:{line:14,column:28},end:{line:14,column:58}},"13":{start:{line:15,column:23},end:{line:15,column:48}},"14":{start:{line:16,column:16},end:{line:16,column:38}},"15":{start:{line:17,column:21},end:{line:17,column:44}},"16":{start:{line:20,column:8},end:{line:29,column:10}},"17":{start:{line:32,column:28},end:{line:32,column:44}},"18":{start:{line:33,column:21},end:{line:33,column:23}},"19":{start:{line:34,column:28},end:{line:34,column:60}},"20":{start:{line:35,column:25},end:{line:58,column:9}},"21":{start:{line:36,column:12},end:{line:36,column:40}},"22":{start:{line:37,column:25},end:{line:37,column:46}},"23":{start:{line:38,column:12},end:{line:40,column:13}},"24":{start:{line:39,column:16},end:{line:39,column:29}},"25":{start:{line:41,column:12},end:{line:56,column:13}},"26":{start:{line:42,column:28},end:{line:42,column:60}},"27":{start:{line:42,column:43},end:{line:42,column:59}},"28":{start:{line:43,column:16},end:{line:45,column:17}},"29":{start:{line:44,column:20},end:{line:44,column:60}},"30":{start:{line:46,column:16},end:{line:46,column:49}},"31":{start:{line:47,column:29},end:{line:47,column:51}},"32":{start:{line:48,column:16},end:{line:50,column:17}},"33":{start:{line:49,column:20},end:{line:49,column:33}},"34":{start:{line:51,column:35},end:{line:51,column:97}},"35":{start:{line:51,column:57},end:{line:51,column:96}},"36":{start:{line:51,column:77},end:{line:51,column:95}},"37":{start:{line:52,column:16},end:{line:54,column:17}},"38":{start:{line:53,column:20},end:{line:53,column:55}},"39":{start:{line:55,column:16},end:{line:55,column:133}},"40":{start:{line:57,column:12},end:{line:57,column:25}},"41":{start:{line:59,column:8},end:{line:59,column:64}},"42":{start:{line:62,column:28},end:{line:62,column:44}},"43":{start:{line:63,column:24},end:{line:63,column:60}},"44":{start:{line:64,column:24},end:{line:82,column:9}},"45":{start:{line:65,column:12},end:{line:67,column:13}},"46":{start:{line:66,column:16},end:{line:66,column:29}},"47":{start:{line:68,column:12},end:{line:80,column:13}},"48":{start:{line:69,column:29},end:{line:69,column:40}},"49":{start:{line:70,column:16},end:{line:79,column:17}},"50":{start:{line:71,column:20},end:{line:73,column:21}},"51":{start:{line:72,column:24},end:{line:72,column:37}},"52":{start:{line:74,column:39},end:{line:74,column:84}},"53":{start:{line:74,column:61},end:{line:74,column:83}},"54":{start:{line:75,column:20},end:{line:77,column:21}},"55":{start:{line:76,column:24},end:{line:76,column:70}},"56":{start:{line:78,column:20},end:{line:78,column:139}},"57":{start:{line:81,column:12},end:{line:81,column:25}},"58":{start:{line:83,column:23},end:{line:83,column:59}},"59":{start:{line:85,column:28},end:{line:85,column:60}},"60":{start:{line:86,column:8},end:{line:94,column:11}},"61":{start:{line:87,column:12},end:{line:93,column:13}},"62":{start:{line:88,column:34},end:{line:88,column:74}},"63":{start:{line:89,column:16},end:{line:91,column:17}},"64":{start:{line:90,column:20},end:{line:90,column:138}},"65":{start:{line:92,column:16},end:{line:92,column:40}},"66":{start:{line:95,column:22},end:{line:95,column:31}},"67":{start:{line:96,column:8},end:{line:96,column:21}},"68":{start:{line:99,column:8},end:{line:101,column:9}},"69":{start:{line:100,column:12},end:{line:100,column:41}},"70":{start:{line:102,column:27},end:{line:102,column:43}},"71":{start:{line:103,column:25},end:{line:103,column:38}},"72":{start:{line:104,column:23},end:{line:104,column:36}},"73":{start:{line:105,column:28},end:{line:105,column:49}},"74":{start:{line:106,column:24},end:{line:106,column:47}},"75":{start:{line:107,column:25},end:{line:107,column:35}},"76":{start:{line:108,column:23},end:{line:108,column:33}},"77":{start:{line:109,column:26},end:{line:109,column:54}},"78":{start:{line:110,column:21},end:{line:110,column:75}},"79":{start:{line:111,column:8},end:{line:111,column:38}},"80":{start:{line:114,column:28},end:{line:114,column:54}},"81":{start:{line:115,column:8},end:{line:115,column:45}},"82":{start:{line:118,column:8},end:{line:120,column:9}},"83":{start:{line:119,column:12},end:{line:119,column:24}},"84":{start:{line:121,column:23},end:{line:121,column:39}},"85":{start:{line:122,column:8},end:{line:124,column:9}},"86":{start:{line:123,column:12},end:{line:123,column:24}},"87":{start:{line:125,column:31},end:{line:125,column:47}},"88":{start:{line:126,column:21},end:{line:126,column:30}},"89":{start:{line:127,column:26},end:{line:127,column:54}},"90":{start:{line:128,column:8},end:{line:128,column:67}},"91":{start:{line:129,column:8},end:{line:129,column:48}},"92":{start:{line:132,column:8},end:{line:132,column:43}},"93":{start:{line:135,column:23},end:{line:135,column:50}},"94":{start:{line:136,column:22},end:{line:136,column:41}},"95":{start:{line:137,column:22},end:{line:137,column:24}},"96":{start:{line:138,column:8},end:{line:146,column:11}},"97":{start:{line:139,column:23},end:{line:139,column:80}},"98":{start:{line:139,column:60},end:{line:139,column:79}},"99":{start:{line:140,column:12},end:{line:142,column:13}},"100":{start:{line:141,column:16},end:{line:141,column:123}},"101":{start:{line:143,column:12},end:{line:143,column:43}},"102":{start:{line:144,column:12},end:{line:144,column:28}},"103":{start:{line:145,column:12},end:{line:145,column:29}},"104":{start:{line:147,column:8},end:{line:147,column:25}},"105":{start:{line:150,column:0},end:{line:150,column:42}},"106":{start:{line:151,column:0},end:{line:151,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:4},end:{line:19,column:5}},loc:{start:{line:19,column:18},end:{line:30,column:5}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:4},end:{line:31,column:5}},loc:{start:{line:31,column:21},end:{line:60,column:5}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:35,column:25},end:{line:35,column:26}},loc:{start:{line:35,column:47},end:{line:58,column:9}},line:35},"3":{name:"(anonymous_3)",decl:{start:{line:42,column:38},end:{line:42,column:39}},loc:{start:{line:42,column:43},end:{line:42,column:59}},line:42},"4":{name:"(anonymous_4)",decl:{start:{line:51,column:52},end:{line:51,column:53}},loc:{start:{line:51,column:57},end:{line:51,column:96}},line:51},"5":{name:"(anonymous_5)",decl:{start:{line:51,column:72},end:{line:51,column:73}},loc:{start:{line:51,column:77},end:{line:51,column:95}},line:51},"6":{name:"(anonymous_6)",decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:33},end:{line:97,column:5}},line:61},"7":{name:"(anonymous_7)",decl:{start:{line:64,column:24},end:{line:64,column:25}},loc:{start:{line:64,column:46},end:{line:82,column:9}},line:64},"8":{name:"(anonymous_8)",decl:{start:{line:74,column:56},end:{line:74,column:57}},loc:{start:{line:74,column:61},end:{line:74,column:83}},line:74},"9":{name:"(anonymous_9)",decl:{start:{line:86,column:36},end:{line:86,column:37}},loc:{start:{line:86,column:60},end:{line:94,column:9}},line:86},"10":{name:"(anonymous_10)",decl:{start:{line:98,column:4},end:{line:98,column:5}},loc:{start:{line:98,column:31},end:{line:112,column:5}},line:98},"11":{name:"(anonymous_11)",decl:{start:{line:113,column:4},end:{line:113,column:5}},loc:{start:{line:113,column:32},end:{line:116,column:5}},line:113},"12":{name:"(anonymous_12)",decl:{start:{line:117,column:4},end:{line:117,column:5}},loc:{start:{line:117,column:26},end:{line:130,column:5}},line:117},"13":{name:"(anonymous_13)",decl:{start:{line:131,column:4},end:{line:131,column:5}},loc:{start:{line:131,column:32},end:{line:133,column:5}},line:131},"14":{name:"(anonymous_14)",decl:{start:{line:134,column:4},end:{line:134,column:5}},loc:{start:{line:134,column:36},end:{line:148,column:5}},line:134},"15":{name:"(anonymous_15)",decl:{start:{line:138,column:22},end:{line:138,column:23}},loc:{start:{line:138,column:39},end:{line:146,column:9}},line:138},"16":{name:"(anonymous_16)",decl:{start:{line:139,column:55},end:{line:139,column:56}},loc:{start:{line:139,column:60},end:{line:139,column:79}},line:139}},branchMap:{"0":{loc:{start:{line:38,column:12},end:{line:40,column:13}},type:"if",locations:[{start:{line:38,column:12},end:{line:40,column:13}},{start:{line:38,column:12},end:{line:40,column:13}}],line:38},"1":{loc:{start:{line:41,column:12},end:{line:56,column:13}},type:"if",locations:[{start:{line:41,column:12},end:{line:56,column:13}},{start:{line:41,column:12},end:{line:56,column:13}}],line:41},"2":{loc:{start:{line:41,column:16},end:{line:41,column:64}},type:"binary-expr",locations:[{start:{line:41,column:16},end:{line:41,column:39}},{start:{line:41,column:43},end:{line:41,column:64}}],line:41},"3":{loc:{start:{line:43,column:16},end:{line:45,column:17}},type:"if",locations:[{start:{line:43,column:16},end:{line:45,column:17}},{start:{line:43,column:16},end:{line:45,column:17}}],line:43},"4":{loc:{start:{line:48,column:16},end:{line:50,column:17}},type:"if",locations:[{start:{line:48,column:16},end:{line:50,column:17}},{start:{line:48,column:16},end:{line:50,column:17}}],line:48},"5":{loc:{start:{line:52,column:16},end:{line:54,column:17}},type:"if",locations:[{start:{line:52,column:16},end:{line:54,column:17}},{start:{line:52,column:16},end:{line:54,column:17}}],line:52},"6":{loc:{start:{line:65,column:12},end:{line:67,column:13}},type:"if",locations:[{start:{line:65,column:12},end:{line:67,column:13}},{start:{line:65,column:12},end:{line:67,column:13}}],line:65},"7":{loc:{start:{line:68,column:12},end:{line:80,column:13}},type:"if",locations:[{start:{line:68,column:12},end:{line:80,column:13}},{start:{line:68,column:12},end:{line:80,column:13}}],line:68},"8":{loc:{start:{line:70,column:16},end:{line:79,column:17}},type:"if",locations:[{start:{line:70,column:16},end:{line:79,column:17}},{start:{line:70,column:16},end:{line:79,column:17}}],line:70},"9":{loc:{start:{line:71,column:20},end:{line:73,column:21}},type:"if",locations:[{start:{line:71,column:20},end:{line:73,column:21}},{start:{line:71,column:20},end:{line:73,column:21}}],line:71},"10":{loc:{start:{line:75,column:20},end:{line:77,column:21}},type:"if",locations:[{start:{line:75,column:20},end:{line:77,column:21}},{start:{line:75,column:20},end:{line:77,column:21}}],line:75},"11":{loc:{start:{line:87,column:12},end:{line:93,column:13}},type:"if",locations:[{start:{line:87,column:12},end:{line:93,column:13}},{start:{line:87,column:12},end:{line:93,column:13}}],line:87},"12":{loc:{start:{line:87,column:16},end:{line:87,column:64}},type:"binary-expr",locations:[{start:{line:87,column:16},end:{line:87,column:39}},{start:{line:87,column:43},end:{line:87,column:64}}],line:87},"13":{loc:{start:{line:89,column:16},end:{line:91,column:17}},type:"if",locations:[{start:{line:89,column:16},end:{line:91,column:17}},{start:{line:89,column:16},end:{line:91,column:17}}],line:89},"14":{loc:{start:{line:99,column:8},end:{line:101,column:9}},type:"if",locations:[{start:{line:99,column:8},end:{line:101,column:9}},{start:{line:99,column:8},end:{line:101,column:9}}],line:99},"15":{loc:{start:{line:118,column:8},end:{line:120,column:9}},type:"if",locations:[{start:{line:118,column:8},end:{line:120,column:9}},{start:{line:118,column:8},end:{line:120,column:9}}],line:118},"16":{loc:{start:{line:122,column:8},end:{line:124,column:9}},type:"if",locations:[{start:{line:122,column:8},end:{line:124,column:9}},{start:{line:122,column:8},end:{line:124,column:9}}],line:122},"17":{loc:{start:{line:140,column:12},end:{line:142,column:13}},type:"if",locations:[{start:{line:140,column:12},end:{line:142,column:13}},{start:{line:140,column:12},end:{line:142,column:13}}],line:140}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/state-serializer.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/state-serializer.ts"],names:[],mappings:"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",sourcesContent:["import { GameError } from '../game-error';\nimport { GameCoreError } from '../game-message';\nimport { Serializer, SerializerContext, SerializedState, Serialized } from './serializer.interface';\nimport { State } from '../store/state/state';\nimport { Card } from '../store/card/card';\nimport { GenericSerializer } from './generic.serializer';\nimport { Rules } from '../store/state/rules';\nimport { Player } from '../store/state/player';\nimport { CardSerializer } from './card.serializer';\nimport { CardListSerializer } from './card-list.serializer';\nimport { Marker } from '../store/state/card-marker';\nimport { StateLogSerializer } from './state-log.serializer';\nimport { PromptSerializer } from './prompt.serializer';\nimport { PathBuilder } from './path-builder';\nimport { deepIterate, deepClone } from '../../utils';\nimport { JsonPatch } from './json-patch';\nimport { JsonDiff } from './json-patch.interface';\n\nexport class StateSerializer {\n\n  public serializers: Serializer<any>[];\n  public static knownCards: Card[] = [];\n\n  constructor() {\n    this.serializers = [\n      new GenericSerializer(State, 'State'),\n      new GenericSerializer(Rules, 'Rules'),\n      new GenericSerializer(Player, 'Player'),\n      new GenericSerializer(Marker, 'Marker'),\n      new CardSerializer(),\n      new CardListSerializer(),\n      new StateLogSerializer(),\n      new PromptSerializer()\n    ];\n  }\n\n  public serialize(state: State): SerializedState {\n    const serializers = this.serializers;\n    const refs: { node: Object, path: string }[] = [];\n    const pathBuilder = new PathBuilder();\n\n    const replacer: any = function(this: any, key: string, value: any) {\n      pathBuilder.goTo(this, key);\n      const path = pathBuilder.getPath();\n\n      if (value instanceof Array) {\n        return value;\n      }\n      if (value instanceof Object && value._type !== 'Ref') {\n        const ref = refs.find(r => r.node === value);\n        if (ref !== undefined) {\n          return { _type: 'Ref', path: ref.path };\n        }\n        refs.push({ node: value, path });\n        const name = value.constructor.name;\n        if (name === 'Object') {\n          return value;\n        }\n        const serializer = serializers.find(s => s.classes.some(c => value instanceof c));\n        if (serializer !== undefined) {\n          return serializer.serialize(value);\n        }\n        throw new GameError(GameCoreError.ERROR_SERIALIZER, `Unknown serializer for '${name}'.`);\n      }\n      return value;\n    };\n    return JSON.stringify([state.players, state], replacer);\n  }\n\n  public deserialize(serializedState: SerializedState): State {\n    const serializers = this.serializers;\n    const context = this.restoreContext(serializedState);\n\n    const reviver: any = function (this: any, key: string, value: any) {\n      if (value instanceof Array) {\n        return value;\n      }\n      if (value instanceof Object) {\n        const name = (value as Serialized)._type;\n        if (typeof name === 'string') {\n          if (name === 'Ref') {\n            return value;\n          }\n          const serializer = serializers.find(s => s.types.includes(name));\n          if (serializer !== undefined) {\n            return serializer.deserialize(value, context);\n          }\n          throw new GameError(GameCoreError.ERROR_SERIALIZER, `Unknown deserializer for '${name}'.`);\n        }\n      }\n      return value;\n    };\n\n    const parsed = JSON.parse(serializedState, reviver);\n\n    // Restore Refs\n    const pathBuilder = new PathBuilder();\n    deepIterate(parsed, (holder, key, value) => {\n      if (value instanceof Object && value._type === 'Ref') {\n        const reference = pathBuilder.getValue(parsed, value.path);\n        if (reference === undefined) {\n          throw new GameError(GameCoreError.ERROR_SERIALIZER, `Unknown reference '${value.path}'.`);\n        }\n        holder[key] = reference;\n      }\n    });\n\n    const state = parsed[1];\n    return state;\n  }\n\n  public serializeDiff(base: SerializedState | undefined, state: State): SerializedState {\n    if (base === undefined) {\n      return this.serialize(state);\n    }\n    const parsedBase = JSON.parse(base);\n\n    const players1 = parsedBase[0];\n    const state1 = parsedBase[1];\n\n    const serialized2 = this.serialize(state);\n    const parsed2 = JSON.parse(serialized2);\n    const players2 = parsed2[0];\n    const state2 = parsed2[1];\n\n    const jsonPatch = new JsonPatch();\n    const diff = jsonPatch.diff([players1, state1], [players2, state2]);\n    return JSON.stringify([ diff ]);\n  }\n\n  public deserializeDiff(base: SerializedState | undefined, data: SerializedState): State {\n    const updatedData = this.applyDiff(base, data);\n    return this.deserialize(updatedData);\n  }\n\n  public applyDiff(base: SerializedState | undefined, data: SerializedState): SerializedState {\n    if (base === undefined) {\n      return data;\n    }\n\n    const parsed = JSON.parse(data);\n    if (parsed.length > 1) {\n      return data;\n    }\n\n    let [ players, state ] = JSON.parse(base);\n    const diff: JsonDiff[] = parsed[0];\n\n    const jsonPatch = new JsonPatch();\n    [ players, state ] = jsonPatch.apply([ players, state ], diff);\n\n    return JSON.stringify([ players, state ]);\n  }\n\n  public static setKnownCards(cards: Card[]) {\n    StateSerializer.knownCards = cards;\n  }\n\n  private restoreContext(serializedState: SerializedState): SerializerContext {\n    const parsed = JSON.parse(serializedState);\n    const names: string[] = parsed[1].cardNames;\n    const cards: Card[] = [];\n    names.forEach((name, index) => {\n      let card: Card | undefined = StateSerializer.knownCards.find(c => c.fullName === name);\n      if (card === undefined) {\n        throw new GameError(GameCoreError.ERROR_SERIALIZER, `Unknown card '${name}'.`);\n      }\n      card = deepClone(card) as Card;\n      card.id = index;\n      cards.push(card);\n    });\n    return { cards };\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"311697c64fb2a7957e50a31e90aae2b0701474d6"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_k6c6qoji3=function(){return actualCoverage;};}return actualCoverage;}cov_k6c6qoji3();cov_k6c6qoji3().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_k6c6qoji3().s[1]++;exports.StateSerializer=void 0;const game_error_1=(cov_k6c6qoji3().s[2]++,require("../game-error"));const game_message_1=(cov_k6c6qoji3().s[3]++,require("../game-message"));const state_1=(cov_k6c6qoji3().s[4]++,require("../store/state/state"));const generic_serializer_1=(cov_k6c6qoji3().s[5]++,require("./generic.serializer"));const rules_1=(cov_k6c6qoji3().s[6]++,require("../store/state/rules"));const player_1=(cov_k6c6qoji3().s[7]++,require("../store/state/player"));const card_serializer_1=(cov_k6c6qoji3().s[8]++,require("./card.serializer"));const card_list_serializer_1=(cov_k6c6qoji3().s[9]++,require("./card-list.serializer"));const card_marker_1=(cov_k6c6qoji3().s[10]++,require("../store/state/card-marker"));const state_log_serializer_1=(cov_k6c6qoji3().s[11]++,require("./state-log.serializer"));const prompt_serializer_1=(cov_k6c6qoji3().s[12]++,require("./prompt.serializer"));const path_builder_1=(cov_k6c6qoji3().s[13]++,require("./path-builder"));const utils_1=(cov_k6c6qoji3().s[14]++,require("../../utils"));const json_patch_1=(cov_k6c6qoji3().s[15]++,require("./json-patch"));class StateSerializer{constructor(){cov_k6c6qoji3().f[0]++;cov_k6c6qoji3().s[16]++;this.serializers=[new generic_serializer_1.GenericSerializer(state_1.State,'State'),new generic_serializer_1.GenericSerializer(rules_1.Rules,'Rules'),new generic_serializer_1.GenericSerializer(player_1.Player,'Player'),new generic_serializer_1.GenericSerializer(card_marker_1.Marker,'Marker'),new card_serializer_1.CardSerializer(),new card_list_serializer_1.CardListSerializer(),new state_log_serializer_1.StateLogSerializer(),new prompt_serializer_1.PromptSerializer()];}serialize(state){cov_k6c6qoji3().f[1]++;const serializers=(cov_k6c6qoji3().s[17]++,this.serializers);const refs=(cov_k6c6qoji3().s[18]++,[]);const pathBuilder=(cov_k6c6qoji3().s[19]++,new path_builder_1.PathBuilder());cov_k6c6qoji3().s[20]++;const replacer=function(key,value){cov_k6c6qoji3().f[2]++;cov_k6c6qoji3().s[21]++;pathBuilder.goTo(this,key);const path=(cov_k6c6qoji3().s[22]++,pathBuilder.getPath());cov_k6c6qoji3().s[23]++;if(value instanceof Array){cov_k6c6qoji3().b[0][0]++;cov_k6c6qoji3().s[24]++;return value;}else{cov_k6c6qoji3().b[0][1]++;}cov_k6c6qoji3().s[25]++;if((cov_k6c6qoji3().b[2][0]++,value instanceof Object)&&(cov_k6c6qoji3().b[2][1]++,value._type!=='Ref')){cov_k6c6qoji3().b[1][0]++;const ref=(cov_k6c6qoji3().s[26]++,refs.find(r=>{cov_k6c6qoji3().f[3]++;cov_k6c6qoji3().s[27]++;return r.node===value;}));cov_k6c6qoji3().s[28]++;if(ref!==undefined){cov_k6c6qoji3().b[3][0]++;cov_k6c6qoji3().s[29]++;return{_type:'Ref',path:ref.path};}else{cov_k6c6qoji3().b[3][1]++;}cov_k6c6qoji3().s[30]++;refs.push({node:value,path});const name=(cov_k6c6qoji3().s[31]++,value.constructor.name);cov_k6c6qoji3().s[32]++;if(name==='Object'){cov_k6c6qoji3().b[4][0]++;cov_k6c6qoji3().s[33]++;return value;}else{cov_k6c6qoji3().b[4][1]++;}const serializer=(cov_k6c6qoji3().s[34]++,serializers.find(s=>{cov_k6c6qoji3().f[4]++;cov_k6c6qoji3().s[35]++;return s.classes.some(c=>{cov_k6c6qoji3().f[5]++;cov_k6c6qoji3().s[36]++;return value instanceof c;});}));cov_k6c6qoji3().s[37]++;if(serializer!==undefined){cov_k6c6qoji3().b[5][0]++;cov_k6c6qoji3().s[38]++;return serializer.serialize(value);}else{cov_k6c6qoji3().b[5][1]++;}cov_k6c6qoji3().s[39]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_SERIALIZER,`Unknown serializer for '${name}'.`);}else{cov_k6c6qoji3().b[1][1]++;}cov_k6c6qoji3().s[40]++;return value;};cov_k6c6qoji3().s[41]++;return JSON.stringify([state.players,state],replacer);}deserialize(serializedState){cov_k6c6qoji3().f[6]++;const serializers=(cov_k6c6qoji3().s[42]++,this.serializers);const context=(cov_k6c6qoji3().s[43]++,this.restoreContext(serializedState));cov_k6c6qoji3().s[44]++;const reviver=function(key,value){cov_k6c6qoji3().f[7]++;cov_k6c6qoji3().s[45]++;if(value instanceof Array){cov_k6c6qoji3().b[6][0]++;cov_k6c6qoji3().s[46]++;return value;}else{cov_k6c6qoji3().b[6][1]++;}cov_k6c6qoji3().s[47]++;if(value instanceof Object){cov_k6c6qoji3().b[7][0]++;const name=(cov_k6c6qoji3().s[48]++,value._type);cov_k6c6qoji3().s[49]++;if(typeof name==='string'){cov_k6c6qoji3().b[8][0]++;cov_k6c6qoji3().s[50]++;if(name==='Ref'){cov_k6c6qoji3().b[9][0]++;cov_k6c6qoji3().s[51]++;return value;}else{cov_k6c6qoji3().b[9][1]++;}const serializer=(cov_k6c6qoji3().s[52]++,serializers.find(s=>{cov_k6c6qoji3().f[8]++;cov_k6c6qoji3().s[53]++;return s.types.includes(name);}));cov_k6c6qoji3().s[54]++;if(serializer!==undefined){cov_k6c6qoji3().b[10][0]++;cov_k6c6qoji3().s[55]++;return serializer.deserialize(value,context);}else{cov_k6c6qoji3().b[10][1]++;}cov_k6c6qoji3().s[56]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_SERIALIZER,`Unknown deserializer for '${name}'.`);}else{cov_k6c6qoji3().b[8][1]++;}}else{cov_k6c6qoji3().b[7][1]++;}cov_k6c6qoji3().s[57]++;return value;};const parsed=(cov_k6c6qoji3().s[58]++,JSON.parse(serializedState,reviver));// Restore Refs
const pathBuilder=(cov_k6c6qoji3().s[59]++,new path_builder_1.PathBuilder());cov_k6c6qoji3().s[60]++;utils_1.deepIterate(parsed,(holder,key,value)=>{cov_k6c6qoji3().f[9]++;cov_k6c6qoji3().s[61]++;if((cov_k6c6qoji3().b[12][0]++,value instanceof Object)&&(cov_k6c6qoji3().b[12][1]++,value._type==='Ref')){cov_k6c6qoji3().b[11][0]++;const reference=(cov_k6c6qoji3().s[62]++,pathBuilder.getValue(parsed,value.path));cov_k6c6qoji3().s[63]++;if(reference===undefined){cov_k6c6qoji3().b[13][0]++;cov_k6c6qoji3().s[64]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_SERIALIZER,`Unknown reference '${value.path}'.`);}else{cov_k6c6qoji3().b[13][1]++;}cov_k6c6qoji3().s[65]++;holder[key]=reference;}else{cov_k6c6qoji3().b[11][1]++;}});const state=(cov_k6c6qoji3().s[66]++,parsed[1]);cov_k6c6qoji3().s[67]++;return state;}serializeDiff(base,state){cov_k6c6qoji3().f[10]++;cov_k6c6qoji3().s[68]++;if(base===undefined){cov_k6c6qoji3().b[14][0]++;cov_k6c6qoji3().s[69]++;return this.serialize(state);}else{cov_k6c6qoji3().b[14][1]++;}const parsedBase=(cov_k6c6qoji3().s[70]++,JSON.parse(base));const players1=(cov_k6c6qoji3().s[71]++,parsedBase[0]);const state1=(cov_k6c6qoji3().s[72]++,parsedBase[1]);const serialized2=(cov_k6c6qoji3().s[73]++,this.serialize(state));const parsed2=(cov_k6c6qoji3().s[74]++,JSON.parse(serialized2));const players2=(cov_k6c6qoji3().s[75]++,parsed2[0]);const state2=(cov_k6c6qoji3().s[76]++,parsed2[1]);const jsonPatch=(cov_k6c6qoji3().s[77]++,new json_patch_1.JsonPatch());const diff=(cov_k6c6qoji3().s[78]++,jsonPatch.diff([players1,state1],[players2,state2]));cov_k6c6qoji3().s[79]++;return JSON.stringify([diff]);}deserializeDiff(base,data){cov_k6c6qoji3().f[11]++;const updatedData=(cov_k6c6qoji3().s[80]++,this.applyDiff(base,data));cov_k6c6qoji3().s[81]++;return this.deserialize(updatedData);}applyDiff(base,data){cov_k6c6qoji3().f[12]++;cov_k6c6qoji3().s[82]++;if(base===undefined){cov_k6c6qoji3().b[15][0]++;cov_k6c6qoji3().s[83]++;return data;}else{cov_k6c6qoji3().b[15][1]++;}const parsed=(cov_k6c6qoji3().s[84]++,JSON.parse(data));cov_k6c6qoji3().s[85]++;if(parsed.length>1){cov_k6c6qoji3().b[16][0]++;cov_k6c6qoji3().s[86]++;return data;}else{cov_k6c6qoji3().b[16][1]++;}let[players,state]=(cov_k6c6qoji3().s[87]++,JSON.parse(base));const diff=(cov_k6c6qoji3().s[88]++,parsed[0]);const jsonPatch=(cov_k6c6qoji3().s[89]++,new json_patch_1.JsonPatch());cov_k6c6qoji3().s[90]++;[players,state]=jsonPatch.apply([players,state],diff);cov_k6c6qoji3().s[91]++;return JSON.stringify([players,state]);}static setKnownCards(cards){cov_k6c6qoji3().f[13]++;cov_k6c6qoji3().s[92]++;StateSerializer.knownCards=cards;}restoreContext(serializedState){cov_k6c6qoji3().f[14]++;const parsed=(cov_k6c6qoji3().s[93]++,JSON.parse(serializedState));const names=(cov_k6c6qoji3().s[94]++,parsed[1].cardNames);const cards=(cov_k6c6qoji3().s[95]++,[]);cov_k6c6qoji3().s[96]++;names.forEach((name,index)=>{cov_k6c6qoji3().f[15]++;let card=(cov_k6c6qoji3().s[97]++,StateSerializer.knownCards.find(c=>{cov_k6c6qoji3().f[16]++;cov_k6c6qoji3().s[98]++;return c.fullName===name;}));cov_k6c6qoji3().s[99]++;if(card===undefined){cov_k6c6qoji3().b[17][0]++;cov_k6c6qoji3().s[100]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_SERIALIZER,`Unknown card '${name}'.`);}else{cov_k6c6qoji3().b[17][1]++;}cov_k6c6qoji3().s[101]++;card=utils_1.deepClone(card);cov_k6c6qoji3().s[102]++;card.id=index;cov_k6c6qoji3().s[103]++;cards.push(card);});cov_k6c6qoji3().s[104]++;return{cards};}}cov_k6c6qoji3().s[105]++;exports.StateSerializer=StateSerializer;cov_k6c6qoji3().s[106]++;StateSerializer.knownCards=[];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2pvZW15ZXJzY291Z2gvRG9jdW1lbnRzL0dpdEh1Yi9wdGNnLWVwc2QvcHRjZy1zZXJ2ZXIvc3JjL2dhbWUvc2VyaWFsaXplci9zdGF0ZS1zZXJpYWxpemVyLnRzIiwic291cmNlcyI6WyIvVXNlcnMvam9lbXllcnNjb3VnaC9Eb2N1bWVudHMvR2l0SHViL3B0Y2ctZXBzZC9wdGNnLXNlcnZlci9zcmMvZ2FtZS9zZXJpYWxpemVyL3N0YXRlLXNlcmlhbGl6ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOENBQTBDO0FBQzFDLGtEQUFnRDtBQUVoRCxnREFBNkM7QUFFN0MsNkRBQXlEO0FBQ3pELGdEQUE2QztBQUM3QyxrREFBK0M7QUFDL0MsdURBQW1EO0FBQ25ELGlFQUE0RDtBQUM1RCw0REFBb0Q7QUFDcEQsaUVBQTREO0FBQzVELDJEQUF1RDtBQUN2RCxpREFBNkM7QUFDN0MsdUNBQXFEO0FBQ3JELDZDQUF5QztBQUd6QyxNQUFhLGVBQWU7SUFLMUI7UUFDRSxJQUFJLENBQUMsV0FBVyxHQUFHO1lBQ2pCLElBQUksc0NBQWlCLENBQUMsYUFBSyxFQUFFLE9BQU8sQ0FBQztZQUNyQyxJQUFJLHNDQUFpQixDQUFDLGFBQUssRUFBRSxPQUFPLENBQUM7WUFDckMsSUFBSSxzQ0FBaUIsQ0FBQyxlQUFNLEVBQUUsUUFBUSxDQUFDO1lBQ3ZDLElBQUksc0NBQWlCLENBQUMsb0JBQU0sRUFBRSxRQUFRLENBQUM7WUFDdkMsSUFBSSxnQ0FBYyxFQUFFO1lBQ3BCLElBQUkseUNBQWtCLEVBQUU7WUFDeEIsSUFBSSx5Q0FBa0IsRUFBRTtZQUN4QixJQUFJLG9DQUFnQixFQUFFO1NBQ3ZCLENBQUM7SUFDSixDQUFDO0lBRU0sU0FBUyxDQUFDLEtBQVk7UUFDM0IsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUNyQyxNQUFNLElBQUksR0FBcUMsRUFBRSxDQUFDO1FBQ2xELE1BQU0sV0FBVyxHQUFHLElBQUksMEJBQVcs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SkgsMENBNEpDO0FBekplLDBCQUFVLEdBQVcsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2FtZUVycm9yIH0gZnJvbSAnLi4vZ2FtZS1lcnJvcic7XG5pbXBvcnQgeyBHYW1lQ29yZUVycm9yIH0gZnJvbSAnLi4vZ2FtZS1tZXNzYWdlJztcbmltcG9ydCB7IFNlcmlhbGl6ZXIsIFNlcmlhbGl6ZXJDb250ZXh0LCBTZXJpYWxpemVkU3RhdGUsIFNlcmlhbGl6ZWQgfSBmcm9tICcuL3NlcmlhbGl6ZXIuaW50ZXJmYWNlJztcbmltcG9ydCB7IFN0YXRlIH0gZnJvbSAnLi4vc3RvcmUvc3RhdGUvc3RhdGUnO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJy4uL3N0b3JlL2NhcmQvY2FyZCc7XG5pbXBvcnQgeyBHZW5lcmljU2VyaWFsaXplciB9IGZyb20gJy4vZ2VuZXJpYy5zZXJpYWxpemVyJztcbmltcG9ydCB7IFJ1bGVzIH0gZnJvbSAnLi4vc3RvcmUvc3RhdGUvcnVsZXMnO1xuaW1wb3J0IHsgUGxheWVyIH0gZnJvbSAnLi4vc3RvcmUvc3RhdGUvcGxheWVyJztcbmltcG9ydCB7IENhcmRTZXJpYWxpemVyIH0gZnJvbSAnLi9jYXJkLnNlcmlhbGl6ZXInO1xuaW1wb3J0IHsgQ2FyZExpc3RTZXJpYWxpemVyIH0gZnJvbSAnLi9jYXJkLWxpc3Quc2VyaWFsaXplcic7XG5pbXBvcnQgeyBNYXJrZXIgfSBmcm9tICcuLi9zdG9yZS9zdGF0ZS9jYXJkLW1hcmtlcic7XG5pbXBvcnQgeyBTdGF0ZUxvZ1NlcmlhbGl6ZXIgfSBmcm9tICcuL3N0YXRlLWxvZy5zZXJpYWxpemVyJztcbmltcG9ydCB7IFByb21wdFNlcmlhbGl6ZXIgfSBmcm9tICcuL3Byb21wdC5zZXJpYWxpemVyJztcbmltcG9ydCB7IFBhdGhCdWlsZGVyIH0gZnJvbSAnLi9wYXRoLWJ1aWxkZXInO1xuaW1wb3J0IHsgZGVlcEl0ZXJhdGUsIGRlZXBDbG9uZSB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IEpzb25QYXRjaCB9IGZyb20gJy4vanNvbi1wYXRjaCc7XG5pbXBvcnQgeyBKc29uRGlmZiB9IGZyb20gJy4vanNvbi1wYXRjaC5pbnRlcmZhY2UnO1xuXG5leHBvcnQgY2xhc3MgU3RhdGVTZXJpYWxpemVyIHtcblxuICBwdWJsaWMgc2VyaWFsaXplcnM6IFNlcmlhbGl6ZXI8YW55PltdO1xuICBwdWJsaWMgc3RhdGljIGtub3duQ2FyZHM6IENhcmRbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc2VyaWFsaXplcnMgPSBbXG4gICAgICBuZXcgR2VuZXJpY1NlcmlhbGl6ZXIoU3RhdGUsICdTdGF0ZScpLFxuICAgICAgbmV3IEdlbmVyaWNTZXJpYWxpemVyKFJ1bGVzLCAnUnVsZXMnKSxcbiAgICAgIG5ldyBHZW5lcmljU2VyaWFsaXplcihQbGF5ZXIsICdQbGF5ZXInKSxcbiAgICAgIG5ldyBHZW5lcmljU2VyaWFsaXplcihNYXJrZXIsICdNYXJrZXInKSxcbiAgICAgIG5ldyBDYXJkU2VyaWFsaXplcigpLFxuICAgICAgbmV3IENhcmRMaXN0U2VyaWFsaXplcigpLFxuICAgICAgbmV3IFN0YXRlTG9nU2VyaWFsaXplcigpLFxuICAgICAgbmV3IFByb21wdFNlcmlhbGl6ZXIoKVxuICAgIF07XG4gIH1cblxuICBwdWJsaWMgc2VyaWFsaXplKHN0YXRlOiBTdGF0ZSk6IFNlcmlhbGl6ZWRTdGF0ZSB7XG4gICAgY29uc3Qgc2VyaWFsaXplcnMgPSB0aGlzLnNlcmlhbGl6ZXJzO1xuICAgIGNvbnN0IHJlZnM6IHsgbm9kZTogT2JqZWN0LCBwYXRoOiBzdHJpbmcgfVtdID0gW107XG4gICAgY29uc3QgcGF0aEJ1aWxkZXIgPSBuZXcgUGF0aEJ1aWxkZXIoKTtcblxuICAgIGNvbnN0IHJlcGxhY2VyOiBhbnkgPSBmdW5jdGlvbih0aGlzOiBhbnksIGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgICBwYXRoQnVpbGRlci5nb1RvKHRoaXMsIGtleSk7XG4gICAgICBjb25zdCBwYXRoID0gcGF0aEJ1aWxkZXIuZ2V0UGF0aCgpO1xuXG4gICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgdmFsdWUuX3R5cGUgIT09ICdSZWYnKSB7XG4gICAgICAgIGNvbnN0IHJlZiA9IHJlZnMuZmluZChyID0+IHIubm9kZSA9PT0gdmFsdWUpO1xuICAgICAgICBpZiAocmVmICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICByZXR1cm4geyBfdHlwZTogJ1JlZicsIHBhdGg6IHJlZi5wYXRoIH07XG4gICAgICAgIH1cbiAgICAgICAgcmVmcy5wdXNoKHsgbm9kZTogdmFsdWUsIHBhdGggfSk7XG4gICAgICAgIGNvbnN0IG5hbWUgPSB2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgICAgICBpZiAobmFtZSA9PT0gJ09iamVjdCcpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2VyaWFsaXplciA9IHNlcmlhbGl6ZXJzLmZpbmQocyA9PiBzLmNsYXNzZXMuc29tZShjID0+IHZhbHVlIGluc3RhbmNlb2YgYykpO1xuICAgICAgICBpZiAoc2VyaWFsaXplciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcmV0dXJuIHNlcmlhbGl6ZXIuc2VyaWFsaXplKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgR2FtZUVycm9yKEdhbWVDb3JlRXJyb3IuRVJST1JfU0VSSUFMSVpFUiwgYFVua25vd24gc2VyaWFsaXplciBmb3IgJyR7bmFtZX0nLmApO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KFtzdGF0ZS5wbGF5ZXJzLCBzdGF0ZV0sIHJlcGxhY2VyKTtcbiAgfVxuXG4gIHB1YmxpYyBkZXNlcmlhbGl6ZShzZXJpYWxpemVkU3RhdGU6IFNlcmlhbGl6ZWRTdGF0ZSk6IFN0YXRlIHtcbiAgICBjb25zdCBzZXJpYWxpemVycyA9IHRoaXMuc2VyaWFsaXplcnM7XG4gICAgY29uc3QgY29udGV4dCA9IHRoaXMucmVzdG9yZUNvbnRleHQoc2VyaWFsaXplZFN0YXRlKTtcblxuICAgIGNvbnN0IHJldml2ZXI6IGFueSA9IGZ1bmN0aW9uICh0aGlzOiBhbnksIGtleTogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG4gICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3QpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9ICh2YWx1ZSBhcyBTZXJpYWxpemVkKS5fdHlwZTtcbiAgICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGlmIChuYW1lID09PSAnUmVmJykge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCBzZXJpYWxpemVyID0gc2VyaWFsaXplcnMuZmluZChzID0+IHMudHlwZXMuaW5jbHVkZXMobmFtZSkpO1xuICAgICAgICAgIGlmIChzZXJpYWxpemVyICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBzZXJpYWxpemVyLmRlc2VyaWFsaXplKHZhbHVlLCBjb250ZXh0KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhyb3cgbmV3IEdhbWVFcnJvcihHYW1lQ29yZUVycm9yLkVSUk9SX1NFUklBTElaRVIsIGBVbmtub3duIGRlc2VyaWFsaXplciBmb3IgJyR7bmFtZX0nLmApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfTtcblxuICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2Uoc2VyaWFsaXplZFN0YXRlLCByZXZpdmVyKTtcblxuICAgIC8vIFJlc3RvcmUgUmVmc1xuICAgIGNvbnN0IHBhdGhCdWlsZGVyID0gbmV3IFBhdGhCdWlsZGVyKCk7XG4gICAgZGVlcEl0ZXJhdGUocGFyc2VkLCAoaG9sZGVyLCBrZXksIHZhbHVlKSA9PiB7XG4gICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgdmFsdWUuX3R5cGUgPT09ICdSZWYnKSB7XG4gICAgICAgIGNvbnN0IHJlZmVyZW5jZSA9IHBhdGhCdWlsZGVyLmdldFZhbHVlKHBhcnNlZCwgdmFsdWUucGF0aCk7XG4gICAgICAgIGlmIChyZWZlcmVuY2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHRocm93IG5ldyBHYW1lRXJyb3IoR2FtZUNvcmVFcnJvci5FUlJPUl9TRVJJQUxJWkVSLCBgVW5rbm93biByZWZlcmVuY2UgJyR7dmFsdWUucGF0aH0nLmApO1xuICAgICAgICB9XG4gICAgICAgIGhvbGRlcltrZXldID0gcmVmZXJlbmNlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgY29uc3Qgc3RhdGUgPSBwYXJzZWRbMV07XG4gICAgcmV0dXJuIHN0YXRlO1xuICB9XG5cbiAgcHVibGljIHNlcmlhbGl6ZURpZmYoYmFzZTogU2VyaWFsaXplZFN0YXRlIHwgdW5kZWZpbmVkLCBzdGF0ZTogU3RhdGUpOiBTZXJpYWxpemVkU3RhdGUge1xuICAgIGlmIChiYXNlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLnNlcmlhbGl6ZShzdGF0ZSk7XG4gICAgfVxuICAgIGNvbnN0IHBhcnNlZEJhc2UgPSBKU09OLnBhcnNlKGJhc2UpO1xuXG4gICAgY29uc3QgcGxheWVyczEgPSBwYXJzZWRCYXNlWzBdO1xuICAgIGNvbnN0IHN0YXRlMSA9IHBhcnNlZEJhc2VbMV07XG5cbiAgICBjb25zdCBzZXJpYWxpemVkMiA9IHRoaXMuc2VyaWFsaXplKHN0YXRlKTtcbiAgICBjb25zdCBwYXJzZWQyID0gSlNPTi5wYXJzZShzZXJpYWxpemVkMik7XG4gICAgY29uc3QgcGxheWVyczIgPSBwYXJzZWQyWzBdO1xuICAgIGNvbnN0IHN0YXRlMiA9IHBhcnNlZDJbMV07XG5cbiAgICBjb25zdCBqc29uUGF0Y2ggPSBuZXcgSnNvblBhdGNoKCk7XG4gICAgY29uc3QgZGlmZiA9IGpzb25QYXRjaC5kaWZmKFtwbGF5ZXJzMSwgc3RhdGUxXSwgW3BsYXllcnMyLCBzdGF0ZTJdKTtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoWyBkaWZmIF0pO1xuICB9XG5cbiAgcHVibGljIGRlc2VyaWFsaXplRGlmZihiYXNlOiBTZXJpYWxpemVkU3RhdGUgfCB1bmRlZmluZWQsIGRhdGE6IFNlcmlhbGl6ZWRTdGF0ZSk6IFN0YXRlIHtcbiAgICBjb25zdCB1cGRhdGVkRGF0YSA9IHRoaXMuYXBwbHlEaWZmKGJhc2UsIGRhdGEpO1xuICAgIHJldHVybiB0aGlzLmRlc2VyaWFsaXplKHVwZGF0ZWREYXRhKTtcbiAgfVxuXG4gIHB1YmxpYyBhcHBseURpZmYoYmFzZTogU2VyaWFsaXplZFN0YXRlIHwgdW5kZWZpbmVkLCBkYXRhOiBTZXJpYWxpemVkU3RhdGUpOiBTZXJpYWxpemVkU3RhdGUge1xuICAgIGlmIChiYXNlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgaWYgKHBhcnNlZC5sZW5ndGggPiAxKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG5cbiAgICBsZXQgWyBwbGF5ZXJzLCBzdGF0ZSBdID0gSlNPTi5wYXJzZShiYXNlKTtcbiAgICBjb25zdCBkaWZmOiBKc29uRGlmZltdID0gcGFyc2VkWzBdO1xuXG4gICAgY29uc3QganNvblBhdGNoID0gbmV3IEpzb25QYXRjaCgpO1xuICAgIFsgcGxheWVycywgc3RhdGUgXSA9IGpzb25QYXRjaC5hcHBseShbIHBsYXllcnMsIHN0YXRlIF0sIGRpZmYpO1xuXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KFsgcGxheWVycywgc3RhdGUgXSk7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIHNldEtub3duQ2FyZHMoY2FyZHM6IENhcmRbXSkge1xuICAgIFN0YXRlU2VyaWFsaXplci5rbm93bkNhcmRzID0gY2FyZHM7XG4gIH1cblxuICBwcml2YXRlIHJlc3RvcmVDb250ZXh0KHNlcmlhbGl6ZWRTdGF0ZTogU2VyaWFsaXplZFN0YXRlKTogU2VyaWFsaXplckNvbnRleHQge1xuICAgIGNvbnN0IHBhcnNlZCA9IEpTT04ucGFyc2Uoc2VyaWFsaXplZFN0YXRlKTtcbiAgICBjb25zdCBuYW1lczogc3RyaW5nW10gPSBwYXJzZWRbMV0uY2FyZE5hbWVzO1xuICAgIGNvbnN0IGNhcmRzOiBDYXJkW10gPSBbXTtcbiAgICBuYW1lcy5mb3JFYWNoKChuYW1lLCBpbmRleCkgPT4ge1xuICAgICAgbGV0IGNhcmQ6IENhcmQgfCB1bmRlZmluZWQgPSBTdGF0ZVNlcmlhbGl6ZXIua25vd25DYXJkcy5maW5kKGMgPT4gYy5mdWxsTmFtZSA9PT0gbmFtZSk7XG4gICAgICBpZiAoY2FyZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBHYW1lRXJyb3IoR2FtZUNvcmVFcnJvci5FUlJPUl9TRVJJQUxJWkVSLCBgVW5rbm93biBjYXJkICcke25hbWV9Jy5gKTtcbiAgICAgIH1cbiAgICAgIGNhcmQgPSBkZWVwQ2xvbmUoY2FyZCkgYXMgQ2FyZDtcbiAgICAgIGNhcmQuaWQgPSBpbmRleDtcbiAgICAgIGNhcmRzLnB1c2goY2FyZCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHsgY2FyZHMgfTtcbiAgfVxuXG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,