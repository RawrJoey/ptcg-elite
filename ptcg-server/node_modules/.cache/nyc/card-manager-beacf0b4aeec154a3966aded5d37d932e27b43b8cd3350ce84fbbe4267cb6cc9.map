{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/cards/card-manager.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/cards/card-manager.ts"],"names":[],"mappings":";;;AACA,6CAA8C;AAE9C,MAAa,WAAW;IAAxB;QAIU,UAAK,GAAW,EAAE,CAAC;IAkC7B,CAAC;IAhCQ,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACzB,WAAW,CAAC,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;SAC1C;QAED,OAAO,WAAW,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAEM,SAAS,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;IAC5B,CAAC;IAEM,UAAU,CAAC,IAAU;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAEM,aAAa,CAAC,IAAY;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC;QACrD,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,IAAI,GAAG,iBAAS,CAAC,IAAI,CAAC,CAAC;SACxB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,aAAa,CAAC,IAAY;QAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,SAAS,CAAC;IACjE,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CAEF;AAtCD,kCAsCC","sourcesContent":["import { Card } from '../store/card/card';\nimport { deepClone } from '../../utils/utils';\n\nexport class CardManager {\n\n  private static instance: CardManager;\n\n  private cards: Card[] = [];\n\n  public static getInstance(): CardManager {\n    if (!CardManager.instance) {\n      CardManager.instance = new CardManager();\n    }\n\n    return CardManager.instance;\n  }\n\n  public defineSet(cards: Card[]): void {\n    this.cards.push(...cards);\n  }\n\n  public defineCard(card: Card): void {\n    this.cards.push(card);\n  }\n\n  public getCardByName(name: string): Card | undefined {\n    let card = this.cards.find(c => c.fullName === name);\n    if (card !== undefined) {\n      card = deepClone(card);\n    }\n    return card;\n  }\n\n  public isCardDefined(name: string): boolean {\n    return this.cards.find(c => c.fullName === name) !== undefined;\n  }\n\n  public getAllCards(): Card[] {\n    return this.cards;\n  }\n\n}\n"]}