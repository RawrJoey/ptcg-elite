{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/card-list.serializer.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/card-list.serializer.ts"],"names":[],"mappings":";;;AACA,wDAAoD;AAEpD,8CAA0C;AAC1C,kDAAgD;AAChD,wEAAmE;AAEnE,MAAa,kBAAkB;IAK7B;QAHgB,UAAK,GAAG,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;QACxC,YAAO,GAAG,CAAC,oBAAQ,EAAE,mCAAe,CAAC,CAAC;IAErC,CAAC;IAEX,SAAS,CAAC,QAAkB;QACjC,MAAM,IAAI,qBAAa,QAAQ,CAAE,CAAC;QAClC,IAAI,eAAe,GAAG,UAAU,CAAC;QAEjC,IAAI,QAAQ,YAAY,mCAAe,EAAE;YACvC,eAAe,GAAG,iBAAiB,CAAC;YACpC,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC/B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;aAC9B;SACF;QAED,uCACK,IAAI,KACP,KAAK,EAAE,eAAe,EACtB,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAC1C;IACJ,CAAC;IAEM,WAAW,CAAC,IAAgB,EAAE,OAA0B;QAC7D,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,KAAK,iBAAiB;YAC/C,CAAC,CAAC,IAAI,mCAAe,EAAE;YACvB,CAAC,CAAC,IAAI,oBAAQ,EAAE,CAAC;QAEnB,OAAQ,IAAY,CAAC,KAAK,CAAC;QAE3B,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAChD;QAED,MAAM,OAAO,GAAa,IAAI,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;QAElE,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAEO,SAAS,CAAC,KAAa,EAAE,OAA0B;QACzD,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,MAAM,IAAI,sBAAS,CAAC,4BAAa,CAAC,gBAAgB,EAAE,4BAA4B,KAAK,IAAI,CAAC,CAAC;SAC5F;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;AAlDD,gDAkDC","sourcesContent":["import { SerializerContext, Serialized, Serializer } from './serializer.interface';\nimport { CardList } from '../store/state/card-list';\nimport { Card } from '../store/card/card';\nimport { GameError } from '../game-error';\nimport { GameCoreError } from '../game-message';\nimport { PokemonCardList } from '../store/state/pokemon-card-list';\n\nexport class CardListSerializer implements Serializer<CardList> {\n\n  public readonly types = ['CardList', 'PokemonCardList'];\n  public readonly classes = [CardList, PokemonCardList];\n\n  constructor () { }\n\n  public serialize(cardList: CardList): Serialized {\n    const data: any = { ...cardList };\n    let constructorName = 'CardList';\n\n    if (cardList instanceof PokemonCardList) {\n      constructorName = 'PokemonCardList';\n      if (cardList.tool !== undefined) {\n        data.tool = cardList.tool.id;\n      }\n    }\n\n    return {\n      ...data,\n      _type: constructorName,\n      cards: cardList.cards.map(card => card.id)\n    };\n  }\n\n  public deserialize(data: Serialized, context: SerializerContext): CardList {\n    const instance = data._type === 'PokemonCardList'\n      ? new PokemonCardList()\n      : new CardList();\n\n    delete (data as any)._type;\n\n    if (data.tool !== undefined) {\n      data.tool = this.fromIndex(data.tool, context);\n    }\n\n    const indexes: number[] = data.cards;\n    data.cards = indexes.map(index => this.fromIndex(index, context));\n\n    return Object.assign(instance, data);\n  }\n\n  private fromIndex(index: number, context: SerializerContext): Card {\n    const card = context.cards[index];\n    if (card === undefined) {\n      throw new GameError(GameCoreError.ERROR_SERIALIZER, `Card not found on index '${index}'.`);\n    }\n    return card;\n  }\n\n}\n"]}