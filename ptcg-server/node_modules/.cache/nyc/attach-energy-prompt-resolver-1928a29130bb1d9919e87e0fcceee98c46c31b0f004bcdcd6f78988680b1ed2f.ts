"use strict";function cov_17ld6euaas(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/attach-energy-prompt-resolver.ts";var hash="e3eee3c6a5ff4da48c0815092ec7f8b874705be3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/attach-energy-prompt-resolver.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:44}},"2":{start:{line:4,column:31},end:{line:4,column:87}},"3":{start:{line:5,column:15},end:{line:5,column:36}},"4":{start:{line:6,column:26},end:{line:6,column:54}},"5":{start:{line:7,column:16},end:{line:7,column:44}},"6":{start:{line:10,column:8},end:{line:13,column:9}},"7":{start:{line:11,column:27},end:{line:11,column:62}},"8":{start:{line:12,column:12},end:{line:12,column:69}},"9":{start:{line:16,column:21},end:{line:16,column:60}},"10":{start:{line:17,column:24},end:{line:17,column:26}},"11":{start:{line:18,column:26},end:{line:18,column:68}},"12":{start:{line:19,column:8},end:{line:21,column:9}},"13":{start:{line:20,column:12},end:{line:20,column:60}},"14":{start:{line:22,column:8},end:{line:24,column:9}},"15":{start:{line:23,column:12},end:{line:23,column:58}},"16":{start:{line:25,column:25},end:{line:25,column:62}},"17":{start:{line:26,column:22},end:{line:26,column:44}},"18":{start:{line:27,column:20},end:{line:27,column:22}},"19":{start:{line:28,column:8},end:{line:35,column:9}},"20":{start:{line:28,column:21},end:{line:28,column:22}},"21":{start:{line:29,column:27},end:{line:29,column:84}},"22":{start:{line:30,column:12},end:{line:32,column:13}},"23":{start:{line:31,column:16},end:{line:31,column:22}},"24":{start:{line:33,column:12},end:{line:33,column:48}},"25":{start:{line:34,column:12},end:{line:34,column:57}},"26":{start:{line:36,column:8},end:{line:36,column:50}},"27":{start:{line:36,column:31},end:{line:36,column:48}},"28":{start:{line:37,column:8},end:{line:37,column:60}},"29":{start:{line:40,column:25},end:{line:40,column:46}},"30":{start:{line:41,column:8},end:{line:43,column:11}},"31":{start:{line:42,column:12},end:{line:42,column:59}},"32":{start:{line:44,column:8},end:{line:44,column:56}},"33":{start:{line:45,column:8},end:{line:45,column:24}},"34":{start:{line:48,column:23},end:{line:48,column:72}},"35":{start:{line:48,column:47},end:{line:48,column:71}},"36":{start:{line:49,column:25},end:{line:49,column:74}},"37":{start:{line:49,column:49},end:{line:49,column:73}},"38":{start:{line:50,column:8},end:{line:52,column:9}},"39":{start:{line:51,column:12},end:{line:51,column:19}},"40":{start:{line:53,column:28},end:{line:53,column:109}},"41":{start:{line:54,column:26},end:{line:54,column:110}},"42":{start:{line:55,column:22},end:{line:55,column:24}},"43":{start:{line:56,column:8},end:{line:62,column:9}},"44":{start:{line:57,column:12},end:{line:61,column:15}},"45":{start:{line:58,column:16},end:{line:60,column:17}},"46":{start:{line:59,column:20},end:{line:59,column:65}},"47":{start:{line:63,column:8},end:{line:69,column:9}},"48":{start:{line:64,column:12},end:{line:68,column:15}},"49":{start:{line:65,column:16},end:{line:67,column:17}},"50":{start:{line:66,column:20},end:{line:66,column:65}},"51":{start:{line:70,column:24},end:{line:70,column:104}},"52":{start:{line:70,column:58},end:{line:70,column:103}},"53":{start:{line:71,column:8},end:{line:71,column:69}},"54":{start:{line:71,column:38},end:{line:71,column:67}},"55":{start:{line:72,column:8},end:{line:74,column:9}},"56":{start:{line:73,column:12},end:{line:73,column:19}},"57":{start:{line:76,column:8},end:{line:80,column:9}},"58":{start:{line:77,column:12},end:{line:77,column:55}},"59":{start:{line:78,column:12},end:{line:78,column:64}},"60":{start:{line:79,column:12},end:{line:79,column:55}},"61":{start:{line:81,column:8},end:{line:81,column:50}},"62":{start:{line:81,column:31},end:{line:81,column:48}},"63":{start:{line:82,column:23},end:{line:82,column:33}},"64":{start:{line:83,column:8},end:{line:83,column:51}},"65":{start:{line:84,column:8},end:{line:84,column:77}},"66":{start:{line:87,column:0},end:{line:87,column:64}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:4},end:{line:9,column:5}},loc:{start:{line:9,column:41},end:{line:14,column:5}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:15,column:4},end:{line:15,column:5}},loc:{start:{line:15,column:35},end:{line:38,column:5}},line:15},"2":{name:"(anonymous_2)",decl:{start:{line:36,column:21},end:{line:36,column:22}},loc:{start:{line:36,column:31},end:{line:36,column:48}},line:36},"3":{name:"(anonymous_3)",decl:{start:{line:39,column:4},end:{line:39,column:5}},loc:{start:{line:39,column:38},end:{line:46,column:5}},line:39},"4":{name:"(anonymous_4)",decl:{start:{line:41,column:54},end:{line:41,column:55}},loc:{start:{line:41,column:71},end:{line:43,column:9}},line:41},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:4},end:{line:47,column:5}},loc:{start:{line:47,column:54},end:{line:85,column:5}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:48,column:42},end:{line:48,column:43}},loc:{start:{line:48,column:47},end:{line:48,column:71}},line:48},"7":{name:"(anonymous_7)",decl:{start:{line:49,column:44},end:{line:49,column:45}},loc:{start:{line:49,column:49},end:{line:49,column:73}},line:49},"8":{name:"(anonymous_8)",decl:{start:{line:57,column:66},end:{line:57,column:67}},loc:{start:{line:57,column:94},end:{line:61,column:13}},line:57},"9":{name:"(anonymous_9)",decl:{start:{line:64,column:67},end:{line:64,column:68}},loc:{start:{line:64,column:95},end:{line:68,column:13}},line:64},"10":{name:"(anonymous_10)",decl:{start:{line:70,column:53},end:{line:70,column:54}},loc:{start:{line:70,column:58},end:{line:70,column:103}},line:70},"11":{name:"(anonymous_11)",decl:{start:{line:71,column:33},end:{line:71,column:34}},loc:{start:{line:71,column:38},end:{line:71,column:67}},line:71},"12":{name:"(anonymous_12)",decl:{start:{line:81,column:21},end:{line:81,column:22}},loc:{start:{line:81,column:31},end:{line:81,column:48}},line:81}},branchMap:{"0":{loc:{start:{line:10,column:8},end:{line:13,column:9}},type:"if",locations:[{start:{line:10,column:8},end:{line:13,column:9}},{start:{line:10,column:8},end:{line:13,column:9}}],line:10},"1":{loc:{start:{line:19,column:8},end:{line:21,column:9}},type:"if",locations:[{start:{line:19,column:8},end:{line:21,column:9}},{start:{line:19,column:8},end:{line:21,column:9}}],line:19},"2":{loc:{start:{line:22,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:22,column:8},end:{line:24,column:9}},{start:{line:22,column:8},end:{line:24,column:9}}],line:22},"3":{loc:{start:{line:28,column:24},end:{line:28,column:66}},type:"binary-expr",locations:[{start:{line:28,column:24},end:{line:28,column:40}},{start:{line:28,column:44},end:{line:28,column:66}}],line:28},"4":{loc:{start:{line:30,column:12},end:{line:32,column:13}},type:"if",locations:[{start:{line:30,column:12},end:{line:32,column:13}},{start:{line:30,column:12},end:{line:32,column:13}}],line:30},"5":{loc:{start:{line:30,column:16},end:{line:30,column:61}},type:"binary-expr",locations:[{start:{line:30,column:16},end:{line:30,column:36}},{start:{line:30,column:40},end:{line:30,column:61}}],line:30},"6":{loc:{start:{line:37,column:15},end:{line:37,column:59}},type:"cond-expr",locations:[{start:{line:37,column:36},end:{line:37,column:52}},{start:{line:37,column:55},end:{line:37,column:59}}],line:37},"7":{loc:{start:{line:50,column:8},end:{line:52,column:9}},type:"if",locations:[{start:{line:50,column:8},end:{line:52,column:9}},{start:{line:50,column:8},end:{line:52,column:9}}],line:50},"8":{loc:{start:{line:50,column:12},end:{line:50,column:58}},type:"binary-expr",locations:[{start:{line:50,column:12},end:{line:50,column:32}},{start:{line:50,column:36},end:{line:50,column:58}}],line:50},"9":{loc:{start:{line:56,column:8},end:{line:62,column:9}},type:"if",locations:[{start:{line:56,column:8},end:{line:62,column:9}},{start:{line:56,column:8},end:{line:62,column:9}}],line:56},"10":{loc:{start:{line:58,column:16},end:{line:60,column:17}},type:"if",locations:[{start:{line:58,column:16},end:{line:60,column:17}},{start:{line:58,column:16},end:{line:60,column:17}}],line:58},"11":{loc:{start:{line:63,column:8},end:{line:69,column:9}},type:"if",locations:[{start:{line:63,column:8},end:{line:69,column:9}},{start:{line:63,column:8},end:{line:69,column:9}}],line:63},"12":{loc:{start:{line:65,column:16},end:{line:67,column:17}},type:"if",locations:[{start:{line:65,column:16},end:{line:67,column:17}},{start:{line:65,column:16},end:{line:67,column:17}}],line:65},"13":{loc:{start:{line:72,column:8},end:{line:74,column:9}},type:"if",locations:[{start:{line:72,column:8},end:{line:74,column:9}},{start:{line:72,column:8},end:{line:74,column:9}}],line:72}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/attach-energy-prompt-resolver.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/attach-energy-prompt-resolver.ts"],names:[],mappings:"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",sourcesContent:["import { AttachEnergyPrompt, CardAssign } from '../../game/store/prompts/attach-energy-prompt';\nimport { Player, State, Action, ResolvePromptAction, Prompt, StateUtils,\n  PokemonCardList, PlayerType, CardList, Card, CardTarget } from '../../game';\nimport { PromptResolver } from './prompt-resolver';\nimport { deepClone } from '../../utils/utils';\n\ninterface ResultItem {\n  value: CardAssign[] | null;\n  score: number;\n}\n\nexport class AttachEnergyPromptResolver extends PromptResolver {\n\n  public resolvePrompt(state: State, player: Player, prompt: Prompt<any>): Action | undefined {\n    if (prompt instanceof AttachEnergyPrompt) {\n      const result = this.getPromptResult(state, prompt);\n      return new ResolvePromptAction(prompt.id, result);\n    }\n  }\n\n  private getPromptResult(state: State, prompt: AttachEnergyPrompt): CardAssign[] | null {\n    const copy = deepClone(state, [ Card ]);\n\n    const results: ResultItem[] = [];\n    const baseScore = this.getStateScore(state, prompt.playerId);\n\n    if (prompt.options.allowCancel) {\n      results.push({ value: null, score: baseScore });\n    }\n\n    if (prompt.options.min === 0) {\n      results.push({ value: [], score: baseScore });\n    }\n\n    const cardList = this.buildCardsToChoose(copy, prompt);\n    const cards = cardList.cards.slice();\n    let value: CardAssign[] = [];\n\n    for (let i = 0; i < cards.length && i < prompt.options.max; i++) {\n      const result = this.assignToBestTarget(copy, prompt, cardList, cards[i]);\n      if (result === undefined || result.value === null) {\n        break;\n      }\n      value =  [ ...value, result.value[0] ];\n      results.push({ value, score: result.score });\n    }\n\n    results.sort((a, b) => b.score - a.score);\n    return results.length > 0 ? results[0].value : null;\n  }\n\n  private buildCardsToChoose(state: State, prompt: AttachEnergyPrompt): CardList {\n    const cardList = new CardList();\n\n    cardList.cards = prompt.cardList.cards.filter((card, index) => {\n      return !prompt.options.blocked.includes(index);\n    });\n\n    cardList.cards = cardList.filter(prompt.filter);\n    return cardList;\n  }\n\n  private assignToBestTarget(state: State, prompt: AttachEnergyPrompt, cardList: CardList, card: Card): ResultItem | undefined {\n    const player = state.players.find(p => p.id === prompt.playerId);\n    const opponent = state.players.find(p => p.id !== prompt.playerId);\n    if (player === undefined || opponent === undefined) {\n      return;\n    }\n    const hasOpponent = [PlayerType.TOP_PLAYER, PlayerType.ANY].includes(prompt.playerType);\n    const hasPlayer = [PlayerType.BOTTOM_PLAYER, PlayerType.ANY].includes(prompt.playerType);\n\n    let results: {target: CardTarget, cardList: PokemonCardList, score: number}[] = [];\n    if (hasOpponent) {\n      opponent.forEachPokemon(PlayerType.TOP_PLAYER, (cardList, card, target) => {\n        if (prompt.slots.includes(target.slot)) {\n          results.push({ target, cardList, score: 0 });\n        }\n      });\n    }\n    if (hasPlayer) {\n      player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, card, target) => {\n        if (prompt.slots.includes(target.slot)) {\n          results.push({ target, cardList, score: 0 });\n        }\n      });\n    }\n\n    const blocked = prompt.options.blockedTo.map(b => StateUtils.getTarget(state, player, b));\n    results = results.filter(i => !blocked.includes(i.cardList));\n\n    if (results.length === 0) {\n      return;\n    }\n\n    // evaluate results\n    for (const result of results) {\n      cardList.moveCardTo(card, result.cardList);\n      result.score = this.getStateScore(state, player.id);\n      result.cardList.moveCardTo(card, cardList);\n    }\n\n    results.sort((a, b) => b.score - a.score);\n\n    const result = results[0];\n    cardList.moveCardTo(card, result.cardList);\n\n    return { value: [{ to: result.target, card }], score: result.score };\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"e3eee3c6a5ff4da48c0815092ec7f8b874705be3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_17ld6euaas=function(){return actualCoverage;};}return actualCoverage;}cov_17ld6euaas();cov_17ld6euaas().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_17ld6euaas().s[1]++;exports.AttachEnergyPromptResolver=void 0;const attach_energy_prompt_1=(cov_17ld6euaas().s[2]++,require("../../game/store/prompts/attach-energy-prompt"));const game_1=(cov_17ld6euaas().s[3]++,require("../../game"));const prompt_resolver_1=(cov_17ld6euaas().s[4]++,require("./prompt-resolver"));const utils_1=(cov_17ld6euaas().s[5]++,require("../../utils/utils"));class AttachEnergyPromptResolver extends(prompt_resolver_1.PromptResolver){resolvePrompt(state,player,prompt){cov_17ld6euaas().f[0]++;cov_17ld6euaas().s[6]++;if(prompt instanceof attach_energy_prompt_1.AttachEnergyPrompt){cov_17ld6euaas().b[0][0]++;const result=(cov_17ld6euaas().s[7]++,this.getPromptResult(state,prompt));cov_17ld6euaas().s[8]++;return new game_1.ResolvePromptAction(prompt.id,result);}else{cov_17ld6euaas().b[0][1]++;}}getPromptResult(state,prompt){cov_17ld6euaas().f[1]++;const copy=(cov_17ld6euaas().s[9]++,utils_1.deepClone(state,[game_1.Card]));const results=(cov_17ld6euaas().s[10]++,[]);const baseScore=(cov_17ld6euaas().s[11]++,this.getStateScore(state,prompt.playerId));cov_17ld6euaas().s[12]++;if(prompt.options.allowCancel){cov_17ld6euaas().b[1][0]++;cov_17ld6euaas().s[13]++;results.push({value:null,score:baseScore});}else{cov_17ld6euaas().b[1][1]++;}cov_17ld6euaas().s[14]++;if(prompt.options.min===0){cov_17ld6euaas().b[2][0]++;cov_17ld6euaas().s[15]++;results.push({value:[],score:baseScore});}else{cov_17ld6euaas().b[2][1]++;}const cardList=(cov_17ld6euaas().s[16]++,this.buildCardsToChoose(copy,prompt));const cards=(cov_17ld6euaas().s[17]++,cardList.cards.slice());let value=(cov_17ld6euaas().s[18]++,[]);cov_17ld6euaas().s[19]++;for(let i=(cov_17ld6euaas().s[20]++,0);(cov_17ld6euaas().b[3][0]++,i<cards.length)&&(cov_17ld6euaas().b[3][1]++,i<prompt.options.max);i++){const result=(cov_17ld6euaas().s[21]++,this.assignToBestTarget(copy,prompt,cardList,cards[i]));cov_17ld6euaas().s[22]++;if((cov_17ld6euaas().b[5][0]++,result===undefined)||(cov_17ld6euaas().b[5][1]++,result.value===null)){cov_17ld6euaas().b[4][0]++;cov_17ld6euaas().s[23]++;break;}else{cov_17ld6euaas().b[4][1]++;}cov_17ld6euaas().s[24]++;value=[...value,result.value[0]];cov_17ld6euaas().s[25]++;results.push({value,score:result.score});}cov_17ld6euaas().s[26]++;results.sort((a,b)=>{cov_17ld6euaas().f[2]++;cov_17ld6euaas().s[27]++;return b.score-a.score;});cov_17ld6euaas().s[28]++;return results.length>0?(cov_17ld6euaas().b[6][0]++,results[0].value):(cov_17ld6euaas().b[6][1]++,null);}buildCardsToChoose(state,prompt){cov_17ld6euaas().f[3]++;const cardList=(cov_17ld6euaas().s[29]++,new game_1.CardList());cov_17ld6euaas().s[30]++;cardList.cards=prompt.cardList.cards.filter((card,index)=>{cov_17ld6euaas().f[4]++;cov_17ld6euaas().s[31]++;return!prompt.options.blocked.includes(index);});cov_17ld6euaas().s[32]++;cardList.cards=cardList.filter(prompt.filter);cov_17ld6euaas().s[33]++;return cardList;}assignToBestTarget(state,prompt,cardList,card){cov_17ld6euaas().f[5]++;const player=(cov_17ld6euaas().s[34]++,state.players.find(p=>{cov_17ld6euaas().f[6]++;cov_17ld6euaas().s[35]++;return p.id===prompt.playerId;}));const opponent=(cov_17ld6euaas().s[36]++,state.players.find(p=>{cov_17ld6euaas().f[7]++;cov_17ld6euaas().s[37]++;return p.id!==prompt.playerId;}));cov_17ld6euaas().s[38]++;if((cov_17ld6euaas().b[8][0]++,player===undefined)||(cov_17ld6euaas().b[8][1]++,opponent===undefined)){cov_17ld6euaas().b[7][0]++;cov_17ld6euaas().s[39]++;return;}else{cov_17ld6euaas().b[7][1]++;}const hasOpponent=(cov_17ld6euaas().s[40]++,[game_1.PlayerType.TOP_PLAYER,game_1.PlayerType.ANY].includes(prompt.playerType));const hasPlayer=(cov_17ld6euaas().s[41]++,[game_1.PlayerType.BOTTOM_PLAYER,game_1.PlayerType.ANY].includes(prompt.playerType));let results=(cov_17ld6euaas().s[42]++,[]);cov_17ld6euaas().s[43]++;if(hasOpponent){cov_17ld6euaas().b[9][0]++;cov_17ld6euaas().s[44]++;opponent.forEachPokemon(game_1.PlayerType.TOP_PLAYER,(cardList,card,target)=>{cov_17ld6euaas().f[8]++;cov_17ld6euaas().s[45]++;if(prompt.slots.includes(target.slot)){cov_17ld6euaas().b[10][0]++;cov_17ld6euaas().s[46]++;results.push({target,cardList,score:0});}else{cov_17ld6euaas().b[10][1]++;}});}else{cov_17ld6euaas().b[9][1]++;}cov_17ld6euaas().s[47]++;if(hasPlayer){cov_17ld6euaas().b[11][0]++;cov_17ld6euaas().s[48]++;player.forEachPokemon(game_1.PlayerType.BOTTOM_PLAYER,(cardList,card,target)=>{cov_17ld6euaas().f[9]++;cov_17ld6euaas().s[49]++;if(prompt.slots.includes(target.slot)){cov_17ld6euaas().b[12][0]++;cov_17ld6euaas().s[50]++;results.push({target,cardList,score:0});}else{cov_17ld6euaas().b[12][1]++;}});}else{cov_17ld6euaas().b[11][1]++;}const blocked=(cov_17ld6euaas().s[51]++,prompt.options.blockedTo.map(b=>{cov_17ld6euaas().f[10]++;cov_17ld6euaas().s[52]++;return game_1.StateUtils.getTarget(state,player,b);}));cov_17ld6euaas().s[53]++;results=results.filter(i=>{cov_17ld6euaas().f[11]++;cov_17ld6euaas().s[54]++;return!blocked.includes(i.cardList);});cov_17ld6euaas().s[55]++;if(results.length===0){cov_17ld6euaas().b[13][0]++;cov_17ld6euaas().s[56]++;return;}else{cov_17ld6euaas().b[13][1]++;}// evaluate results
cov_17ld6euaas().s[57]++;for(const result of results){cov_17ld6euaas().s[58]++;cardList.moveCardTo(card,result.cardList);cov_17ld6euaas().s[59]++;result.score=this.getStateScore(state,player.id);cov_17ld6euaas().s[60]++;result.cardList.moveCardTo(card,cardList);}cov_17ld6euaas().s[61]++;results.sort((a,b)=>{cov_17ld6euaas().f[12]++;cov_17ld6euaas().s[62]++;return b.score-a.score;});const result=(cov_17ld6euaas().s[63]++,results[0]);cov_17ld6euaas().s[64]++;cardList.moveCardTo(card,result.cardList);cov_17ld6euaas().s[65]++;return{value:[{to:result.target,card}],score:result.score};}}cov_17ld6euaas().s[66]++;exports.AttachEnergyPromptResolver=AttachEnergyPromptResolver;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9zaW1wbGUtYm90L3Byb21wdC1yZXNvbHZlci9hdHRhY2gtZW5lcmd5LXByb21wdC1yZXNvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiczBqQkFxQkk7OE9BckJKLEtBQUEsQ0FBQSxzQkFBQSwwQkFBQSxPQUFBLENBQUEsK0NBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLE1BQUEsMEJBQUEsT0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLENBRUEsS0FBQSxDQUFBLGlCQUFBLDBCQUFBLE9BQUEsQ0FBQSxtQkFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsT0FBQSwwQkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLENBT0EsS0FBYSxDQUFBLDBCQUFiLFNBQWdELGlCQUFBLENBQUEsY0FBaEQsQ0FBOEQsQ0FFckQsYUFBYSxDQUFDLEtBQUQsQ0FBZSxNQUFmLENBQStCLE1BQS9CLENBQWtELGlEQUNwRSxHQUFJLE1BQU0sV0FBWSxDQUFBLHNCQUFBLENBQUEsa0JBQXRCLENBQTBDLDRCQUN4QyxLQUFNLENBQUEsTUFBTSwwQkFBRyxLQUFLLGVBQUwsQ0FBcUIsS0FBckIsQ0FBNEIsTUFBNUIsQ0FBSCxDQUFaLENBRHdDLHdCQUV4QyxNQUFPLElBQUksQ0FBQSxNQUFBLENBQUEsbUJBQUosQ0FBd0IsTUFBTSxDQUFDLEVBQS9CLENBQW1DLE1BQW5DLENBQVAsQ0FDRCxDQUhELGlDQUlELENBRU8sZUFBZSxDQUFDLEtBQUQsQ0FBZSxNQUFmLENBQXlDLHlCQUM5RCxLQUFNLENBQUEsSUFBSSwwQkFBRyxPQUFBLENBQUEsU0FBQSxDQUFVLEtBQVYsQ0FBaUIsQ0FBRSxNQUFBLENBQUEsSUFBRixDQUFqQixDQUFILENBQVYsQ0FFQSxLQUFNLENBQUEsT0FBTywyQkFBaUIsRUFBakIsQ0FBYixDQUNBLEtBQU0sQ0FBQSxTQUFTLDJCQUFHLEtBQUssYUFBTCxDQUFtQixLQUFuQixDQUEwQixNQUFNLENBQUMsUUFBakMsQ0FBSCxDQUFmLENBSjhELHlCQU05RCxHQUFJLE1BQU0sQ0FBQyxPQUFQLENBQWUsV0FBbkIsQ0FBZ0MscURBQzlCLE9BQU8sQ0FBQyxJQUFSLENBQWEsQ0FBRSxLQUFLLENBQUUsSUFBVCxDQUFlLEtBQUssQ0FBRSxTQUF0QixDQUFiLEVBQ0QsQ0FGRCxpQ0FOOEQseUJBVTlELEdBQUksTUFBTSxDQUFDLE9BQVAsQ0FBZSxHQUFmLEdBQXVCLENBQTNCLENBQThCLHFEQUM1QixPQUFPLENBQUMsSUFBUixDQUFhLENBQUUsS0FBSyxDQUFFLEVBQVQsQ0FBYSxLQUFLLENBQUUsU0FBcEIsQ0FBYixFQUNELENBRkQsaUNBSUEsS0FBTSxDQUFBLFFBQVEsMkJBQUcsS0FBSyxrQkFBTCxDQUF3QixJQUF4QixDQUE4QixNQUE5QixDQUFILENBQWQsQ0FDQSxLQUFNLENBQUEsS0FBSywyQkFBRyxRQUFRLENBQUMsS0FBVCxDQUFlLEtBQWYsRUFBSCxDQUFYLENBQ0EsR0FBSSxDQUFBLEtBQUssMkJBQWlCLEVBQWpCLENBQVQsQ0FoQjhELHlCQWtCOUQsSUFBSyxHQUFJLENBQUEsQ0FBQywyQkFBRyxDQUFILENBQVYsQ0FBZ0IsNEJBQUEsQ0FBQyxDQUFHLEtBQUssQ0FBQyxNQUFWLCtCQUFvQixDQUFDLENBQUcsTUFBTSxDQUFDLE9BQVAsQ0FBZSxHQUF2QyxDQUFoQixDQUE0RCxDQUFDLEVBQTdELENBQWlFLENBQy9ELEtBQU0sQ0FBQSxNQUFNLDJCQUFHLEtBQUssa0JBQUwsQ0FBd0IsSUFBeEIsQ0FBOEIsTUFBOUIsQ0FBc0MsUUFBdEMsQ0FBZ0QsS0FBSyxDQUFDLENBQUQsQ0FBckQsQ0FBSCxDQUFaLENBRCtELHlCQUUvRCxHQUFJLDRCQUFBLE1BQU0sR0FBSyxTQUFYLCtCQUF3QixNQUFNLENBQUMsS0FBUCxHQUFpQixJQUF6QyxDQUFKLENBQW1ELHFEQUNqRCxNQUNELENBRkQsaUNBRitELHlCQUsvRCxLQUFLLENBQUksQ0FBRSxHQUFHLEtBQUwsQ0FBWSxNQUFNLENBQUMsS0FBUCxDQUFhLENBQWIsQ0FBWixDQUFULENBTCtELHlCQU0vRCxPQUFPLENBQUMsSUFBUixDQUFhLENBQUUsS0FBRixDQUFTLEtBQUssQ0FBRSxNQUFNLENBQUMsS0FBdkIsQ0FBYixFQUNELENBekI2RCx5QkEyQjlELE9BQU8sQ0FBQyxJQUFSLENBQWEsQ0FBQyxDQUFELENBQUksQ0FBSixHQUFVLHdEQUFBLENBQUEsQ0FBQyxDQUFDLEtBQUYsQ0FBVSxDQUFDLENBQUMsS0FBWixDQUFpQixDQUF4QyxFQTNCOEQseUJBNEI5RCxNQUFPLENBQUEsT0FBTyxDQUFDLE1BQVIsQ0FBaUIsQ0FBakIsNkJBQXFCLE9BQU8sQ0FBQyxDQUFELENBQVAsQ0FBVyxLQUFoQyw4QkFBd0MsSUFBeEMsQ0FBUCxDQUNELENBRU8sa0JBQWtCLENBQUMsS0FBRCxDQUFlLE1BQWYsQ0FBeUMseUJBQ2pFLEtBQU0sQ0FBQSxRQUFRLDJCQUFHLEdBQUksQ0FBQSxNQUFBLENBQUEsUUFBSixFQUFILENBQWQsQ0FEaUUseUJBR2pFLFFBQVEsQ0FBQyxLQUFULENBQWlCLE1BQU0sQ0FBQyxRQUFQLENBQWdCLEtBQWhCLENBQXNCLE1BQXRCLENBQTZCLENBQUMsSUFBRCxDQUFPLEtBQVAsR0FBZ0Isa0RBQzVELE1BQU8sQ0FBQyxNQUFNLENBQUMsT0FBUCxDQUFlLE9BQWYsQ0FBdUIsUUFBdkIsQ0FBZ0MsS0FBaEMsQ0FBUixDQUNELENBRmdCLENBQWpCLENBSGlFLHlCQU9qRSxRQUFRLENBQUMsS0FBVCxDQUFpQixRQUFRLENBQUMsTUFBVCxDQUFnQixNQUFNLENBQUMsTUFBdkIsQ0FBakIsQ0FQaUUseUJBUWpFLE1BQU8sQ0FBQSxRQUFQLENBQ0QsQ0FFTyxrQkFBa0IsQ0FBQyxLQUFELENBQWUsTUFBZixDQUEyQyxRQUEzQyxDQUErRCxJQUEvRCxDQUF5RSx5QkFDakcsS0FBTSxDQUFBLE1BQU0sMkJBQUcsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLENBQW1CLENBQUMsRUFBSSx3REFBQSxDQUFBLENBQUMsQ0FBQyxFQUFGLEdBQVMsTUFBTSxDQUFDLFFBQWhCLENBQXdCLENBQWhELENBQUgsQ0FBWixDQUNBLEtBQU0sQ0FBQSxRQUFRLDJCQUFHLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxDQUFtQixDQUFDLEVBQUksd0RBQUEsQ0FBQSxDQUFDLENBQUMsRUFBRixHQUFTLE1BQU0sQ0FBQyxRQUFoQixDQUF3QixDQUFoRCxDQUFILENBQWQsQ0FGaUcseUJBR2pHLEdBQUksNEJBQUEsTUFBTSxHQUFLLFNBQVgsK0JBQXdCLFFBQVEsR0FBSyxTQUFyQyxDQUFKLENBQW9ELHFEQUNsRCxPQUNELENBRkQsaUNBR0EsS0FBTSxDQUFBLFdBQVcsMkJBQUcsQ0FBQyxNQUFBLENBQUEsVUFBQSxDQUFXLFVBQVosQ0FBd0IsTUFBQSxDQUFBLFVBQUEsQ0FBVyxHQUFuQyxFQUF3QyxRQUF4QyxDQUFpRCxNQUFNLENBQUMsVUFBeEQsQ0FBSCxDQUFqQixDQUNBLEtBQU0sQ0FBQSxTQUFTLDJCQUFHLENBQUMsTUFBQSxDQUFBLFVBQUEsQ0FBVyxhQUFaLENBQTJCLE1BQUEsQ0FBQSxVQUFBLENBQVcsR0FBdEMsRUFBMkMsUUFBM0MsQ0FBb0QsTUFBTSxDQUFDLFVBQTNELENBQUgsQ0FBZixDQUVBLEdBQUksQ0FBQSxPQUFPLDJCQUFxRSxFQUFyRSxDQUFYLENBVGlHLHlCQVVqRyxHQUFJLFdBQUosQ0FBaUIscURBQ2YsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsTUFBQSxDQUFBLFVBQUEsQ0FBVyxVQUFuQyxDQUErQyxDQUFDLFFBQUQsQ0FBVyxJQUFYLENBQWlCLE1BQWpCLEdBQTJCLGtEQUN4RSxHQUFJLE1BQU0sQ0FBQyxLQUFQLENBQWEsUUFBYixDQUFzQixNQUFNLENBQUMsSUFBN0IsQ0FBSixDQUF3QyxzREFDdEMsT0FBTyxDQUFDLElBQVIsQ0FBYSxDQUFFLE1BQUYsQ0FBVSxRQUFWLENBQW9CLEtBQUssQ0FBRSxDQUEzQixDQUFiLEVBQ0QsQ0FGRCxrQ0FHRCxDQUpELEVBS0QsQ0FORCxpQ0FWaUcseUJBaUJqRyxHQUFJLFNBQUosQ0FBZSxzREFDYixNQUFNLENBQUMsY0FBUCxDQUFzQixNQUFBLENBQUEsVUFBQSxDQUFXLGFBQWpDLENBQWdELENBQUMsUUFBRCxDQUFXLElBQVgsQ0FBaUIsTUFBakIsR0FBMkIsa0RBQ3pFLEdBQUksTUFBTSxDQUFDLEtBQVAsQ0FBYSxRQUFiLENBQXNCLE1BQU0sQ0FBQyxJQUE3QixDQUFKLENBQXdDLHNEQUN0QyxPQUFPLENBQUMsSUFBUixDQUFhLENBQUUsTUFBRixDQUFVLFFBQVYsQ0FBb0IsS0FBSyxDQUFFLENBQTNCLENBQWIsRUFDRCxDQUZELGtDQUdELENBSkQsRUFLRCxDQU5ELGtDQVFBLEtBQU0sQ0FBQSxPQUFPLDJCQUFHLE1BQU0sQ0FBQyxPQUFQLENBQWUsU0FBZixDQUF5QixHQUF6QixDQUE2QixDQUFDLEVBQUkseURBQUEsQ0FBQSxNQUFBLENBQUEsVUFBQSxDQUFXLFNBQVgsQ0FBcUIsS0FBckIsQ0FBNEIsTUFBNUIsQ0FBb0MsQ0FBcEMsRUFBc0MsQ0FBeEUsQ0FBSCxDQUFiLENBekJpRyx5QkEwQmpHLE9BQU8sQ0FBRyxPQUFPLENBQUMsTUFBUixDQUFlLENBQUMsRUFBSSwwREFBQyxPQUFPLENBQUMsUUFBUixDQUFpQixDQUFDLENBQUMsUUFBbkIsQ0FBRCxDQUE2QixDQUFqRCxDQUFWLENBMUJpRyx5QkE0QmpHLEdBQUksT0FBTyxDQUFDLE1BQVIsR0FBbUIsQ0FBdkIsQ0FBMEIsc0RBQ3hCLE9BQ0QsQ0FGRCxrQ0FJQTtBQWhDaUcseUJBaUNqRyxJQUFLLEtBQU0sQ0FBQSxNQUFYLEdBQXFCLENBQUEsT0FBckIsQ0FBOEIsMEJBQzVCLFFBQVEsQ0FBQyxVQUFULENBQW9CLElBQXBCLENBQTBCLE1BQU0sQ0FBQyxRQUFqQyxFQUQ0Qix5QkFFNUIsTUFBTSxDQUFDLEtBQVAsQ0FBZSxLQUFLLGFBQUwsQ0FBbUIsS0FBbkIsQ0FBMEIsTUFBTSxDQUFDLEVBQWpDLENBQWYsQ0FGNEIseUJBRzVCLE1BQU0sQ0FBQyxRQUFQLENBQWdCLFVBQWhCLENBQTJCLElBQTNCLENBQWlDLFFBQWpDLEVBQ0QsQ0FyQ2dHLHlCQXVDakcsT0FBTyxDQUFDLElBQVIsQ0FBYSxDQUFDLENBQUQsQ0FBSSxDQUFKLEdBQVUseURBQUEsQ0FBQSxDQUFDLENBQUMsS0FBRixDQUFVLENBQUMsQ0FBQyxLQUFaLENBQWlCLENBQXhDLEVBRUEsS0FBTSxDQUFBLE1BQU0sMkJBQUcsT0FBTyxDQUFDLENBQUQsQ0FBVixDQUFaLENBekNpRyx5QkEwQ2pHLFFBQVEsQ0FBQyxVQUFULENBQW9CLElBQXBCLENBQTBCLE1BQU0sQ0FBQyxRQUFqQyxFQTFDaUcseUJBNENqRyxNQUFPLENBQUUsS0FBSyxDQUFFLENBQUMsQ0FBRSxFQUFFLENBQUUsTUFBTSxDQUFDLE1BQWIsQ0FBcUIsSUFBckIsQ0FBRCxDQUFULENBQXdDLEtBQUssQ0FBRSxNQUFNLENBQUMsS0FBdEQsQ0FBUCxDQUNELENBaEcyRCxDLHlCQUE5RCxPQUFBLENBQUEsMEJBQUEsQ0FBQSwwQkFBQSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXR0YWNoRW5lcmd5UHJvbXB0LCBDYXJkQXNzaWduIH0gZnJvbSAnLi4vLi4vZ2FtZS9zdG9yZS9wcm9tcHRzL2F0dGFjaC1lbmVyZ3ktcHJvbXB0JztcbmltcG9ydCB7IFBsYXllciwgU3RhdGUsIEFjdGlvbiwgUmVzb2x2ZVByb21wdEFjdGlvbiwgUHJvbXB0LCBTdGF0ZVV0aWxzLFxuICBQb2tlbW9uQ2FyZExpc3QsIFBsYXllclR5cGUsIENhcmRMaXN0LCBDYXJkLCBDYXJkVGFyZ2V0IH0gZnJvbSAnLi4vLi4vZ2FtZSc7XG5pbXBvcnQgeyBQcm9tcHRSZXNvbHZlciB9IGZyb20gJy4vcHJvbXB0LXJlc29sdmVyJztcbmltcG9ydCB7IGRlZXBDbG9uZSB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWxzJztcblxuaW50ZXJmYWNlIFJlc3VsdEl0ZW0ge1xuICB2YWx1ZTogQ2FyZEFzc2lnbltdIHwgbnVsbDtcbiAgc2NvcmU6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIEF0dGFjaEVuZXJneVByb21wdFJlc29sdmVyIGV4dGVuZHMgUHJvbXB0UmVzb2x2ZXIge1xuXG4gIHB1YmxpYyByZXNvbHZlUHJvbXB0KHN0YXRlOiBTdGF0ZSwgcGxheWVyOiBQbGF5ZXIsIHByb21wdDogUHJvbXB0PGFueT4pOiBBY3Rpb24gfCB1bmRlZmluZWQge1xuICAgIGlmIChwcm9tcHQgaW5zdGFuY2VvZiBBdHRhY2hFbmVyZ3lQcm9tcHQpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZ2V0UHJvbXB0UmVzdWx0KHN0YXRlLCBwcm9tcHQpO1xuICAgICAgcmV0dXJuIG5ldyBSZXNvbHZlUHJvbXB0QWN0aW9uKHByb21wdC5pZCwgcmVzdWx0KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldFByb21wdFJlc3VsdChzdGF0ZTogU3RhdGUsIHByb21wdDogQXR0YWNoRW5lcmd5UHJvbXB0KTogQ2FyZEFzc2lnbltdIHwgbnVsbCB7XG4gICAgY29uc3QgY29weSA9IGRlZXBDbG9uZShzdGF0ZSwgWyBDYXJkIF0pO1xuXG4gICAgY29uc3QgcmVzdWx0czogUmVzdWx0SXRlbVtdID0gW107XG4gICAgY29uc3QgYmFzZVNjb3JlID0gdGhpcy5nZXRTdGF0ZVNjb3JlKHN0YXRlLCBwcm9tcHQucGxheWVySWQpO1xuXG4gICAgaWYgKHByb21wdC5vcHRpb25zLmFsbG93Q2FuY2VsKSB7XG4gICAgICByZXN1bHRzLnB1c2goeyB2YWx1ZTogbnVsbCwgc2NvcmU6IGJhc2VTY29yZSB9KTtcbiAgICB9XG5cbiAgICBpZiAocHJvbXB0Lm9wdGlvbnMubWluID09PSAwKSB7XG4gICAgICByZXN1bHRzLnB1c2goeyB2YWx1ZTogW10sIHNjb3JlOiBiYXNlU2NvcmUgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgY2FyZExpc3QgPSB0aGlzLmJ1aWxkQ2FyZHNUb0Nob29zZShjb3B5LCBwcm9tcHQpO1xuICAgIGNvbnN0IGNhcmRzID0gY2FyZExpc3QuY2FyZHMuc2xpY2UoKTtcbiAgICBsZXQgdmFsdWU6IENhcmRBc3NpZ25bXSA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjYXJkcy5sZW5ndGggJiYgaSA8IHByb21wdC5vcHRpb25zLm1heDsgaSsrKSB7XG4gICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmFzc2lnblRvQmVzdFRhcmdldChjb3B5LCBwcm9tcHQsIGNhcmRMaXN0LCBjYXJkc1tpXSk7XG4gICAgICBpZiAocmVzdWx0ID09PSB1bmRlZmluZWQgfHwgcmVzdWx0LnZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgdmFsdWUgPSAgWyAuLi52YWx1ZSwgcmVzdWx0LnZhbHVlWzBdIF07XG4gICAgICByZXN1bHRzLnB1c2goeyB2YWx1ZSwgc2NvcmU6IHJlc3VsdC5zY29yZSB9KTtcbiAgICB9XG5cbiAgICByZXN1bHRzLnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcbiAgICByZXR1cm4gcmVzdWx0cy5sZW5ndGggPiAwID8gcmVzdWx0c1swXS52YWx1ZSA6IG51bGw7XG4gIH1cblxuICBwcml2YXRlIGJ1aWxkQ2FyZHNUb0Nob29zZShzdGF0ZTogU3RhdGUsIHByb21wdDogQXR0YWNoRW5lcmd5UHJvbXB0KTogQ2FyZExpc3Qge1xuICAgIGNvbnN0IGNhcmRMaXN0ID0gbmV3IENhcmRMaXN0KCk7XG5cbiAgICBjYXJkTGlzdC5jYXJkcyA9IHByb21wdC5jYXJkTGlzdC5jYXJkcy5maWx0ZXIoKGNhcmQsIGluZGV4KSA9PiB7XG4gICAgICByZXR1cm4gIXByb21wdC5vcHRpb25zLmJsb2NrZWQuaW5jbHVkZXMoaW5kZXgpO1xuICAgIH0pO1xuXG4gICAgY2FyZExpc3QuY2FyZHMgPSBjYXJkTGlzdC5maWx0ZXIocHJvbXB0LmZpbHRlcik7XG4gICAgcmV0dXJuIGNhcmRMaXN0O1xuICB9XG5cbiAgcHJpdmF0ZSBhc3NpZ25Ub0Jlc3RUYXJnZXQoc3RhdGU6IFN0YXRlLCBwcm9tcHQ6IEF0dGFjaEVuZXJneVByb21wdCwgY2FyZExpc3Q6IENhcmRMaXN0LCBjYXJkOiBDYXJkKTogUmVzdWx0SXRlbSB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgcGxheWVyID0gc3RhdGUucGxheWVycy5maW5kKHAgPT4gcC5pZCA9PT0gcHJvbXB0LnBsYXllcklkKTtcbiAgICBjb25zdCBvcHBvbmVudCA9IHN0YXRlLnBsYXllcnMuZmluZChwID0+IHAuaWQgIT09IHByb21wdC5wbGF5ZXJJZCk7XG4gICAgaWYgKHBsYXllciA9PT0gdW5kZWZpbmVkIHx8IG9wcG9uZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgaGFzT3Bwb25lbnQgPSBbUGxheWVyVHlwZS5UT1BfUExBWUVSLCBQbGF5ZXJUeXBlLkFOWV0uaW5jbHVkZXMocHJvbXB0LnBsYXllclR5cGUpO1xuICAgIGNvbnN0IGhhc1BsYXllciA9IFtQbGF5ZXJUeXBlLkJPVFRPTV9QTEFZRVIsIFBsYXllclR5cGUuQU5ZXS5pbmNsdWRlcyhwcm9tcHQucGxheWVyVHlwZSk7XG5cbiAgICBsZXQgcmVzdWx0czoge3RhcmdldDogQ2FyZFRhcmdldCwgY2FyZExpc3Q6IFBva2Vtb25DYXJkTGlzdCwgc2NvcmU6IG51bWJlcn1bXSA9IFtdO1xuICAgIGlmIChoYXNPcHBvbmVudCkge1xuICAgICAgb3Bwb25lbnQuZm9yRWFjaFBva2Vtb24oUGxheWVyVHlwZS5UT1BfUExBWUVSLCAoY2FyZExpc3QsIGNhcmQsIHRhcmdldCkgPT4ge1xuICAgICAgICBpZiAocHJvbXB0LnNsb3RzLmluY2x1ZGVzKHRhcmdldC5zbG90KSkge1xuICAgICAgICAgIHJlc3VsdHMucHVzaCh7IHRhcmdldCwgY2FyZExpc3QsIHNjb3JlOiAwIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKGhhc1BsYXllcikge1xuICAgICAgcGxheWVyLmZvckVhY2hQb2tlbW9uKFBsYXllclR5cGUuQk9UVE9NX1BMQVlFUiwgKGNhcmRMaXN0LCBjYXJkLCB0YXJnZXQpID0+IHtcbiAgICAgICAgaWYgKHByb21wdC5zbG90cy5pbmNsdWRlcyh0YXJnZXQuc2xvdCkpIHtcbiAgICAgICAgICByZXN1bHRzLnB1c2goeyB0YXJnZXQsIGNhcmRMaXN0LCBzY29yZTogMCB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgYmxvY2tlZCA9IHByb21wdC5vcHRpb25zLmJsb2NrZWRUby5tYXAoYiA9PiBTdGF0ZVV0aWxzLmdldFRhcmdldChzdGF0ZSwgcGxheWVyLCBiKSk7XG4gICAgcmVzdWx0cyA9IHJlc3VsdHMuZmlsdGVyKGkgPT4gIWJsb2NrZWQuaW5jbHVkZXMoaS5jYXJkTGlzdCkpO1xuXG4gICAgaWYgKHJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gZXZhbHVhdGUgcmVzdWx0c1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlc3VsdHMpIHtcbiAgICAgIGNhcmRMaXN0Lm1vdmVDYXJkVG8oY2FyZCwgcmVzdWx0LmNhcmRMaXN0KTtcbiAgICAgIHJlc3VsdC5zY29yZSA9IHRoaXMuZ2V0U3RhdGVTY29yZShzdGF0ZSwgcGxheWVyLmlkKTtcbiAgICAgIHJlc3VsdC5jYXJkTGlzdC5tb3ZlQ2FyZFRvKGNhcmQsIGNhcmRMaXN0KTtcbiAgICB9XG5cbiAgICByZXN1bHRzLnNvcnQoKGEsIGIpID0+IGIuc2NvcmUgLSBhLnNjb3JlKTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IHJlc3VsdHNbMF07XG4gICAgY2FyZExpc3QubW92ZUNhcmRUbyhjYXJkLCByZXN1bHQuY2FyZExpc3QpO1xuXG4gICAgcmV0dXJuIHsgdmFsdWU6IFt7IHRvOiByZXN1bHQudGFyZ2V0LCBjYXJkIH1dLCBzY29yZTogcmVzdWx0LnNjb3JlIH07XG4gIH1cblxufVxuIl19