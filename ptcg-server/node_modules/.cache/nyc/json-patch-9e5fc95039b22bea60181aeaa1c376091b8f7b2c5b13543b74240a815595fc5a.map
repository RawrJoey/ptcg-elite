{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/json-patch.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/json-patch.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepCompare } from '../../utils';\nimport { JsonDiff, JsonPathDiff } from './json-patch.interface';\n\nexport class JsonPatch {\n\n  public diff(src: any, dest: any): JsonDiff[] {\n    const deltas = this.delta(src, dest, [], []);\n    return deltas.map(d => ({\n      op: d.op,\n      path: d.path.join('.'),\n      val: d.val\n    }));\n  }\n\n  public apply(src: any, patch: JsonDiff[]) {\n    let result = src;\n    for (const delta of patch) {\n      if (delta.path === '') {\n        result = this.applyToObject(result, delta);\n      } else {\n        const item = this.fromPath(result, delta.path);\n        if (item !== undefined) {\n          const newValue = this.applyToObject(item.value, delta);\n          item.holder[item.key] = newValue;\n        }\n      }\n    }\n    return result;\n  }\n\n  private delta(src: any, dest: any, path: string[], results: JsonPathDiff[]): JsonPathDiff[] {\n    if (src instanceof Object && dest instanceof Object) {\n      if (src.constructor !== dest.constructor) {\n        results.push({op: 'set', path, val: dest});\n        return results;\n      }\n      if (src instanceof Array && dest instanceof Array) {\n        return this.deltaArray(src, dest, path, results);\n      }\n      return this.deltaObject(src, dest, path, results);\n    }\n    if (src !== dest) {\n      results.push({op: 'set', path, val: dest});\n      return results;\n    }\n    return results;\n  }\n\n  private deltaArray(src: any[], dest: any[], path: string[], results: JsonPathDiff[]): JsonPathDiff[] {\n    const results1: JsonPathDiff[] = [];\n    const results2: JsonPathDiff[] = [];\n    src = src.slice();\n\n    let i: number = 0;\n    let j: number = 0;\n    while (i < dest.length && j < src.length) {\n      if (this.isEqual(src[j], dest[i])) {\n        i += 1;\n        j += 1;\n      } else {\n        let fromIndex = src.findIndex((value, index) => {\n          return index > j && this.isEqual(value, dest[i]);\n        });\n        if (fromIndex !== -1) {\n          const temp = src[fromIndex];\n          src[fromIndex] = src[j];\n          src[j] = temp;\n          results1.push({op: 'move', path, val: [fromIndex, i]});\n          j += 1;\n          i += 1;\n        } else {\n          fromIndex = dest.findIndex((value, index) => {\n            return index > i && this.isEqual(value, src[j]);\n          });\n          if (fromIndex === -1) {\n            this.delta(src[j], dest[i], [...path, String(i)], results1);\n          } else {\n            src.splice(j, 0, dest[i]);\n            results1.push({op: 'add', path, val: [i, dest[i]]});\n          }\n          j += 1;\n          i += 1;\n        }\n      }\n    }\n    while (i < dest.length) {\n      results1.push({op: 'add', path, val: [i, dest[i]]});\n      i += 1;\n    }\n    const toDelete: number[] = [];\n    while (j < src.length) {\n      toDelete.push(j);\n      j += 1;\n    }\n    if (toDelete.length > 0) {\n      results1.push({op: 'del', path, val: toDelete});\n    }\n\n    results2.push({op: 'set', path, val: dest});\n\n    const option1 = JSON.stringify(results1);\n    const option2 = JSON.stringify(results2);\n    results.push(...(option1.length < option2.length ? results1 : results2));\n    return results;\n  }\n\n  private deltaObject(src: any, dest: any, path: string[], results: JsonPathDiff[]): JsonPathDiff[] {\n    const srcKeys = Object.keys(src);\n    const destKeys = Object.keys(dest);\n\n    for (const key of destKeys) {\n      if (!this.isEqual(src[key], dest[key])) {\n        this.delta(src[key], dest[key], [...path, key], results);\n      }\n    }\n\n    const toDelete = [];\n    for (const key of srcKeys) {\n      if (!destKeys.includes(key)) {\n        toDelete.push(key);\n      }\n    }\n    if (toDelete.length > 0) {\n      results.push({op: 'del', path, val: toDelete});\n    }\n\n    return results;\n  }\n\n  private isEqual(src: any, dest: any) {\n    return deepCompare(src, dest);\n  }\n\n  private applyToObject(root: any, delta: JsonDiff): any {\n    switch (delta.op) {\n      case 'add': {\n        const index = delta.val[0];\n        const value = delta.val[1];\n        (root as any[]).splice(index, 0, value);\n        break;\n      }\n      case 'set':\n        root = delta.val;\n        break;\n      case 'del': {\n        const toDelete: any[] = delta.val.slice();\n        if (root instanceof Array) {\n          toDelete.sort((a, b) => b - a);\n          toDelete.forEach(idx => {\n            (root as any[]).splice(idx, 1);\n          });\n        } else {\n          toDelete.forEach(key => {\n            delete root[key];\n          });\n        }\n        break;\n      }\n      case 'move': {\n        const arr: any[] = root as any[];\n        const fromKey: number = delta.val[0];\n        const toKey: number = delta.val[1];\n        const temp = arr[fromKey];\n        arr[fromKey] = arr[toKey];\n        arr[toKey] = temp;\n        break;\n      }\n    }\n    return root;\n  }\n\n  private fromPath(root: any, path: string): { holder: any, key: string, value: any } | undefined {\n    const parts = path.split('.');\n    const result = { holder: root, key: '', value: root };\n    try {\n      for (const part of parts) {\n        result.holder = result.value;\n        result.value = result.value[part];\n        result.key = part;\n      }\n    } catch (error) {\n      return;\n    }\n    return result;\n  }\n\n}\n"]}