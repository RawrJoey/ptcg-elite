{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/player-score.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/player-score.ts"],"names":[],"mappings":";;;AAAA,qCAA2D;AAC3D,mCAAsC;AAEtC,MAAa,WAAY,SAAQ,mBAAW;IAEnC,QAAQ,CAAC,KAAY,EAAE,QAAgB;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,iBAAU,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QAE1C,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,uCAAuC;QACvC,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC;QAC9C,IAAI,KAAK,CAAC,MAAM,KAAK,iBAAU,CAAC,QAAQ,EAAE;YACxC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;SACrD;QACD,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC;QAC9C,IAAI,KAAK,CAAC,MAAM,KAAK,iBAAU,CAAC,QAAQ,EAAE;YACxC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;SACrD;QAED,qDAAqD;QACrD,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;QACrE,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;QACzE,KAAK,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,cAAc,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;QAEtE,oCAAoC;QACpC,KAAK,IAAI,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAEhD,iDAAiD;QACjD,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;YACjC,KAAK,IAAI,MAAM,CAAC,cAAc,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAClE;QAED,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;AAnCD,kCAmCC","sourcesContent":["import { State, StateUtils, GameWinner } from '../../game';\nimport { SimpleScore } from './score';\n\nexport class PlayerScore extends SimpleScore {\n\n  public getScore(state: State, playerId: number): number {\n    const player = this.getPlayer(state, playerId);\n    const opponent = StateUtils.getOpponent(state, player);\n    const scores = this.options.scores.player;\n\n    let score = 0;\n\n    // 10000 points if we have won the game\n    const isPlayer1 = state.players[0] === player;\n    if (state.winner === GameWinner.PLAYER_1) {\n      score += isPlayer1 ? scores.winner : -scores.winner;\n    }\n    const isPlayer2 = state.players[1] === player;\n    if (state.winner === GameWinner.PLAYER_2) {\n      score += isPlayer2 ? scores.winner : -scores.winner;\n    }\n\n    // 1000 points for each prize card less than opponent\n    const playerPrizes = player.prizes.filter(p => p.cards.length !== 0);\n    const opponentPrizes = opponent.prizes.filter(p => p.cards.length !== 0);\n    score += scores.prize * (opponentPrizes.length - playerPrizes.length);\n\n    // 1 point for each card in the deck\n    score += scores.deck * player.deck.cards.length;\n\n    // -10 points, if our deck has less than 10 cards\n    if (player.deck.cards.length < 10) {\n      score += scores.deckLessThan10 * (10 - player.deck.cards.length);\n    }\n\n    return score;\n  }\n\n}\n"]}