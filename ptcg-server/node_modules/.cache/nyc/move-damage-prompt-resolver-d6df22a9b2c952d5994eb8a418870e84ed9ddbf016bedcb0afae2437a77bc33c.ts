"use strict";function cov_2mekugf5my(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-damage-prompt-resolver.ts";var hash="6b06f5c0348fc031ff4aa4b5167a66e74e884bc2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-damage-prompt-resolver.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:42}},"2":{start:{line:4,column:15},end:{line:4,column:36}},"3":{start:{line:5,column:37},end:{line:5,column:76}},"4":{start:{line:8,column:8},end:{line:11,column:9}},"5":{start:{line:9,column:27},end:{line:9,column:72}},"6":{start:{line:10,column:12},end:{line:10,column:69}},"7":{start:{line:14,column:24},end:{line:14,column:82}},"8":{start:{line:15,column:24},end:{line:15,column:80}},"9":{start:{line:16,column:8},end:{line:16,column:28}},"10":{start:{line:17,column:8},end:{line:17,column:61}},"11":{start:{line:17,column:42},end:{line:17,column:59}},"12":{start:{line:18,column:23},end:{line:18,column:25}},"13":{start:{line:19,column:20},end:{line:19,column:21}},"14":{start:{line:20,column:25},end:{line:20,column:30}},"15":{start:{line:21,column:20},end:{line:21,column:38}},"16":{start:{line:22,column:20},end:{line:22,column:38}},"17":{start:{line:23,column:24},end:{line:23,column:25}},"18":{start:{line:24,column:22},end:{line:24,column:23}},"19":{start:{line:25,column:8},end:{line:61,column:9}},"20":{start:{line:26,column:29},end:{line:26,column:49}},"21":{start:{line:27,column:27},end:{line:27,column:43}},"22":{start:{line:28,column:12},end:{line:30,column:13}},"23":{start:{line:29,column:16},end:{line:29,column:22}},"24":{start:{line:31,column:12},end:{line:33,column:13}},"25":{start:{line:32,column:16},end:{line:32,column:34}},"26":{start:{line:36,column:12},end:{line:38,column:13}},"27":{start:{line:37,column:16},end:{line:37,column:22}},"28":{start:{line:40,column:12},end:{line:42,column:13}},"29":{start:{line:41,column:16},end:{line:41,column:22}},"30":{start:{line:43,column:12},end:{line:45,column:13}},"31":{start:{line:44,column:16},end:{line:44,column:29}},"32":{start:{line:46,column:12},end:{line:60,column:13}},"33":{start:{line:47,column:16},end:{line:47,column:38}},"34":{start:{line:48,column:16},end:{line:48,column:36}},"35":{start:{line:49,column:16},end:{line:49,column:55}},"36":{start:{line:50,column:16},end:{line:50,column:74}},"37":{start:{line:51,column:16},end:{line:53,column:17}},"38":{start:{line:52,column:20},end:{line:52,column:35}},"39":{start:{line:54,column:16},end:{line:56,column:17}},"40":{start:{line:55,column:20},end:{line:55,column:33}},"41":{start:{line:57,column:16},end:{line:59,column:17}},"42":{start:{line:58,column:20},end:{line:58,column:26}},"43":{start:{line:62,column:8},end:{line:64,column:9}},"44":{start:{line:63,column:12},end:{line:63,column:24}},"45":{start:{line:65,column:8},end:{line:67,column:9}},"46":{start:{line:66,column:12},end:{line:66,column:24}},"47":{start:{line:68,column:8},end:{line:68,column:22}},"48":{start:{line:71,column:0},end:{line:71,column:60}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:4},end:{line:7,column:5}},loc:{start:{line:7,column:41},end:{line:12,column:5}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:45},end:{line:69,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:37},end:{line:17,column:38}},loc:{start:{line:17,column:42},end:{line:17,column:59}},line:17}},branchMap:{"0":{loc:{start:{line:8,column:8},end:{line:11,column:9}},type:"if",locations:[{start:{line:8,column:8},end:{line:11,column:9}},{start:{line:8,column:8},end:{line:11,column:9}}],line:8},"1":{loc:{start:{line:25,column:15},end:{line:25,column:111}},type:"binary-expr",locations:[{start:{line:25,column:15},end:{line:25,column:43}},{start:{line:25,column:47},end:{line:25,column:71}},{start:{line:25,column:76},end:{line:25,column:87}},{start:{line:25,column:91},end:{line:25,column:110}}],line:25},"2":{loc:{start:{line:28,column:12},end:{line:30,column:13}},type:"if",locations:[{start:{line:28,column:12},end:{line:30,column:13}},{start:{line:28,column:12},end:{line:30,column:13}}],line:28},"3":{loc:{start:{line:28,column:16},end:{line:28,column:62}},type:"binary-expr",locations:[{start:{line:28,column:16},end:{line:28,column:38}},{start:{line:28,column:42},end:{line:28,column:62}}],line:28},"4":{loc:{start:{line:31,column:12},end:{line:33,column:13}},type:"if",locations:[{start:{line:31,column:12},end:{line:33,column:13}},{start:{line:31,column:12},end:{line:33,column:13}}],line:31},"5":{loc:{start:{line:36,column:12},end:{line:38,column:13}},type:"if",locations:[{start:{line:36,column:12},end:{line:38,column:13}},{start:{line:36,column:12},end:{line:38,column:13}}],line:36},"6":{loc:{start:{line:36,column:16},end:{line:36,column:56}},type:"binary-expr",locations:[{start:{line:36,column:16},end:{line:36,column:26}},{start:{line:36,column:30},end:{line:36,column:56}}],line:36},"7":{loc:{start:{line:40,column:12},end:{line:42,column:13}},type:"if",locations:[{start:{line:40,column:12},end:{line:42,column:13}},{start:{line:40,column:12},end:{line:42,column:13}}],line:40},"8":{loc:{start:{line:40,column:16},end:{line:40,column:50}},type:"binary-expr",locations:[{start:{line:40,column:16},end:{line:40,column:26}},{start:{line:40,column:30},end:{line:40,column:50}}],line:40},"9":{loc:{start:{line:43,column:12},end:{line:45,column:13}},type:"if",locations:[{start:{line:43,column:12},end:{line:45,column:13}},{start:{line:43,column:12},end:{line:45,column:13}}],line:43},"10":{loc:{start:{line:46,column:12},end:{line:60,column:13}},type:"if",locations:[{start:{line:46,column:12},end:{line:60,column:13}},{start:{line:46,column:12},end:{line:60,column:13}}],line:46},"11":{loc:{start:{line:51,column:16},end:{line:53,column:17}},type:"if",locations:[{start:{line:51,column:16},end:{line:53,column:17}},{start:{line:51,column:16},end:{line:53,column:17}}],line:51},"12":{loc:{start:{line:54,column:16},end:{line:56,column:17}},type:"if",locations:[{start:{line:54,column:16},end:{line:56,column:17}},{start:{line:54,column:16},end:{line:56,column:17}}],line:54},"13":{loc:{start:{line:57,column:16},end:{line:59,column:17}},type:"if",locations:[{start:{line:57,column:16},end:{line:59,column:17}},{start:{line:57,column:16},end:{line:59,column:17}}],line:57},"14":{loc:{start:{line:57,column:20},end:{line:57,column:61}},type:"binary-expr",locations:[{start:{line:57,column:20},end:{line:57,column:37}},{start:{line:57,column:41},end:{line:57,column:61}}],line:57},"15":{loc:{start:{line:62,column:8},end:{line:64,column:9}},type:"if",locations:[{start:{line:62,column:8},end:{line:64,column:9}},{start:{line:62,column:8},end:{line:64,column:9}}],line:62},"16":{loc:{start:{line:62,column:12},end:{line:62,column:61}},type:"binary-expr",locations:[{start:{line:62,column:12},end:{line:62,column:31}},{start:{line:62,column:35},end:{line:62,column:61}}],line:62},"17":{loc:{start:{line:65,column:8},end:{line:67,column:9}},type:"if",locations:[{start:{line:65,column:8},end:{line:67,column:9}},{start:{line:65,column:8},end:{line:67,column:9}}],line:65},"18":{loc:{start:{line:65,column:12},end:{line:65,column:51}},type:"binary-expr",locations:[{start:{line:65,column:12},end:{line:65,column:21}},{start:{line:65,column:25},end:{line:65,column:51}}],line:65}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-damage-prompt-resolver.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/move-damage-prompt-resolver.ts"],names:[],mappings:"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",sourcesContent:["import { Player, State, Action, ResolvePromptAction, Prompt, MoveDamagePrompt,\n  DamageTransfer } from '../../game';\nimport { PutDamagePromptResolver } from './put-damage-prompt-resolver';\n\n\nexport class MoveDamagePromptResolver extends PutDamagePromptResolver {\n\n  public resolvePrompt(state: State, player: Player, prompt: Prompt<any>): Action | undefined {\n    if (prompt instanceof MoveDamagePrompt) {\n      const result = this.getMoveDamagePromptResult(state, prompt);\n      return new ResolvePromptAction(prompt.id, result);\n    }\n  }\n\n  private getMoveDamagePromptResult(state: State, prompt: MoveDamagePrompt): DamageTransfer[] | null {\n    let fromItems = this.getTargets(state, prompt, prompt.options.blockedFrom);\n    const toItems = this.getTargets(state, prompt, prompt.options.blockedTo);\n\n    fromItems.reverse();\n    fromItems = fromItems.filter(i => i.cardList.damage);\n\n    const result: DamageTransfer[] = [];\n    let score = 0;\n    let isNegative = false;\n\n    const min = prompt.options.min;\n    const max = prompt.options.max;\n    let fromIndex = 0;\n    let toIndex = 0;\n\n    while (fromIndex < fromItems.length && toIndex < toItems.length && (!isNegative || result.length < min)) {\n      const fromItem = fromItems[fromIndex];\n      const toItem = toItems[toIndex];\n      if (fromItem === undefined || toItem === undefined) {\n        break;\n      }\n\n      if (fromItem.score >= toItem.score) {\n        isNegative = true;\n      }\n\n      // Moving any card gives negative score, and we are able to cancel\n      // Don't append any results, just cancel the prompt\n      if (isNegative && prompt.options.allowCancel) {\n        break;\n      }\n\n      // Score is negative, and we already have minimum transfers\n      if (isNegative && result.length >= min) {\n        break;\n      }\n\n      if (toItem.cardList === fromItem.cardList) {\n        toIndex += 1;\n      }\n\n      if (toItem.cardList !== fromItem.cardList) {\n        fromItem.damage -= 10;\n        toItem.damage += 10;\n        score += toItem.score - fromItem.score;\n        result.push({ from: fromItem.target, to: toItem.target });\n\n        if (fromItem.damage <= 0) {\n          fromIndex += 1;\n        }\n\n        if (toItem.hp - toItem.damage <= 0) {\n          toIndex += 1;\n        }\n\n        if (max !== undefined && result.length >= max) {\n          break;\n        }\n      }\n    }\n\n    if (result.length === 0 && prompt.options.allowCancel) {\n      return null;\n    }\n\n    if (score < 0 && prompt.options.allowCancel) {\n      return null;\n    }\n\n    return result;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6b06f5c0348fc031ff4aa4b5167a66e74e884bc2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2mekugf5my=function(){return actualCoverage;};}return actualCoverage;}cov_2mekugf5my();cov_2mekugf5my().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2mekugf5my().s[1]++;exports.MoveDamagePromptResolver=void 0;const game_1=(cov_2mekugf5my().s[2]++,require("../../game"));const put_damage_prompt_resolver_1=(cov_2mekugf5my().s[3]++,require("./put-damage-prompt-resolver"));class MoveDamagePromptResolver extends(put_damage_prompt_resolver_1.PutDamagePromptResolver){resolvePrompt(state,player,prompt){cov_2mekugf5my().f[0]++;cov_2mekugf5my().s[4]++;if(prompt instanceof game_1.MoveDamagePrompt){cov_2mekugf5my().b[0][0]++;const result=(cov_2mekugf5my().s[5]++,this.getMoveDamagePromptResult(state,prompt));cov_2mekugf5my().s[6]++;return new game_1.ResolvePromptAction(prompt.id,result);}else{cov_2mekugf5my().b[0][1]++;}}getMoveDamagePromptResult(state,prompt){cov_2mekugf5my().f[1]++;let fromItems=(cov_2mekugf5my().s[7]++,this.getTargets(state,prompt,prompt.options.blockedFrom));const toItems=(cov_2mekugf5my().s[8]++,this.getTargets(state,prompt,prompt.options.blockedTo));cov_2mekugf5my().s[9]++;fromItems.reverse();cov_2mekugf5my().s[10]++;fromItems=fromItems.filter(i=>{cov_2mekugf5my().f[2]++;cov_2mekugf5my().s[11]++;return i.cardList.damage;});const result=(cov_2mekugf5my().s[12]++,[]);let score=(cov_2mekugf5my().s[13]++,0);let isNegative=(cov_2mekugf5my().s[14]++,false);const min=(cov_2mekugf5my().s[15]++,prompt.options.min);const max=(cov_2mekugf5my().s[16]++,prompt.options.max);let fromIndex=(cov_2mekugf5my().s[17]++,0);let toIndex=(cov_2mekugf5my().s[18]++,0);cov_2mekugf5my().s[19]++;while((cov_2mekugf5my().b[1][0]++,fromIndex<fromItems.length)&&(cov_2mekugf5my().b[1][1]++,toIndex<toItems.length)&&((cov_2mekugf5my().b[1][2]++,!isNegative)||(cov_2mekugf5my().b[1][3]++,result.length<min))){const fromItem=(cov_2mekugf5my().s[20]++,fromItems[fromIndex]);const toItem=(cov_2mekugf5my().s[21]++,toItems[toIndex]);cov_2mekugf5my().s[22]++;if((cov_2mekugf5my().b[3][0]++,fromItem===undefined)||(cov_2mekugf5my().b[3][1]++,toItem===undefined)){cov_2mekugf5my().b[2][0]++;cov_2mekugf5my().s[23]++;break;}else{cov_2mekugf5my().b[2][1]++;}cov_2mekugf5my().s[24]++;if(fromItem.score>=toItem.score){cov_2mekugf5my().b[4][0]++;cov_2mekugf5my().s[25]++;isNegative=true;}else{cov_2mekugf5my().b[4][1]++;}// Moving any card gives negative score, and we are able to cancel
// Don't append any results, just cancel the prompt
cov_2mekugf5my().s[26]++;if((cov_2mekugf5my().b[6][0]++,isNegative)&&(cov_2mekugf5my().b[6][1]++,prompt.options.allowCancel)){cov_2mekugf5my().b[5][0]++;cov_2mekugf5my().s[27]++;break;}else{cov_2mekugf5my().b[5][1]++;}// Score is negative, and we already have minimum transfers
cov_2mekugf5my().s[28]++;if((cov_2mekugf5my().b[8][0]++,isNegative)&&(cov_2mekugf5my().b[8][1]++,result.length>=min)){cov_2mekugf5my().b[7][0]++;cov_2mekugf5my().s[29]++;break;}else{cov_2mekugf5my().b[7][1]++;}cov_2mekugf5my().s[30]++;if(toItem.cardList===fromItem.cardList){cov_2mekugf5my().b[9][0]++;cov_2mekugf5my().s[31]++;toIndex+=1;}else{cov_2mekugf5my().b[9][1]++;}cov_2mekugf5my().s[32]++;if(toItem.cardList!==fromItem.cardList){cov_2mekugf5my().b[10][0]++;cov_2mekugf5my().s[33]++;fromItem.damage-=10;cov_2mekugf5my().s[34]++;toItem.damage+=10;cov_2mekugf5my().s[35]++;score+=toItem.score-fromItem.score;cov_2mekugf5my().s[36]++;result.push({from:fromItem.target,to:toItem.target});cov_2mekugf5my().s[37]++;if(fromItem.damage<=0){cov_2mekugf5my().b[11][0]++;cov_2mekugf5my().s[38]++;fromIndex+=1;}else{cov_2mekugf5my().b[11][1]++;}cov_2mekugf5my().s[39]++;if(toItem.hp-toItem.damage<=0){cov_2mekugf5my().b[12][0]++;cov_2mekugf5my().s[40]++;toIndex+=1;}else{cov_2mekugf5my().b[12][1]++;}cov_2mekugf5my().s[41]++;if((cov_2mekugf5my().b[14][0]++,max!==undefined)&&(cov_2mekugf5my().b[14][1]++,result.length>=max)){cov_2mekugf5my().b[13][0]++;cov_2mekugf5my().s[42]++;break;}else{cov_2mekugf5my().b[13][1]++;}}else{cov_2mekugf5my().b[10][1]++;}}cov_2mekugf5my().s[43]++;if((cov_2mekugf5my().b[16][0]++,result.length===0)&&(cov_2mekugf5my().b[16][1]++,prompt.options.allowCancel)){cov_2mekugf5my().b[15][0]++;cov_2mekugf5my().s[44]++;return null;}else{cov_2mekugf5my().b[15][1]++;}cov_2mekugf5my().s[45]++;if((cov_2mekugf5my().b[18][0]++,score<0)&&(cov_2mekugf5my().b[18][1]++,prompt.options.allowCancel)){cov_2mekugf5my().b[17][0]++;cov_2mekugf5my().s[46]++;return null;}else{cov_2mekugf5my().b[17][1]++;}cov_2mekugf5my().s[47]++;return result;}}cov_2mekugf5my().s[48]++;exports.MoveDamagePromptResolver=MoveDamagePromptResolver;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2pvZW15ZXJzY291Z2gvRG9jdW1lbnRzL0dpdEh1Yi9wdGNnLWVwc2QvcHRjZy1zZXJ2ZXIvc3JjL3NpbXBsZS1ib3QvcHJvbXB0LXJlc29sdmVyL21vdmUtZGFtYWdlLXByb21wdC1yZXNvbHZlci50cyIsInNvdXJjZXMiOlsiL1VzZXJzL2pvZW15ZXJzY291Z2gvRG9jdW1lbnRzL0dpdEh1Yi9wdGNnLWVwc2QvcHRjZy1zZXJ2ZXIvc3JjL3NpbXBsZS1ib3QvcHJvbXB0LXJlc29sdmVyL21vdmUtZGFtYWdlLXByb21wdC1yZXNvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxxQ0FDcUM7QUFDckMsNkVBQXVFO0FBR3ZFLE1BQWEsd0JBQXlCLFNBQVEsb0RBQXVCO0lBRTVELGFBQWEsQ0FBQyxLQUFZLEVBQUUsTUFBYyxFQUFFLE1BQW1CO1FBQ3BFLElBQUksTUFBTSxZQUFZLHVCQUFnQixFQUFFO1lBQ3RDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDN0QsT0FBTyxJQUFJLDBCQUFtQixDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDbkQ7SUFDSCxDQUFDO0lBRU8seUJBQXlCLENBQUMsS0FBWSxFQUFFLE1BQXdCO1FBQ3RFLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzNFLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXpFLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNwQixTQUFTLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFckQsTUFBTSxNQUFNLEdBQXFCLEVBQUUsQ0FBQztRQUNwQyxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZCxJQUFJLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFFdkIsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7UUFDL0IsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUM7UUFDL0IsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQztRQUVoQixPQUFPLFNBQVMsR0FBRyxTQUFTLENBQUMsTUFBTSxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxVQUFVLElBQUksTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsRUFBRTtZQUN2RyxNQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdEMsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ2hDLElBQUksUUFBUSxLQUFLLFNBQVMsSUFBSSxNQUFNLEtBQUssU0FBUyxFQUFFO2dCQUNsRCxNQUFNO2FBQ1A7WUFFRCxJQUFJLFFBQVEsQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDLEtBQUssRUFBRTtnQkFDbEMsVUFBVSxHQUFHLElBQUksQ0FBQzthQUNuQjtZQUVELGtFQUFrRTtZQUNsRSxtREFBbUQ7WUFDbkQsSUFBSSxVQUFVLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUU7Z0JBQzVDLE1BQU07YUFDUDtZQUVELDJEQUEyRDtZQUMzRCxJQUFJLFVBQVUsSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsRUFBRTtnQkFDdEMsTUFBTTthQUNQO1lBRUQsSUFBSSxNQUFNLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxRQUFRLEVBQUU7Z0JBQ3pDLE9BQU8sSUFBSSxDQUFDLENBQUM7YUFDZDtZQUVELElBQUksTUFBTSxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsUUFBUSxFQUFFO2dCQUN6QyxRQUFRLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQztnQkFDdEIsTUFBTSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUM7Z0JBQ3BCLEtBQUssSUFBSSxNQUFNLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7Z0JBQ3ZDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7Z0JBRTFELElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7b0JBQ3hCLFNBQVMsSUFBSSxDQUFDLENBQUM7aUJBQ2hCO2dCQUVELElBQUksTUFBTSxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBRTtvQkFDbEMsT0FBTyxJQUFJLENBQUMsQ0FBQztpQkFDZDtnQkFFRCxJQUFJLEdBQUcsS0FBSyxTQUFTLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxHQUFHLEVBQUU7b0JBQzdDLE1BQU07aUJBQ1A7YUFDRjtTQUNGO1FBRUQsSUFBSSxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUNyRCxPQUFPLElBQUksQ0FBQztTQUNiO1FBRUQsSUFBSSxLQUFLLEdBQUcsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFO1lBQzNDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBRUY7QUFsRkQsNERBa0ZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGxheWVyLCBTdGF0ZSwgQWN0aW9uLCBSZXNvbHZlUHJvbXB0QWN0aW9uLCBQcm9tcHQsIE1vdmVEYW1hZ2VQcm9tcHQsXG4gIERhbWFnZVRyYW5zZmVyIH0gZnJvbSAnLi4vLi4vZ2FtZSc7XG5pbXBvcnQgeyBQdXREYW1hZ2VQcm9tcHRSZXNvbHZlciB9IGZyb20gJy4vcHV0LWRhbWFnZS1wcm9tcHQtcmVzb2x2ZXInO1xuXG5cbmV4cG9ydCBjbGFzcyBNb3ZlRGFtYWdlUHJvbXB0UmVzb2x2ZXIgZXh0ZW5kcyBQdXREYW1hZ2VQcm9tcHRSZXNvbHZlciB7XG5cbiAgcHVibGljIHJlc29sdmVQcm9tcHQoc3RhdGU6IFN0YXRlLCBwbGF5ZXI6IFBsYXllciwgcHJvbXB0OiBQcm9tcHQ8YW55Pik6IEFjdGlvbiB8IHVuZGVmaW5lZCB7XG4gICAgaWYgKHByb21wdCBpbnN0YW5jZW9mIE1vdmVEYW1hZ2VQcm9tcHQpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuZ2V0TW92ZURhbWFnZVByb21wdFJlc3VsdChzdGF0ZSwgcHJvbXB0KTtcbiAgICAgIHJldHVybiBuZXcgUmVzb2x2ZVByb21wdEFjdGlvbihwcm9tcHQuaWQsIHJlc3VsdCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXRNb3ZlRGFtYWdlUHJvbXB0UmVzdWx0KHN0YXRlOiBTdGF0ZSwgcHJvbXB0OiBNb3ZlRGFtYWdlUHJvbXB0KTogRGFtYWdlVHJhbnNmZXJbXSB8IG51bGwge1xuICAgIGxldCBmcm9tSXRlbXMgPSB0aGlzLmdldFRhcmdldHMoc3RhdGUsIHByb21wdCwgcHJvbXB0Lm9wdGlvbnMuYmxvY2tlZEZyb20pO1xuICAgIGNvbnN0IHRvSXRlbXMgPSB0aGlzLmdldFRhcmdldHMoc3RhdGUsIHByb21wdCwgcHJvbXB0Lm9wdGlvbnMuYmxvY2tlZFRvKTtcblxuICAgIGZyb21JdGVtcy5yZXZlcnNlKCk7XG4gICAgZnJvbUl0ZW1zID0gZnJvbUl0ZW1zLmZpbHRlcihpID0+IGkuY2FyZExpc3QuZGFtYWdlKTtcblxuICAgIGNvbnN0IHJlc3VsdDogRGFtYWdlVHJhbnNmZXJbXSA9IFtdO1xuICAgIGxldCBzY29yZSA9IDA7XG4gICAgbGV0IGlzTmVnYXRpdmUgPSBmYWxzZTtcblxuICAgIGNvbnN0IG1pbiA9IHByb21wdC5vcHRpb25zLm1pbjtcbiAgICBjb25zdCBtYXggPSBwcm9tcHQub3B0aW9ucy5tYXg7XG4gICAgbGV0IGZyb21JbmRleCA9IDA7XG4gICAgbGV0IHRvSW5kZXggPSAwO1xuXG4gICAgd2hpbGUgKGZyb21JbmRleCA8IGZyb21JdGVtcy5sZW5ndGggJiYgdG9JbmRleCA8IHRvSXRlbXMubGVuZ3RoICYmICghaXNOZWdhdGl2ZSB8fCByZXN1bHQubGVuZ3RoIDwgbWluKSkge1xuICAgICAgY29uc3QgZnJvbUl0ZW0gPSBmcm9tSXRlbXNbZnJvbUluZGV4XTtcbiAgICAgIGNvbnN0IHRvSXRlbSA9IHRvSXRlbXNbdG9JbmRleF07XG4gICAgICBpZiAoZnJvbUl0ZW0gPT09IHVuZGVmaW5lZCB8fCB0b0l0ZW0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaWYgKGZyb21JdGVtLnNjb3JlID49IHRvSXRlbS5zY29yZSkge1xuICAgICAgICBpc05lZ2F0aXZlID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gTW92aW5nIGFueSBjYXJkIGdpdmVzIG5lZ2F0aXZlIHNjb3JlLCBhbmQgd2UgYXJlIGFibGUgdG8gY2FuY2VsXG4gICAgICAvLyBEb24ndCBhcHBlbmQgYW55IHJlc3VsdHMsIGp1c3QgY2FuY2VsIHRoZSBwcm9tcHRcbiAgICAgIGlmIChpc05lZ2F0aXZlICYmIHByb21wdC5vcHRpb25zLmFsbG93Q2FuY2VsKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICAvLyBTY29yZSBpcyBuZWdhdGl2ZSwgYW5kIHdlIGFscmVhZHkgaGF2ZSBtaW5pbXVtIHRyYW5zZmVyc1xuICAgICAgaWYgKGlzTmVnYXRpdmUgJiYgcmVzdWx0Lmxlbmd0aCA+PSBtaW4pIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGlmICh0b0l0ZW0uY2FyZExpc3QgPT09IGZyb21JdGVtLmNhcmRMaXN0KSB7XG4gICAgICAgIHRvSW5kZXggKz0gMTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRvSXRlbS5jYXJkTGlzdCAhPT0gZnJvbUl0ZW0uY2FyZExpc3QpIHtcbiAgICAgICAgZnJvbUl0ZW0uZGFtYWdlIC09IDEwO1xuICAgICAgICB0b0l0ZW0uZGFtYWdlICs9IDEwO1xuICAgICAgICBzY29yZSArPSB0b0l0ZW0uc2NvcmUgLSBmcm9tSXRlbS5zY29yZTtcbiAgICAgICAgcmVzdWx0LnB1c2goeyBmcm9tOiBmcm9tSXRlbS50YXJnZXQsIHRvOiB0b0l0ZW0udGFyZ2V0IH0pO1xuXG4gICAgICAgIGlmIChmcm9tSXRlbS5kYW1hZ2UgPD0gMCkge1xuICAgICAgICAgIGZyb21JbmRleCArPSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRvSXRlbS5ocCAtIHRvSXRlbS5kYW1hZ2UgPD0gMCkge1xuICAgICAgICAgIHRvSW5kZXggKz0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChtYXggIT09IHVuZGVmaW5lZCAmJiByZXN1bHQubGVuZ3RoID49IG1heCkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHJlc3VsdC5sZW5ndGggPT09IDAgJiYgcHJvbXB0Lm9wdGlvbnMuYWxsb3dDYW5jZWwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGlmIChzY29yZSA8IDAgJiYgcHJvbXB0Lm9wdGlvbnMuYWxsb3dDYW5jZWwpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9zaW1wbGUtYm90L3Byb21wdC1yZXNvbHZlci9tb3ZlLWRhbWFnZS1wcm9tcHQtcmVzb2x2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6InN6YUFrQkk7NE9BbEJKLEtBQUEsQ0FBQSxNQUFBLDBCQUFBLE9BQUEsQ0FBQSxZQUFBLENBQUEsQ0FBQSxDQUVBLEtBQUEsQ0FBQSw0QkFBQSwwQkFBQSxPQUFBLENBQUEsOEJBQUEsQ0FBQSxDQUFBLENBR0EsS0FBYSxDQUFBLHdCQUFiLFNBQThDLDRCQUFBLENBQUEsdUJBQTlDLENBQXFFLENBRTVELGFBQWEsQ0FBQyxLQUFELENBQWUsTUFBZixDQUErQixNQUEvQixDQUFrRCxpREFDcEUsR0FBSSxNQUFNLFdBQVksQ0FBQSxNQUFBLENBQUEsZ0JBQXRCLENBQXdDLDRCQUN0QyxLQUFNLENBQUEsTUFBTSwwQkFBRyxLQUFLLHlCQUFMLENBQStCLEtBQS9CLENBQXNDLE1BQXRDLENBQUgsQ0FBWixDQURzQyx3QkFFdEMsTUFBTyxJQUFJLENBQUEsTUFBQSxDQUFBLG1CQUFKLENBQXdCLE1BQU0sQ0FBQyxFQUEvQixDQUFtQyxNQUFuQyxDQUFQLENBQ0QsQ0FIRCxpQ0FJRCxDQUVPLHlCQUF5QixDQUFDLEtBQUQsQ0FBZSxNQUFmLENBQXVDLHlCQUN0RSxHQUFJLENBQUEsU0FBUywwQkFBRyxLQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsQ0FBdUIsTUFBdkIsQ0FBK0IsTUFBTSxDQUFDLE9BQVAsQ0FBZSxXQUE5QyxDQUFILENBQWIsQ0FDQSxLQUFNLENBQUEsT0FBTywwQkFBRyxLQUFLLFVBQUwsQ0FBZ0IsS0FBaEIsQ0FBdUIsTUFBdkIsQ0FBK0IsTUFBTSxDQUFDLE9BQVAsQ0FBZSxTQUE5QyxDQUFILENBQWIsQ0FGc0Usd0JBSXRFLFNBQVMsQ0FBQyxPQUFWLEdBSnNFLHlCQUt0RSxTQUFTLENB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ZSxXQUF0QyxDQUFKLENBQXVELHNEQUNyRCxNQUFPLEtBQVAsQ0FDRCxDQUZELGtDQTlEc0UseUJBa0V0RSxHQUFJLDZCQUFBLEtBQUssQ0FBRyxDQUFSLGdDQUFhLE1BQU0sQ0FBQyxPQUFQLENBQWUsV0FBNUIsQ0FBSixDQUE2QyxzREFDM0MsTUFBTyxLQUFQLENBQ0QsQ0FGRCxrQ0FsRXNFLHlCQXNFdEUsTUFBTyxDQUFBLE1BQVAsQ0FDRCxDQWhGa0UsQyx5QkFBckUsT0FBQSxDQUFBLHdCQUFBLENBQUEsd0JBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBsYXllciwgU3RhdGUsIEFjdGlvbiwgUmVzb2x2ZVByb21wdEFjdGlvbiwgUHJvbXB0LCBNb3ZlRGFtYWdlUHJvbXB0LFxuICBEYW1hZ2VUcmFuc2ZlciB9IGZyb20gJy4uLy4uL2dhbWUnO1xuaW1wb3J0IHsgUHV0RGFtYWdlUHJvbXB0UmVzb2x2ZXIgfSBmcm9tICcuL3B1dC1kYW1hZ2UtcHJvbXB0LXJlc29sdmVyJztcblxuXG5leHBvcnQgY2xhc3MgTW92ZURhbWFnZVByb21wdFJlc29sdmVyIGV4dGVuZHMgUHV0RGFtYWdlUHJvbXB0UmVzb2x2ZXIge1xuXG4gIHB1YmxpYyByZXNvbHZlUHJvbXB0KHN0YXRlOiBTdGF0ZSwgcGxheWVyOiBQbGF5ZXIsIHByb21wdDogUHJvbXB0PGFueT4pOiBBY3Rpb24gfCB1bmRlZmluZWQge1xuICAgIGlmIChwcm9tcHQgaW5zdGFuY2VvZiBNb3ZlRGFtYWdlUHJvbXB0KSB7XG4gICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmdldE1vdmVEYW1hZ2VQcm9tcHRSZXN1bHQoc3RhdGUsIHByb21wdCk7XG4gICAgICByZXR1cm4gbmV3IFJlc29sdmVQcm9tcHRBY3Rpb24ocHJvbXB0LmlkLCByZXN1bHQpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZ2V0TW92ZURhbWFnZVByb21wdFJlc3VsdChzdGF0ZTogU3RhdGUsIHByb21wdDogTW92ZURhbWFnZVByb21wdCk6IERhbWFnZVRyYW5zZmVyW10gfCBudWxsIHtcbiAgICBsZXQgZnJvbUl0ZW1zID0gdGhpcy5nZXRUYXJnZXRzKHN0YXRlLCBwcm9tcHQsIHByb21wdC5vcHRpb25zLmJsb2NrZWRGcm9tKTtcbiAgICBjb25zdCB0b0l0ZW1zID0gdGhpcy5nZXRUYXJnZXRzKHN0YXRlLCBwcm9tcHQsIHByb21wdC5vcHRpb25zLmJsb2NrZWRUbyk7XG5cbiAgICBmcm9tSXRlbXMucmV2ZXJzZSgpO1xuICAgIGZyb21JdGVtcyA9IGZyb21JdGVtcy5maWx0ZXIoaSA9PiBpLmNhcmRMaXN0LmRhbWFnZSk7XG5cbiAgICBjb25zdCByZXN1bHQ6IERhbWFnZVRyYW5zZmVyW10gPSBbXTtcbiAgICBsZXQgc2NvcmUgPSAwO1xuICAgIGxldCBpc05lZ2F0aXZlID0gZmFsc2U7XG5cbiAgICBjb25zdCBtaW4gPSBwcm9tcHQub3B0aW9ucy5taW47XG4gICAgY29uc3QgbWF4ID0gcHJvbXB0Lm9wdGlvbnMubWF4O1xuICAgIGxldCBmcm9tSW5kZXggPSAwO1xuICAgIGxldCB0b0luZGV4ID0gMDtcblxuICAgIHdoaWxlIChmcm9tSW5kZXggPCBmcm9tSXRlbXMubGVuZ3RoICYmIHRvSW5kZXggPCB0b0l0ZW1zLmxlbmd0aCAmJiAoIWlzTmVnYXRpdmUgfHwgcmVzdWx0Lmxlbmd0aCA8IG1pbikpIHtcbiAgICAgIGNvbnN0IGZyb21JdGVtID0gZnJvbUl0ZW1zW2Zyb21JbmRleF07XG4gICAgICBjb25zdCB0b0l0ZW0gPSB0b0l0ZW1zW3RvSW5kZXhdO1xuICAgICAgaWYgKGZyb21JdGVtID09PSB1bmRlZmluZWQgfHwgdG9JdGVtID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGlmIChmcm9tSXRlbS5zY29yZSA+PSB0b0l0ZW0uc2NvcmUpIHtcbiAgICAgICAgaXNOZWdhdGl2ZSA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8vIE1vdmluZyBhbnkgY2FyZCBnaXZlcyBuZWdhdGl2ZSBzY29yZSwgYW5kIHdlIGFyZSBhYmxlIHRvIGNhbmNlbFxuICAgICAgLy8gRG9uJ3QgYXBwZW5kIGFueSByZXN1bHRzLCBqdXN0IGNhbmNlbCB0aGUgcHJvbXB0XG4gICAgICBpZiAoaXNOZWdhdGl2ZSAmJiBwcm9tcHQub3B0aW9ucy5hbGxvd0NhbmNlbCkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgLy8gU2NvcmUgaXMgbmVnYXRpdmUsIGFuZCB3ZSBhbHJlYWR5IGhhdmUgbWluaW11bSB0cmFuc2ZlcnNcbiAgICAgIGlmIChpc05lZ2F0aXZlICYmIHJlc3VsdC5sZW5ndGggPj0gbWluKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAodG9JdGVtLmNhcmRMaXN0ID09PSBmcm9tSXRlbS5jYXJkTGlzdCkge1xuICAgICAgICB0b0luZGV4ICs9IDE7XG4gICAgICB9XG5cbiAgICAgIGlmICh0b0l0ZW0uY2FyZExpc3QgIT09IGZyb21JdGVtLmNhcmRMaXN0KSB7XG4gICAgICAgIGZyb21JdGVtLmRhbWFnZSAtPSAxMDtcbiAgICAgICAgdG9JdGVtLmRhbWFnZSArPSAxMDtcbiAgICAgICAgc2NvcmUgKz0gdG9JdGVtLnNjb3JlIC0gZnJvbUl0ZW0uc2NvcmU7XG4gICAgICAgIHJlc3VsdC5wdXNoKHsgZnJvbTogZnJvbUl0ZW0udGFyZ2V0LCB0bzogdG9JdGVtLnRhcmdldCB9KTtcblxuICAgICAgICBpZiAoZnJvbUl0ZW0uZGFtYWdlIDw9IDApIHtcbiAgICAgICAgICBmcm9tSW5kZXggKz0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0b0l0ZW0uaHAgLSB0b0l0ZW0uZGFtYWdlIDw9IDApIHtcbiAgICAgICAgICB0b0luZGV4ICs9IDE7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAobWF4ICE9PSB1bmRlZmluZWQgJiYgcmVzdWx0Lmxlbmd0aCA+PSBtYXgpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChyZXN1bHQubGVuZ3RoID09PSAwICYmIHByb21wdC5vcHRpb25zLmFsbG93Q2FuY2VsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAoc2NvcmUgPCAwICYmIHByb21wdC5vcHRpb25zLmFsbG93Q2FuY2VsKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbn1cbiJdfQ==