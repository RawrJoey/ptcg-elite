{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/effect-reducers/game-effect.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/effect-reducers/game-effect.ts"],"names":[],"mappings":"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","sourcesContent":["import { GameError } from '../../game-error';\nimport { GameMessage, GameLog } from '../../game-message';\nimport { EndTurnEffect } from '../effects/game-phase-effects';\nimport { Effect } from '../effects/effect';\nimport { State, GamePhase } from '../state/state';\nimport { StoreLike } from '../store-like';\nimport { StateUtils } from '../state-utils';\nimport { CheckPokemonTypeEffect, CheckPokemonStatsEffect,\n  CheckProvidedEnergyEffect, CheckAttackCostEffect } from '../effects/check-effects';\nimport { Weakness, Resistance } from '../card/pokemon-types';\nimport { CardType, SpecialCondition, CardTag } from '../card/card-types';\nimport { AttackEffect, UseAttackEffect, HealEffect, KnockOutEffect,\n  UsePowerEffect, PowerEffect, UseStadiumEffect, EvolveEffect } from '../effects/game-effects';\nimport { CoinFlipPrompt } from '../prompts/coin-flip-prompt';\nimport { DealDamageEffect, ApplyWeaknessEffect } from '../effects/attack-effects';\n\nfunction applyWeaknessAndResistance(\n  damage: number,\n  cardTypes: CardType[],\n  weakness: Weakness[],\n  resistance: Resistance[]\n): number {\n  let multiply = 1;\n  let modifier = 0;\n\n  for (const item of weakness) {\n    if (cardTypes.includes(item.type)) {\n      if (item.value === undefined) {\n        multiply *= 2;\n      } else {\n        modifier += item.value;\n      }\n    }\n  }\n\n  for (const item of resistance) {\n    if (cardTypes.includes(item.type)) {\n      modifier += item.value;\n    }\n  }\n\n  return (damage * multiply) + modifier;\n}\n\nfunction* useAttack(next: Function, store: StoreLike, state: State, effect: UseAttackEffect): IterableIterator<State> {\n  const player = effect.player;\n  const opponent = StateUtils.getOpponent(state, player);\n\n  const sp = player.active.specialConditions;\n  if (sp.includes(SpecialCondition.PARALYZED) || sp.includes(SpecialCondition.ASLEEP)) {\n    throw new GameError(GameMessage.BLOCKED_BY_SPECIAL_CONDITION);\n  }\n\n  const attack = effect.attack;\n  const checkAttackCost = new CheckAttackCostEffect(player, attack);\n  state = store.reduceEffect(state, checkAttackCost);\n\n  const checkProvidedEnergy = new CheckProvidedEnergyEffect(player);\n  state = store.reduceEffect(state, checkProvidedEnergy);\n\n  if (StateUtils.checkEnoughEnergy(checkProvidedEnergy.energyMap, checkAttackCost.cost) === false) {\n    throw new GameError(GameMessage.NOT_ENOUGH_ENERGY);\n  }\n\n  if (sp.includes(SpecialCondition.CONFUSED)) {\n    let flip = false;\n\n    store.log(state, GameLog.LOG_FLIP_CONFUSION, { name: player.name });\n    yield store.prompt(state, new CoinFlipPrompt(\n      player.id,\n      GameMessage.FLIP_CONFUSION),\n    result => {\n      flip = result;\n      next();\n    });\n\n    if (flip === false) {\n      store.log(state, GameLog.LOG_HURTS_ITSELF);\n      player.active.damage += 30;\n      state = store.reduceEffect(state, new EndTurnEffect(player));\n      return state;\n    }\n  }\n\n  store.log(state, GameLog.LOG_PLAYER_USES_ATTACK, { name: player.name, attack: attack.name });\n  state.phase = GamePhase.ATTACK;\n  const attackEffect = new AttackEffect(player, opponent, attack);\n  state = store.reduceEffect(state, attackEffect);\n\n  if (store.hasPrompts()) {\n    yield store.waitPrompt(state, () => next());\n  }\n\n  if (attackEffect.damage > 0) {\n    const dealDamage = new DealDamageEffect(attackEffect, attackEffect.damage);\n    state = store.reduceEffect(state, dealDamage);\n  }\n\n  if (store.hasPrompts()) {\n    yield store.waitPrompt(state, () => next());\n  }\n\n  return store.reduceEffect(state, new EndTurnEffect(player));\n}\n\nexport function gameReducer(store: StoreLike, state: State, effect: Effect): State {\n\n  if (effect instanceof KnockOutEffect) {\n    const card = effect.target.getPokemonCard();\n    if (card !== undefined) {\n\n      // Pokemon ex rule\n      if (card.tags.includes(CardTag.POKEMON_EX)) {\n        effect.prizeCount += 1;\n      }\n\n      store.log(state, GameLog.LOG_POKEMON_KO, { name: card.name });\n      effect.target.moveTo(effect.player.discard);\n      effect.target.clearEffects();\n    }\n  }\n\n  if (effect instanceof ApplyWeaknessEffect) {\n    const checkPokemonType = new CheckPokemonTypeEffect(effect.source);\n    state = store.reduceEffect(state, checkPokemonType);\n    const checkPokemonStats = new CheckPokemonStatsEffect(effect.target);\n    state = store.reduceEffect(state, checkPokemonStats);\n\n    const cardType = checkPokemonType.cardTypes;\n    const weakness = effect.ignoreWeakness ? [] : checkPokemonStats.weakness;\n    const resistance = effect.ignoreResistance ? [] : checkPokemonStats.resistance;\n    effect.damage = applyWeaknessAndResistance(effect.damage, cardType, weakness, resistance);\n    return state;\n  }\n\n  if (effect instanceof UseAttackEffect) {\n    const generator = useAttack(() => generator.next(), store, state, effect);\n    return generator.next().value;\n  }\n\n  if (effect instanceof UsePowerEffect) {\n    const player = effect.player;\n    const power = effect.power;\n    const card = effect.card;\n\n    store.log(state, GameLog.LOG_PLAYER_USES_ABILITY, { name: player.name, ability: power.name });\n    state = store.reduceEffect(state, new PowerEffect(player, power, card));\n    return state;\n  }\n\n  if (effect instanceof UseStadiumEffect) {\n    const player = effect.player;\n    store.log(state, GameLog.LOG_PLAYER_USES_STADIUM, { name: player.name, stadium: effect.stadium.name });\n    player.stadiumUsedTurn = state.turn;\n  }\n\n  if (effect instanceof HealEffect) {\n    effect.target.damage = Math.max(0, effect.target.damage - effect.damage);\n    return state;\n  }\n\n  if (effect instanceof EvolveEffect) {\n    const pokemonCard = effect.target.getPokemonCard();\n    if (pokemonCard === undefined) {\n      throw new GameError(GameMessage.INVALID_TARGET);\n    }\n    store.log(state, GameLog.LOG_PLAYER_EVOLVES_POKEMON, {\n      name: effect.player.name,\n      pokemon: pokemonCard.name,\n      card: effect.pokemonCard.name\n    });\n    effect.player.hand.moveCardTo(effect.pokemonCard, effect.target);\n    effect.target.pokemonPlayedTurn = state.turn;\n    effect.target.clearEffects();\n  }\n\n  return state;\n}\n"]}