"use strict";function cov_1dz6rsd2or(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/card.serializer.ts";var hash="99338fee0c5f8bdc17e5ea41cbd7c4df0d375b61";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/card.serializer.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:32}},"2":{start:{line:4,column:15},end:{line:4,column:44}},"3":{start:{line:5,column:21},end:{line:5,column:45}},"4":{start:{line:6,column:23},end:{line:6,column:49}},"5":{start:{line:9,column:8},end:{line:9,column:30}},"6":{start:{line:10,column:8},end:{line:10,column:37}},"7":{start:{line:13,column:22},end:{line:13,column:29}},"8":{start:{line:14,column:8},end:{line:16,column:9}},"9":{start:{line:15,column:12},end:{line:15,column:130}},"10":{start:{line:17,column:8},end:{line:17,column:40}},"11":{start:{line:20,column:22},end:{line:20,column:32}},"12":{start:{line:21,column:21},end:{line:21,column:41}},"13":{start:{line:22,column:8},end:{line:24,column:9}},"14":{start:{line:23,column:12},end:{line:23,column:131}},"15":{start:{line:25,column:8},end:{line:25,column:20}},"16":{start:{line:28,column:0},end:{line:28,column:40}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:18},end:{line:11,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:4},end:{line:12,column:5}},loc:{start:{line:12,column:20},end:{line:18,column:5}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:19,column:4},end:{line:19,column:5}},loc:{start:{line:19,column:31},end:{line:26,column:5}},line:19}},branchMap:{"0":{loc:{start:{line:14,column:8},end:{line:16,column:9}},type:"if",locations:[{start:{line:14,column:8},end:{line:16,column:9}},{start:{line:14,column:8},end:{line:16,column:9}}],line:14},"1":{loc:{start:{line:22,column:8},end:{line:24,column:9}},type:"if",locations:[{start:{line:22,column:8},end:{line:24,column:9}},{start:{line:22,column:8},end:{line:24,column:9}}],line:22}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/card.serializer.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/card.serializer.ts"],names:[],mappings:";;;AACA,6CAA0C;AAC1C,8CAA0C;AAC1C,kDAAgD;AAEhD,MAAa,cAAc;IAKzB;QAHgB,UAAK,GAAG,CAAC,MAAM,CAAC,CAAC;QACjB,YAAO,GAAG,CAAC,WAAI,CAAC,CAAC;IAEhB,CAAC;IAEX,SAAS,CAAC,IAAU;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;QACtB,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,MAAM,IAAI,sBAAS,CAAC,4BAAa,CAAC,gBAAgB,EAAE,mBAAmB,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC;SAC3F;QAED,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;IAClC,CAAC;IAEM,WAAW,CAAC,IAAgB,EAAE,OAA0B;QAC7D,MAAM,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC;QACjC,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,MAAM,IAAI,sBAAS,CAAC,4BAAa,CAAC,gBAAgB,EAAE,4BAA4B,KAAK,IAAI,CAAC,CAAC;SAC5F;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;AAzBD,wCAyBC",sourcesContent:["import { SerializerContext, Serialized, Serializer } from './serializer.interface';\nimport { Card } from '../store/card/card';\nimport { GameError } from '../game-error';\nimport { GameCoreError } from '../game-message';\n\nexport class CardSerializer implements Serializer<Card> {\n\n  public readonly types = ['Card'];\n  public readonly classes = [Card];\n\n  constructor () { }\n\n  public serialize(card: Card): Serialized {\n    const index = card.id;\n    if (index === -1) {\n      throw new GameError(GameCoreError.ERROR_SERIALIZER, `Card not found '${card.fullName}'.`);\n    }\n\n    return { _type: 'Card', index };\n  }\n\n  public deserialize(data: Serialized, context: SerializerContext): Card {\n    const index: number = data.index;\n    const card = context.cards[index];\n    if (card === undefined) {\n      throw new GameError(GameCoreError.ERROR_SERIALIZER, `Card not found on index '${index}'.`);\n    }\n    return card;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"99338fee0c5f8bdc17e5ea41cbd7c4df0d375b61"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1dz6rsd2or=function(){return actualCoverage;};}return actualCoverage;}cov_1dz6rsd2or();cov_1dz6rsd2or().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1dz6rsd2or().s[1]++;exports.CardSerializer=void 0;const card_1=(cov_1dz6rsd2or().s[2]++,require("../store/card/card"));const game_error_1=(cov_1dz6rsd2or().s[3]++,require("../game-error"));const game_message_1=(cov_1dz6rsd2or().s[4]++,require("../game-message"));class CardSerializer{constructor(){cov_1dz6rsd2or().f[0]++;cov_1dz6rsd2or().s[5]++;this.types=['Card'];cov_1dz6rsd2or().s[6]++;this.classes=[card_1.Card];}serialize(card){cov_1dz6rsd2or().f[1]++;const index=(cov_1dz6rsd2or().s[7]++,card.id);cov_1dz6rsd2or().s[8]++;if(index===-1){cov_1dz6rsd2or().b[0][0]++;cov_1dz6rsd2or().s[9]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_SERIALIZER,`Card not found '${card.fullName}'.`);}else{cov_1dz6rsd2or().b[0][1]++;}cov_1dz6rsd2or().s[10]++;return{_type:'Card',index};}deserialize(data,context){cov_1dz6rsd2or().f[2]++;const index=(cov_1dz6rsd2or().s[11]++,data.index);const card=(cov_1dz6rsd2or().s[12]++,context.cards[index]);cov_1dz6rsd2or().s[13]++;if(card===undefined){cov_1dz6rsd2or().b[1][0]++;cov_1dz6rsd2or().s[14]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_SERIALIZER,`Card not found on index '${index}'.`);}else{cov_1dz6rsd2or().b[1][1]++;}cov_1dz6rsd2or().s[15]++;return card;}}cov_1dz6rsd2or().s[16]++;exports.CardSerializer=CardSerializer;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2pvZW15ZXJzY291Z2gvRG9jdW1lbnRzL0dpdEh1Yi9wdGNnLWVwc2QvcHRjZy1zZXJ2ZXIvc3JjL2dhbWUvc2VyaWFsaXplci9jYXJkLnNlcmlhbGl6ZXIudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9nYW1lL3NlcmlhbGl6ZXIvY2FyZC5zZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLDZDQUEwQztBQUMxQyw4Q0FBMEM7QUFDMUMsa0RBQWdEO0FBRWhELE1BQWEsY0FBYztJQUt6QjtRQUhnQixVQUFLLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqQixZQUFPLEdBQUcsQ0FBQyxXQUFJLENBQUMsQ0FBQztJQUVoQixDQUFDO0lBRVgsU0FBUyxDQUFDLElBQVU7UUFDekIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUN0QixJQUFJLEtBQUssS0FBSyxDQUFDLENBQUMsRUFBRTtZQUNoQixNQUFNLElBQUksc0JBQVMsQ0FBQyw0QkFBYSxDQUFDLGdCQUFnQixFQUFFLG1CQUFtQixJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQztTQUMzRjtRQUVELE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQ2xDLENBQUM7SUFFTSxXQUFXLENBQUMsSUFBZ0IsRUFBRSxPQUEwQjtRQUM3RCxNQUFNLEtBQUssR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2pDLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEMsSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQ3RCLE1BQU0sSUFBSSxzQkFBUyxDQUFDLDRCQUFhLENBQUMsZ0JBQWdCLEVBQUUsNEJBQTRCLEtBQUssSUFBSSxDQUFDLENBQUM7U0FDNUY7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FFRjtBQXpCRCx3Q0F5QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZXJpYWxpemVyQ29udGV4dCwgU2VyaWFsaXplZCwgU2VyaWFsaXplciB9IGZyb20gJy4vc2VyaWFsaXplci5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJy4uL3N0b3JlL2NhcmQvY2FyZCc7XG5pbXBvcnQgeyBHYW1lRXJyb3IgfSBmcm9tICcuLi9nYW1lLWVycm9yJztcbmltcG9ydCB7IEdhbWVDb3JlRXJyb3IgfSBmcm9tICcuLi9nYW1lLW1lc3NhZ2UnO1xuXG5leHBvcnQgY2xhc3MgQ2FyZFNlcmlhbGl6ZXIgaW1wbGVtZW50cyBTZXJpYWxpemVyPENhcmQ+IHtcblxuICBwdWJsaWMgcmVhZG9ubHkgdHlwZXMgPSBbJ0NhcmQnXTtcbiAgcHVibGljIHJlYWRvbmx5IGNsYXNzZXMgPSBbQ2FyZF07XG5cbiAgY29uc3RydWN0b3IgKCkgeyB9XG5cbiAgcHVibGljIHNlcmlhbGl6ZShjYXJkOiBDYXJkKTogU2VyaWFsaXplZCB7XG4gICAgY29uc3QgaW5kZXggPSBjYXJkLmlkO1xuICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgIHRocm93IG5ldyBHYW1lRXJyb3IoR2FtZUNvcmVFcnJvci5FUlJPUl9TRVJJQUxJWkVSLCBgQ2FyZCBub3QgZm91bmQgJyR7Y2FyZC5mdWxsTmFtZX0nLmApO1xuICAgIH1cblxuICAgIHJldHVybiB7IF90eXBlOiAnQ2FyZCcsIGluZGV4IH07XG4gIH1cblxuICBwdWJsaWMgZGVzZXJpYWxpemUoZGF0YTogU2VyaWFsaXplZCwgY29udGV4dDogU2VyaWFsaXplckNvbnRleHQpOiBDYXJkIHtcbiAgICBjb25zdCBpbmRleDogbnVtYmVyID0gZGF0YS5pbmRleDtcbiAgICBjb25zdCBjYXJkID0gY29udGV4dC5jYXJkc1tpbmRleF07XG4gICAgaWYgKGNhcmQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEdhbWVFcnJvcihHYW1lQ29yZUVycm9yLkVSUk9SX1NFUklBTElaRVIsIGBDYXJkIG5vdCBmb3VuZCBvbiBpbmRleCAnJHtpbmRleH0nLmApO1xuICAgIH1cbiAgICByZXR1cm4gY2FyZDtcbiAgfVxuXG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9nYW1lL3NlcmlhbGl6ZXIvY2FyZC5zZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI0NklBZ0JLO2tPQWZMLEtBQUEsQ0FBQSxNQUFBLDBCQUFBLE9BQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsWUFBQSwwQkFBQSxPQUFBLENBQUEsZUFBQSxDQUFBLENBQUEsQ0FDQSxLQUFBLENBQUEsY0FBQSwwQkFBQSxPQUFBLENBQUEsaUJBQUEsQ0FBQSxDQUFBLENBRUEsS0FBYSxDQUFBLGNBQWMsQ0FLekIsV0FBQSxFQUFBLGlEQUhnQixLQUFBLEtBQUEsQ0FBUSxDQUFDLE1BQUQsQ0FBUixDQUdoQix3QkFGZ0IsS0FBQSxPQUFBLENBQVUsQ0FBQyxNQUFBLENBQUEsSUFBRCxDQUFWLENBRUUsQ0FFWCxTQUFTLENBQUMsSUFBRCxDQUFXLHlCQUN6QixLQUFNLENBQUEsS0FBSywwQkFBRyxJQUFJLENBQUMsRUFBUixDQUFYLENBRHlCLHdCQUV6QixHQUFJLEtBQUssR0FBSyxDQUFDLENBQWYsQ0FBa0Isb0RBQ2hCLEtBQU0sSUFBSSxDQUFBLFlBQUEsQ0FBQSxTQUFKLENBQWMsY0FBQSxDQUFBLGFBQUEsQ0FBYyxnQkFBNUIsQ0FBOEMsbUJBQW1CLElBQUksQ0FBQyxRQUFRLElBQTlFLENBQU4sQ0FDRCxDQUZELGlDQUZ5Qix5QkFNekIsTUFBTyxDQUFFLEtBQUssQ0FBRSxNQUFULENBQWlCLEtBQWpCLENBQVAsQ0FDRCxDQUVNLFdBQVcsQ0FBQyxJQUFELENBQW1CLE9BQW5CLENBQTZDLHlCQUM3RCxLQUFNLENBQUEsS0FBSywyQkFBVyxJQUFJLENBQUMsS0FBaEIsQ0FBWCxDQUNBLEtBQU0sQ0FBQSxJQUFJLDJCQUFHLE9BQU8sQ0FBQyxLQUFSLENBQWMsS0FBZCxDQUFILENBQVYsQ0FGNkQseUJBRzdELEdBQUksSUFBSSxHQUFLLFNBQWIsQ0FBd0IscURBQ3RCLEtBQU0sSUFBSSxDQUFBLFlBQUEsQ0FBQSxTQUFKLENBQWMsY0FBQSxDQUFBLGFBQUEsQ0FBYyxnQkFBNUIsQ0FBOEMsNEJBQTRCLEtBQUssSUFBL0UsQ0FBTixDQUNELENBRkQsaUNBSDZELHlCQU03RCxNQUFPLENBQUEsSUFBUCxDQUNELENBdkJ3QixDLHlCQUEzQixPQUFBLENBQUEsY0FBQSxDQUFBLGNBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNlcmlhbGl6ZXJDb250ZXh0LCBTZXJpYWxpemVkLCBTZXJpYWxpemVyIH0gZnJvbSAnLi9zZXJpYWxpemVyLmludGVyZmFjZSc7XG5pbXBvcnQgeyBDYXJkIH0gZnJvbSAnLi4vc3RvcmUvY2FyZC9jYXJkJztcbmltcG9ydCB7IEdhbWVFcnJvciB9IGZyb20gJy4uL2dhbWUtZXJyb3InO1xuaW1wb3J0IHsgR2FtZUNvcmVFcnJvciB9IGZyb20gJy4uL2dhbWUtbWVzc2FnZSc7XG5cbmV4cG9ydCBjbGFzcyBDYXJkU2VyaWFsaXplciBpbXBsZW1lbnRzIFNlcmlhbGl6ZXI8Q2FyZD4ge1xuXG4gIHB1YmxpYyByZWFkb25seSB0eXBlcyA9IFsnQ2FyZCddO1xuICBwdWJsaWMgcmVhZG9ubHkgY2xhc3NlcyA9IFtDYXJkXTtcblxuICBjb25zdHJ1Y3RvciAoKSB7IH1cblxuICBwdWJsaWMgc2VyaWFsaXplKGNhcmQ6IENhcmQpOiBTZXJpYWxpemVkIHtcbiAgICBjb25zdCBpbmRleCA9IGNhcmQuaWQ7XG4gICAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgICAgdGhyb3cgbmV3IEdhbWVFcnJvcihHYW1lQ29yZUVycm9yLkVSUk9SX1NFUklBTElaRVIsIGBDYXJkIG5vdCBmb3VuZCAnJHtjYXJkLmZ1bGxOYW1lfScuYCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgX3R5cGU6ICdDYXJkJywgaW5kZXggfTtcbiAgfVxuXG4gIHB1YmxpYyBkZXNlcmlhbGl6ZShkYXRhOiBTZXJpYWxpemVkLCBjb250ZXh0OiBTZXJpYWxpemVyQ29udGV4dCk6IENhcmQge1xuICAgIGNvbnN0IGluZGV4OiBudW1iZXIgPSBkYXRhLmluZGV4O1xuICAgIGNvbnN0IGNhcmQgPSBjb250ZXh0LmNhcmRzW2luZGV4XTtcbiAgICBpZiAoY2FyZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgR2FtZUVycm9yKEdhbWVDb3JlRXJyb3IuRVJST1JfU0VSSUFMSVpFUiwgYENhcmQgbm90IGZvdW5kIG9uIGluZGV4ICcke2luZGV4fScuYCk7XG4gICAgfVxuICAgIHJldHVybiBjYXJkO1xuICB9XG5cbn1cbiJdfQ==