{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/move-energy-prompt.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/move-energy-prompt.ts"],"names":[],"mappings":";;;AACA,iDAA6C;AAC7C,qDAAiD;AACjD,qCAAkC;AAGlC,gDAA4C;AAG/B,QAAA,oBAAoB,GAAG,aAAa,CAAC;AAmBlD,MAAa,gBAAiB,SAAQ,eAAsB;IAM1D,YACE,QAAgB,EACT,OAAoB,EACpB,UAAsB,EACtB,KAAiB,EACjB,MAAkB,EACzB,OAAoC;QAEpC,KAAK,CAAC,QAAQ,CAAC,CAAC;QANT,YAAO,GAAP,OAAO,CAAa;QACpB,eAAU,GAAV,UAAU,CAAY;QACtB,UAAK,GAAL,KAAK,CAAY;QACjB,WAAM,GAAN,MAAM,CAAY;QATlB,SAAI,GAAW,4BAAoB,CAAC;QAc3C,kBAAkB;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YAC/B,WAAW,EAAE,IAAI;YACjB,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,SAAS;YACd,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,EAAE;SACf,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,MAAmC,EAAE,KAAY;QAC7D,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,MAAM,CAAC,CAAE,sBAAsB;SACvC;QACD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,qBAAqB,CAAC,CAAC;SACxD;QACD,MAAM,SAAS,GAAmB,EAAE,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjB,MAAM,QAAQ,GAAG,wBAAU,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;YAC7D,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACrC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACnB,CAAC;IAEM,QAAQ,CAAC,MAA6B;QAC3C,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAE,sBAAsB;SACzD;QACD,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;IACjD,CAAC;CAEF;AAnDD,4CAmDC","sourcesContent":["import { Card } from '../card/card';\nimport { GameError } from '../../game-error';\nimport { GameMessage } from '../../game-message';\nimport { Prompt } from './prompt';\nimport { PlayerType, SlotType, CardTarget } from '../actions/play-card-action';\nimport { State } from '../state/state';\nimport { StateUtils } from '../state-utils';\nimport { FilterType } from './choose-cards-prompt';\n\nexport const MoveEnergyPromptType = 'Move energy';\n\nexport type MoveEnergyResultType = {from: CardTarget, to: CardTarget, index: number}[];\n\nexport interface CardTransfer {\n  from: CardTarget;\n  to: CardTarget;\n  card: Card;\n}\n\nexport interface MoveEnergyOptions {\n  allowCancel: boolean;\n  min: number;\n  max: number | undefined;\n  blockedFrom: CardTarget[];\n  blockedTo: CardTarget[];\n  blockedMap: { source: CardTarget, blocked: number[] }[];\n}\n\nexport class MoveEnergyPrompt extends Prompt<CardTransfer[]> {\n\n  readonly type: string = MoveEnergyPromptType;\n\n  public options: MoveEnergyOptions;\n\n  constructor(\n    playerId: number,\n    public message: GameMessage,\n    public playerType: PlayerType,\n    public slots: SlotType[],\n    public filter: FilterType,\n    options?: Partial<MoveEnergyOptions>\n  ) {\n    super(playerId);\n\n    // Default options\n    this.options = Object.assign({}, {\n      allowCancel: true,\n      min: 0,\n      max: undefined,\n      blockedFrom: [],\n      blockedTo: [],\n      blockedMap: [],\n    }, options);\n  }\n\n  public decode(result: MoveEnergyResultType | null, state: State): CardTransfer[] | null {\n    if (result === null) {\n      return result;  // operation cancelled\n    }\n    const player = state.players.find(p => p.id === this.playerId);\n    if (player === undefined) {\n      throw new GameError(GameMessage.INVALID_PROMPT_RESULT);\n    }\n    const transfers: CardTransfer[] = [];\n    result.forEach(t => {\n      const cardList = StateUtils.getTarget(state, player, t.from);\n      const card = cardList.cards[t.index];\n      transfers.push({ from: t.from, to: t.to, card });\n    });\n    return transfers;\n  }\n\n  public validate(result: CardTransfer[] | null): boolean {\n    if (result === null) {\n      return this.options.allowCancel;  // operation cancelled\n    }\n    return result.every(r => r.card !== undefined);\n  }\n\n}\n"]}