{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/order-cards-prompt-resolver.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/order-cards-prompt-resolver.ts"],"names":[],"mappings":";;;AAAA,qCAAgF;AAChF,uDAAmD;AACnD,oFAA+E;AAG/E,MAAa,wBAAyB,SAAQ,gCAAc;IAEnD,aAAa,CAAC,KAAY,EAAE,MAAc,EAAE,MAAmB;QACpE,IAAI,MAAM,YAAY,qCAAgB,EAAE;YACtC,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE;gBAC9B,OAAO,IAAI,0BAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aACjD;YAED,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;gBACnD,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBACnE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YAExC,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACvC,OAAO,IAAI,0BAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;SACnD;IACH,CAAC;CAEF;AApBD,4DAoBC","sourcesContent":["import { Player, State, Action, ResolvePromptAction, Prompt } from '../../game';\nimport { PromptResolver } from './prompt-resolver';\nimport { OrderCardsPrompt } from '../../game/store/prompts/order-cards-prompt';\n\n\nexport class OrderCardsPromptResolver extends PromptResolver {\n\n  public resolvePrompt(state: State, player: Player, prompt: Prompt<any>): Action | undefined {\n    if (prompt instanceof OrderCardsPrompt) {\n      if (prompt.options.allowCancel) {\n        return new ResolvePromptAction(prompt.id, null);\n      }\n\n      const cards = prompt.cards.cards.map((card, index) => {\n        const score = this.stateScore.getCardScore(state, player.id, card);\n        return { card, score, index };\n      });\n\n      cards.sort((a, b) => b.score - a.score);\n\n      const result = cards.map(c => c.index);\n      return new ResolvePromptAction(prompt.id, result);\n    }\n  }\n\n}\n"]}