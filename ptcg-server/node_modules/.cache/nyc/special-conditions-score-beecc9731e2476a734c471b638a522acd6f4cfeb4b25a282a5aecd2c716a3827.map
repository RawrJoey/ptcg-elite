{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/special-conditions-score.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/special-conditions-score.ts"],"names":[],"mappings":";;;AAAA,qCAAuD;AACvD,mCAAsC;AACtC,iEAAoE;AAGpE,MAAa,sBAAuB,SAAQ,mBAAW;IAE9C,QAAQ,CAAC,KAAY,EAAE,QAAgB;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,iBAAU,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEvD,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACxC,KAAK,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAE1C,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,iBAAiB,CAAC,MAAc;QACtC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC;QACrD,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;YAClD,QAAQ,SAAS,EAAE;gBACjB,KAAK,6BAAgB,CAAC,SAAS;oBAC7B,KAAK,IAAI,MAAM,CAAC,SAAS,CAAC;oBAC1B,MAAM;gBACR,KAAK,6BAAgB,CAAC,QAAQ;oBAC5B,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC;oBACzB,MAAM;gBACR,KAAK,6BAAgB,CAAC,MAAM;oBAC1B,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC;oBACvB,MAAM;gBACR,KAAK,6BAAgB,CAAC,QAAQ;oBAC5B,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC;oBACzB,MAAM;gBACR,KAAK,6BAAgB,CAAC,MAAM;oBAC1B,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC;oBACzB,MAAM;aACT;QACH,CAAC,CAAC,CAAC;QACH,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;AAtCD,wDAsCC","sourcesContent":["import { State, StateUtils, Player } from '../../game';\nimport { SimpleScore } from './score';\nimport { SpecialCondition } from '../../game/store/card/card-types';\n\n\nexport class SpecialConditionsScore extends SimpleScore {\n\n  public getScore(state: State, playerId: number): number {\n    const player = this.getPlayer(state, playerId);\n    const opponent = StateUtils.getOpponent(state, player);\n\n    let score = 0;\n    score += this.getScoreForPlayer(player);\n    score -= this.getScoreForPlayer(opponent);\n\n    return score;\n  }\n\n  private getScoreForPlayer(player: Player): number {\n    const scores = this.options.scores.specialConditions;\n    let score = 0;\n    player.active.specialConditions.forEach(condition => {\n      switch (condition) {\n        case SpecialCondition.PARALYZED:\n          score += scores.paralyzed;\n          break;\n        case SpecialCondition.CONFUSED:\n          score += scores.confused;\n          break;\n        case SpecialCondition.ASLEEP:\n          score += scores.asleep;\n          break;\n        case SpecialCondition.POISONED:\n          score += scores.poisoned;\n          break;\n        case SpecialCondition.BURNED:\n          score += scores.confused;\n          break;\n      }\n    });\n    return score;\n  }\n\n}\n"]}