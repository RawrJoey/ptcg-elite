{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/state-score.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/state-score.ts"],"names":[],"mappings":";;;AACA,mCAAsC;AAEtC,6CAAyC;AACzC,qDAAiD;AACjD,iDAA6C;AAC7C,yEAAoE;AACpE,iDAA6C;AAC7C,+CAA2C;AAC3C,iDAA6C;AAC7C,iDAA6C;AAC7C,+CAA2C;AAE3C,MAAa,UAAW,SAAQ,mBAAW;IAYzC,YAAsB,OAAyB;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QADK,YAAO,GAAP,OAAO,CAAkB;QAE7C,IAAI,CAAC,SAAS,GAAG,IAAI,sBAAS,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,IAAI,8BAAa,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,IAAI,0BAAW,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,sBAAsB,GAAG,IAAI,iDAAsB,CAAC,OAAO,CAAC,CAAC;QAClE,IAAI,CAAC,WAAW,GAAG,IAAI,0BAAW,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,wBAAU,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,0BAAW,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,GAAG,IAAI,0BAAW,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,wBAAU,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAEM,QAAQ,CAAC,KAAY,EAAE,QAAgB;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACnE,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/D,MAAM,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrF,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC7D,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/D,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAE7D,MAAM,KAAK,GAAG,SAAS;cACnB,aAAa;cACb,WAAW;cACX,sBAAsB;cACtB,WAAW;cACX,UAAU;cACV,WAAW;cACX,WAAW;cACX,UAAU,CAAC;QAEf,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,YAAY,CAAC,KAAY,EAAE,QAAgB,EAAE,IAAU;QAC5D,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;QAEjE,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,UAAU,GAAG,SAAS,CAAC;QAE3B,+CAA+C;QAC/C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACtD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC1B,4CAA4C;SAC3C;aAAM;YACL,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC7C,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YACtD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;QAED,OAAO,UAAU,GAAG,SAAS,CAAC;IAChC,CAAC;IAEM,eAAe,CAAC,QAAyB;QAC9C,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtE,CAAC;CAEF;AA3ED,gCA2EC","sourcesContent":["import { State, PokemonCardList, Card } from '../../game';\nimport { SimpleScore } from './score';\nimport { SimpleBotOptions } from '../simple-bot-options';\nimport { HandScore } from './hand-score';\nimport { OpponentScore } from './opponent-score';\nimport { PlayerScore } from './player-score';\nimport { SpecialConditionsScore } from './special-conditions-score';\nimport { ActiveScore } from './active-score';\nimport { BenchScore } from './bench-score';\nimport { EnergyScore } from './energy-score';\nimport { DamageScore } from './damage-score';\nimport { ToolsScore } from './tools-score';\n\nexport class StateScore extends SimpleScore {\n\n  private handScore: HandScore;\n  private opponentScore: OpponentScore;\n  private playerScore: PlayerScore;\n  private specialConditionsScore: SpecialConditionsScore;\n  private activeScore: ActiveScore;\n  private benchScore: BenchScore;\n  private energyScore: EnergyScore;\n  private damageScore: DamageScore;\n  private toolsScore: ToolsScore;\n\n  constructor(protected options: SimpleBotOptions) {\n    super(options);\n    this.handScore = new HandScore(options);\n    this.opponentScore = new OpponentScore(options);\n    this.playerScore = new PlayerScore(options);\n    this.specialConditionsScore = new SpecialConditionsScore(options);\n    this.activeScore = new ActiveScore(options);\n    this.benchScore = new BenchScore(options);\n    this.energyScore = new EnergyScore(options);\n    this.damageScore = new DamageScore(options);\n    this.toolsScore = new ToolsScore(options);\n  }\n\n  public getScore(state: State, playerId: number): number {\n    const handScore = this.handScore.getScore(state, playerId);\n    const opponentScore = this.opponentScore.getScore(state, playerId);\n    const playerScore = this.playerScore.getScore(state, playerId);\n    const specialConditionsScore = this.specialConditionsScore.getScore(state, playerId);\n    const activeScore = this.activeScore.getScore(state, playerId);\n    const benchScore = this.benchScore.getScore(state, playerId);\n    const energyScore = this.energyScore.getScore(state, playerId);\n    const damageScore = this.damageScore.getScore(state, playerId);\n    const toolsScore = this.toolsScore.getScore(state, playerId);\n\n    const score = handScore\n      + opponentScore\n      + playerScore\n      + specialConditionsScore\n      + activeScore\n      + benchScore\n      + energyScore\n      + damageScore\n      + toolsScore;\n\n    return score;\n  }\n\n  public getCardScore(state: State, playerId: number, card: Card): number {\n    const player = this.getPlayer(state, playerId);\n    const index = player.hand.cards.findIndex(c => c.id === card.id);\n\n    const baseScore = this.handScore.getScore(state, playerId);\n    let afterScore = baseScore;\n\n    // Card is not in the hand, what if we have it?\n    if (index === -1) {\n      player.hand.cards.push(card);\n      afterScore = this.handScore.getScore(state, playerId);\n      player.hand.cards.pop();\n    // Card is in our hand, what if we loses it?\n    } else {\n      const c = player.hand.cards.splice(index, 1);\n      afterScore = this.handScore.getScore(state, playerId);\n      player.hand.cards.splice(index, 0, c[0]);\n    }\n\n    return afterScore - baseScore;\n  }\n\n  public getPokemonScore(cardList: PokemonCardList): number {\n    return this.getPokemonScoreBy(this.options.scores.active, cardList);\n  }\n\n}\n"]}