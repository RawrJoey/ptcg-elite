{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/store.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/store.ts"],"names":[],"mappings":"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","sourcesContent":["import { Action } from './actions/action';\nimport { AbortGameAction } from './actions/abort-game-action';\nimport { AppendLogAction } from './actions/append-log-action';\nimport { Card } from './card/card';\nimport { ChangeAvatarAction } from './actions/change-avatar-action';\nimport { Effect } from './effects/effect';\nimport { GameError } from '../game-error';\nimport { GameMessage, GameLog } from '../game-message';\nimport { Prompt } from './prompts/prompt';\nimport { ReorderHandAction, ReorderBenchAction } from './actions/reorder-actions';\nimport { ResolvePromptAction } from './actions/resolve-prompt-action';\nimport { State } from './state/state';\nimport { StateLog, StateLogParam } from './state/state-log';\nimport { StoreHandler } from './store-handler';\nimport { StoreLike } from './store-like';\nimport { generateId, deepClone } from '../../utils/utils';\nimport { attackReducer } from './effect-reducers/attack-effect';\nimport { playCardReducer } from './reducers/play-card-reducer';\nimport { playEnergyReducer } from './effect-reducers/play-energy-effect';\nimport { playPokemonReducer } from './effect-reducers/play-pokemon-effect';\nimport { playTrainerReducer } from './effect-reducers/play-trainer-effect';\nimport { playerTurnReducer } from './reducers/player-turn-reducer';\nimport { gamePhaseReducer } from './effect-reducers/game-phase-effect';\nimport { gameReducer } from './effect-reducers/game-effect';\nimport { checkState, checkStateReducer } from './effect-reducers/check-effect';\nimport { playerStateReducer} from './reducers/player-state-reducer';\nimport { retreatReducer } from './effect-reducers/retreat-effect';\nimport { setupPhaseReducer } from './reducers/setup-reducer';\nimport { abortGameReducer } from './reducers/abort-game-reducer';\n\ninterface PromptItem {\n  ids: number[],\n  then: (results: any) => void;\n}\n\nexport class Store implements StoreLike {\n\n  public state: State = new State();\n  private promptItems: PromptItem[] = [];\n  private waitItems: (() => void)[] = [];\n  private logId: number = 0;\n\n  constructor(private handler: StoreHandler) { }\n\n  public dispatch(action: Action): State {\n    let state = this.state;\n\n    if (action instanceof AbortGameAction) {\n      state = abortGameReducer(this, state, action);\n      this.handler.onStateChange(state);\n      return state;\n    }\n\n    if (action instanceof ReorderHandAction\n      || action instanceof ReorderBenchAction\n      || action instanceof ChangeAvatarAction) {\n      state = playerStateReducer(this, state, action);\n      this.handler.onStateChange(state);\n      return state;\n    }\n\n    if (action instanceof ResolvePromptAction) {\n      state = this.reducePrompt(state, action);\n      if (this.promptItems.length === 0) {\n        state = checkState(this, state);\n      }\n      this.handler.onStateChange(state);\n      return state;\n    }\n\n    if (action instanceof AppendLogAction) {\n      this.log(state, action.message, action.params, action.id);\n      this.handler.onStateChange(state);\n      return state;\n    }\n\n    if (state.prompts.some(p => p.result === undefined)) {\n      throw new GameError(GameMessage.ACTION_IN_PROGRESS);\n    }\n\n    state = this.reduce(state, action);\n\n    return state;\n  }\n\n  public reduceEffect(state: State, effect: Effect): State {\n    state = this.propagateEffect(state, effect);\n\n    if (effect.preventDefault === true) {\n      return state;\n    }\n\n    state = gamePhaseReducer(this, state, effect);\n    state = playEnergyReducer(this, state, effect);\n    state = playPokemonReducer(this, state, effect);\n    state = playTrainerReducer(this, state, effect);\n    state = retreatReducer(this, state, effect);\n    state = gameReducer(this, state, effect);\n    state = attackReducer(this, state, effect);\n    state = checkStateReducer(this, state, effect);\n\n    return state;\n  }\n\n  public prompt(state: State, prompts: Prompt<any>[] | Prompt<any>, then: (results: any) => void): State {\n    if (!(prompts instanceof Array)) {\n      prompts = [prompts];\n    }\n\n    for (let i = 0; i < prompts.length; i++) {\n      const id = generateId(state.prompts);\n      prompts[i].id = id;\n      state.prompts.push(prompts[i]);\n    }\n\n    const promptItem: PromptItem = {\n      ids: prompts.map(prompt => prompt.id),\n      then: then\n    };\n\n    this.promptItems.push(promptItem);\n    return state;\n  }\n\n  public waitPrompt(state: State, callback: () => void): State {\n    this.waitItems.push(callback);\n    return state;\n  }\n\n  public log(state: State, message: GameLog, params?: StateLogParam, client?: number): void {\n    const log = new StateLog(message, params, client);\n    log.id = ++this.logId;\n    state.logs.push(log);\n  }\n\n  private reducePrompt(state: State, action: ResolvePromptAction): State {\n    // Resolve prompts actions\n    const prompt = state.prompts.find(item => item.id === action.id);\n    const promptItem = this.promptItems.find(item => item.ids.indexOf(action.id) !== -1);\n\n    if (prompt === undefined || promptItem === undefined) {\n      throw new GameError(GameMessage.ILLEGAL_ACTION);\n    }\n\n    if (prompt.result !== undefined) {\n      throw new GameError(GameMessage.PROMPT_ALREADY_RESOLVED);\n    }\n\n    try {\n      prompt.result = action.result;\n\n      const results = promptItem.ids.map(id => {\n        const p = state.prompts.find(item => item.id === id);\n        return p === undefined ? undefined : p.result;\n      });\n\n      if (action.log !== undefined) {\n        this.log(state, action.log.message, action.log.params, action.log.client);\n      }\n\n      if (results.every(result => result !== undefined)) {\n        const itemIndex = this.promptItems.indexOf(promptItem);\n        promptItem.then(results.length === 1 ? results[0] : results);\n        this.promptItems.splice(itemIndex, 1);\n      }\n\n      this.resolveWaitItems();\n    } catch (storeError) {\n      // Illegal action\n      prompt.result = undefined;\n      throw storeError;\n    }\n\n    return state;\n  }\n\n  private resolveWaitItems(): void {\n    while (this.promptItems.length === 0 && this.waitItems.length > 0) {\n      const waitItem = this.waitItems.pop();\n      if (waitItem !== undefined) {\n        waitItem();\n      }\n    }\n  }\n\n  public hasPrompts(): boolean {\n    return this.promptItems.length > 0;\n  }\n\n  private reduce(state: State, action: Action): State {\n    const stateBackup = deepClone(state, [ Card ]);\n    this.promptItems.length = 0;\n\n    try {\n      state = setupPhaseReducer(this, state, action);\n      state = playCardReducer(this, state, action);\n      state = playerTurnReducer(this, state, action);\n\n      this.resolveWaitItems();\n      if (this.promptItems.length === 0) {\n        state = checkState(this, state);\n      }\n    } catch (storeError) {\n      // Illegal action\n      this.state = stateBackup;\n      this.promptItems.length = 0;\n      throw storeError;\n    }\n\n    this.handler.onStateChange(state);\n    return state;\n  }\n\n  private propagateEffect(state: State, effect: Effect): State {\n    const cards: Card[] = [];\n    for (const player of state.players) {\n      player.stadium.cards.forEach(c => cards.push(c));\n      player.supporter.cards.forEach(c => cards.push(c));\n      player.active.cards.forEach(c => cards.push(c));\n      for (const bench of player.bench) {\n        bench.cards.forEach(c => cards.push(c));\n      }\n      for (const prize of player.prizes) {\n        prize.cards.forEach(c => cards.push(c));\n      }\n      player.hand.cards.forEach(c => cards.push(c));\n      player.deck.cards.forEach(c => cards.push(c));\n      player.discard.cards.forEach(c => cards.push(c));\n    }\n    cards.sort(c => c.superType);\n    cards.forEach(c => { state = c.reduceEffect(this, state, effect); });\n    return state;\n  }\n}\n"]}