"use strict";function cov_21o28wf4r0(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/tools-score.ts";var hash="c40e9f3139451d00b169a70f12b483edb9fb286d";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/tools-score.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:28}},"2":{start:{line:4,column:15},end:{line:4,column:36}},"3":{start:{line:5,column:16},end:{line:5,column:34}},"4":{start:{line:8,column:23},end:{line:8,column:54}},"5":{start:{line:9,column:23},end:{line:9,column:48}},"6":{start:{line:10,column:20},end:{line:10,column:21}},"7":{start:{line:11,column:8},end:{line:20,column:11}},"8":{start:{line:12,column:12},end:{line:14,column:13}},"9":{start:{line:13,column:16},end:{line:13,column:23}},"10":{start:{line:15,column:32},end:{line:15,column:78}},"11":{start:{line:16,column:28},end:{line:16,column:71}},"12":{start:{line:17,column:12},end:{line:19,column:13}},"13":{start:{line:18,column:16},end:{line:18,column:47}},"14":{start:{line:21,column:8},end:{line:21,column:21}},"15":{start:{line:24,column:0},end:{line:24,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:7,column:4},end:{line:7,column:5}},loc:{start:{line:7,column:30},end:{line:22,column:5}},line:7},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:63},end:{line:11,column:64}},loc:{start:{line:11,column:83},end:{line:20,column:9}},line:11}},branchMap:{"0":{loc:{start:{line:12,column:12},end:{line:14,column:13}},type:"if",locations:[{start:{line:12,column:12},end:{line:14,column:13}},{start:{line:12,column:12},end:{line:14,column:13}}],line:12},"1":{loc:{start:{line:15,column:32},end:{line:15,column:78}},type:"cond-expr",locations:[{start:{line:15,column:61},end:{line:15,column:74}},{start:{line:15,column:77},end:{line:15,column:78}}],line:15},"2":{loc:{start:{line:17,column:12},end:{line:19,column:13}},type:"if",locations:[{start:{line:17,column:12},end:{line:19,column:13}},{start:{line:17,column:12},end:{line:19,column:13}}],line:17}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/tools-score.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/tools-score.ts"],names:[],mappings:";;;AAAA,qCAA+C;AAC/C,mCAAsC;AAEtC,MAAa,UAAW,SAAQ,mBAAW;IAElC,QAAQ,CAAC,KAAY,EAAE,QAAgB;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QAEzC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,cAAc,CAAC,iBAAU,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;YACjE,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC/B,OAAO;aACR;YACD,MAAM,WAAW,GAAG,QAAQ,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5D,IAAI,WAAW,GAAG,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC5C,KAAK,IAAI,WAAW,GAAG,OAAO,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;AArBD,gCAqBC",sourcesContent:["import { State, PlayerType } from '../../game';\nimport { SimpleScore } from './score';\n\nexport class ToolsScore extends SimpleScore {\n\n  public getScore(state: State, playerId: number): number {\n    const player = this.getPlayer(state, playerId);\n    const scores = this.options.scores.tools;\n    \n    let score = 0;\n    player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, card) => {\n      if (cardList.tool === undefined) {\n        return;\n      }\n      const activeScore = cardList === player.active ? scores.active : 0;\n      const hpScore = (card.hp - cardList.damage) * scores.hpLeft;\n      if (activeScore + hpScore >= scores.minScore) {\n        score += activeScore + hpScore;\n      }\n    });\n\n    return score;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"c40e9f3139451d00b169a70f12b483edb9fb286d"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_21o28wf4r0=function(){return actualCoverage;};}return actualCoverage;}cov_21o28wf4r0();cov_21o28wf4r0().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_21o28wf4r0().s[1]++;exports.ToolsScore=void 0;const game_1=(cov_21o28wf4r0().s[2]++,require("../../game"));const score_1=(cov_21o28wf4r0().s[3]++,require("./score"));class ToolsScore extends(score_1.SimpleScore){getScore(state,playerId){cov_21o28wf4r0().f[0]++;const player=(cov_21o28wf4r0().s[4]++,this.getPlayer(state,playerId));const scores=(cov_21o28wf4r0().s[5]++,this.options.scores.tools);let score=(cov_21o28wf4r0().s[6]++,0);cov_21o28wf4r0().s[7]++;player.forEachPokemon(game_1.PlayerType.BOTTOM_PLAYER,(cardList,card)=>{cov_21o28wf4r0().f[1]++;cov_21o28wf4r0().s[8]++;if(cardList.tool===undefined){cov_21o28wf4r0().b[0][0]++;cov_21o28wf4r0().s[9]++;return;}else{cov_21o28wf4r0().b[0][1]++;}const activeScore=(cov_21o28wf4r0().s[10]++,cardList===player.active?(cov_21o28wf4r0().b[1][0]++,scores.active):(cov_21o28wf4r0().b[1][1]++,0));const hpScore=(cov_21o28wf4r0().s[11]++,(card.hp-cardList.damage)*scores.hpLeft);cov_21o28wf4r0().s[12]++;if(activeScore+hpScore>=scores.minScore){cov_21o28wf4r0().b[2][0]++;cov_21o28wf4r0().s[13]++;score+=activeScore+hpScore;}else{cov_21o28wf4r0().b[2][1]++;}});cov_21o28wf4r0().s[14]++;return score;}}cov_21o28wf4r0().s[15]++;exports.ToolsScore=ToolsScore;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2pvZW15ZXJzY291Z2gvRG9jdW1lbnRzL0dpdEh1Yi9wdGNnLWVwc2QvcHRjZy1zZXJ2ZXIvc3JjL3NpbXBsZS1ib3Qvc3RhdGUtc2NvcmUvdG9vbHMtc2NvcmUudHMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9zaW1wbGUtYm90L3N0YXRlLXNjb3JlL3Rvb2xzLXNjb3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUErQztBQUMvQyxtQ0FBc0M7QUFFdEMsTUFBYSxVQUFXLFNBQVEsbUJBQVc7SUFFbEMsUUFBUSxDQUFDLEtBQVksRUFBRSxRQUFnQjtRQUM1QyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMvQyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFFekMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsTUFBTSxDQUFDLGNBQWMsQ0FBQyxpQkFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsRUFBRTtZQUNqRSxJQUFJLFFBQVEsQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO2dCQUMvQixPQUFPO2FBQ1I7WUFDRCxNQUFNLFdBQVcsR0FBRyxRQUFRLEtBQUssTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25FLE1BQU0sT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUM1RCxJQUFJLFdBQVcsR0FBRyxPQUFPLElBQUksTUFBTSxDQUFDLFFBQVEsRUFBRTtnQkFDNUMsS0FBSyxJQUFJLFdBQVcsR0FBRyxPQUFPLENBQUM7YUFDaEM7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztDQUVGO0FBckJELGdDQXFCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0YXRlLCBQbGF5ZXJUeXBlIH0gZnJvbSAnLi4vLi4vZ2FtZSc7XG5pbXBvcnQgeyBTaW1wbGVTY29yZSB9IGZyb20gJy4vc2NvcmUnO1xuXG5leHBvcnQgY2xhc3MgVG9vbHNTY29yZSBleHRlbmRzIFNpbXBsZVNjb3JlIHtcblxuICBwdWJsaWMgZ2V0U2NvcmUoc3RhdGU6IFN0YXRlLCBwbGF5ZXJJZDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICBjb25zdCBwbGF5ZXIgPSB0aGlzLmdldFBsYXllcihzdGF0ZSwgcGxheWVySWQpO1xuICAgIGNvbnN0IHNjb3JlcyA9IHRoaXMub3B0aW9ucy5zY29yZXMudG9vbHM7XG4gICAgXG4gICAgbGV0IHNjb3JlID0gMDtcbiAgICBwbGF5ZXIuZm9yRWFjaFBva2Vtb24oUGxheWVyVHlwZS5CT1RUT01fUExBWUVSLCAoY2FyZExpc3QsIGNhcmQpID0+IHtcbiAgICAgIGlmIChjYXJkTGlzdC50b29sID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3QgYWN0aXZlU2NvcmUgPSBjYXJkTGlzdCA9PT0gcGxheWVyLmFjdGl2ZSA/IHNjb3Jlcy5hY3RpdmUgOiAwO1xuICAgICAgY29uc3QgaHBTY29yZSA9IChjYXJkLmhwIC0gY2FyZExpc3QuZGFtYWdlKSAqIHNjb3Jlcy5ocExlZnQ7XG4gICAgICBpZiAoYWN0aXZlU2NvcmUgKyBocFNjb3JlID49IHNjb3Jlcy5taW5TY29yZSkge1xuICAgICAgICBzY29yZSArPSBhY3RpdmVTY29yZSArIGhwU2NvcmU7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gc2NvcmU7XG4gIH1cblxufVxuIl19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy9zaW1wbGUtYm90L3N0YXRlLXNjb3JlL3Rvb2xzLXNjb3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI2eUlBZU07OE5BZk4sS0FBQSxDQUFBLE1BQUEsMEJBQUEsT0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBLENBQ0EsS0FBQSxDQUFBLE9BQUEsMEJBQUEsT0FBQSxDQUFBLFNBQUEsQ0FBQSxDQUFBLENBRUEsS0FBYSxDQUFBLFVBQWIsU0FBZ0MsT0FBQSxDQUFBLFdBQWhDLENBQTJDLENBRWxDLFFBQVEsQ0FBQyxLQUFELENBQWUsUUFBZixDQUErQix5QkFDNUMsS0FBTSxDQUFBLE1BQU0sMEJBQUcsS0FBSyxTQUFMLENBQWUsS0FBZixDQUFzQixRQUF0QixDQUFILENBQVosQ0FDQSxLQUFNLENBQUEsTUFBTSwwQkFBRyxLQUFLLE9BQUwsQ0FBYSxNQUFiLENBQW9CLEtBQXZCLENBQVosQ0FFQSxHQUFJLENBQUEsS0FBSywwQkFBRyxDQUFILENBQVQsQ0FKNEMsd0JBSzVDLE1BQU0sQ0FBQyxjQUFQLENBQXNCLE1BQUEsQ0FBQSxVQUFBLENBQVcsYUFBakMsQ0FBZ0QsQ0FBQyxRQUFELENBQVcsSUFBWCxHQUFtQixpREFDakUsR0FBSSxRQUFRLENBQUMsSUFBVCxHQUFrQixTQUF0QixDQUFpQyxvREFDL0IsT0FDRCxDQUZELGlDQUdBLEtBQU0sQ0FBQSxXQUFXLDJCQUFHLFFBQVEsR0FBSyxNQUFNLENBQUMsTUFBcEIsNkJBQTZCLE1BQU0sQ0FBQyxNQUFwQyw4QkFBNkMsQ0FBN0MsQ0FBSCxDQUFqQixDQUNBLEtBQU0sQ0FBQSxPQUFPLDJCQUFHLENBQUMsSUFBSSxDQUFDLEVBQUwsQ0FBVSxRQUFRLENBQUMsTUFBcEIsRUFBOEIsTUFBTSxDQUFDLE1BQXhDLENBQWIsQ0FMaUUseUJBTWpFLEdBQUksV0FBVyxDQUFHLE9BQWQsRUFBeUIsTUFBTSxDQUFDLFFBQXBDLENBQThDLHFEQUM1QyxLQUFLLEVBQUksV0FBVyxDQUFHLE9BQXZCLENBQ0QsQ0FGRCxpQ0FHRCxDQVRELEVBTDRDLHlCQWdCNUMsTUFBTyxDQUFBLEtBQVAsQ0FDRCxDQW5Cd0MsQyx5QkFBM0MsT0FBQSxDQUFBLFVBQUEsQ0FBQSxVQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGF0ZSwgUGxheWVyVHlwZSB9IGZyb20gJy4uLy4uL2dhbWUnO1xuaW1wb3J0IHsgU2ltcGxlU2NvcmUgfSBmcm9tICcuL3Njb3JlJztcblxuZXhwb3J0IGNsYXNzIFRvb2xzU2NvcmUgZXh0ZW5kcyBTaW1wbGVTY29yZSB7XG5cbiAgcHVibGljIGdldFNjb3JlKHN0YXRlOiBTdGF0ZSwgcGxheWVySWQ6IG51bWJlcik6IG51bWJlciB7XG4gICAgY29uc3QgcGxheWVyID0gdGhpcy5nZXRQbGF5ZXIoc3RhdGUsIHBsYXllcklkKTtcbiAgICBjb25zdCBzY29yZXMgPSB0aGlzLm9wdGlvbnMuc2NvcmVzLnRvb2xzO1xuICAgIFxuICAgIGxldCBzY29yZSA9IDA7XG4gICAgcGxheWVyLmZvckVhY2hQb2tlbW9uKFBsYXllclR5cGUuQk9UVE9NX1BMQVlFUiwgKGNhcmRMaXN0LCBjYXJkKSA9PiB7XG4gICAgICBpZiAoY2FyZExpc3QudG9vbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGFjdGl2ZVNjb3JlID0gY2FyZExpc3QgPT09IHBsYXllci5hY3RpdmUgPyBzY29yZXMuYWN0aXZlIDogMDtcbiAgICAgIGNvbnN0IGhwU2NvcmUgPSAoY2FyZC5ocCAtIGNhcmRMaXN0LmRhbWFnZSkgKiBzY29yZXMuaHBMZWZ0O1xuICAgICAgaWYgKGFjdGl2ZVNjb3JlICsgaHBTY29yZSA+PSBzY29yZXMubWluU2NvcmUpIHtcbiAgICAgICAgc2NvcmUgKz0gYWN0aXZlU2NvcmUgKyBocFNjb3JlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHNjb3JlO1xuICB9XG5cbn1cbiJdfQ==