"use strict";function cov_1rata3vxht(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/utils/base64.ts";var hash="6945f07119d6705ae8f916c4c0c74445bab71dd9";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/utils/base64.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:24}},"2":{start:{line:6,column:8},end:{line:6,column:27}},"3":{start:{line:7,column:8},end:{line:7,column:88}},"4":{start:{line:10,column:20},end:{line:10,column:51}},"5":{start:{line:11,column:8},end:{line:13,column:9}},"6":{start:{line:12,column:12},end:{line:12,column:52}},"7":{start:{line:14,column:8},end:{line:14,column:19}},"8":{start:{line:18,column:8},end:{line:18,column:22}},"9":{start:{line:19,column:19},end:{line:19,column:20}},"10":{start:{line:20,column:19},end:{line:20,column:27}},"11":{start:{line:21,column:8},end:{line:23,column:9}},"12":{start:{line:22,column:12},end:{line:22,column:21}},"13":{start:{line:24,column:8},end:{line:26,column:9}},"14":{start:{line:25,column:12},end:{line:25,column:52}},"15":{start:{line:27,column:8},end:{line:34,column:9}},"16":{start:{line:28,column:12},end:{line:28,column:21}},"17":{start:{line:29,column:12},end:{line:31,column:13}},"18":{start:{line:30,column:16},end:{line:30,column:25}},"19":{start:{line:33,column:12},end:{line:33,column:22}},"20":{start:{line:35,column:18},end:{line:35,column:20}},"21":{start:{line:38,column:8},end:{line:42,column:9}},"22":{start:{line:39,column:12},end:{line:40,column:75}},"23":{start:{line:41,column:12},end:{line:41,column:82}},"24":{start:{line:43,column:8},end:{line:54,column:9}},"25":{start:{line:45,column:16},end:{line:46,column:52}},"26":{start:{line:47,column:16},end:{line:47,column:74}},"27":{start:{line:48,column:16},end:{line:48,column:22}},"28":{start:{line:50,column:16},end:{line:50,column:86}},"29":{start:{line:51,column:16},end:{line:51,column:55}},"30":{start:{line:52,column:16},end:{line:52,column:22}},"31":{start:{line:55,column:8},end:{line:55,column:26}},"32":{start:{line:58,column:18},end:{line:58,column:33}},"33":{start:{line:59,column:8},end:{line:61,column:9}},"34":{start:{line:60,column:12},end:{line:60,column:70}},"35":{start:{line:62,column:8},end:{line:62,column:17}},"36":{start:{line:65,column:8},end:{line:65,column:22}},"37":{start:{line:66,column:21},end:{line:66,column:44}},"38":{start:{line:67,column:8},end:{line:69,column:9}},"39":{start:{line:68,column:12},end:{line:68,column:21}},"40":{start:{line:70,column:18},end:{line:70,column:20}},"41":{start:{line:73,column:8},end:{line:79,column:9}},"42":{start:{line:74,column:12},end:{line:74,column:102}},"43":{start:{line:75,column:12},end:{line:75,column:49}},"44":{start:{line:76,column:12},end:{line:76,column:58}},"45":{start:{line:77,column:12},end:{line:77,column:57}},"46":{start:{line:78,column:12},end:{line:78,column:50}},"47":{start:{line:80,column:8},end:{line:92,column:9}},"48":{start:{line:82,column:16},end:{line:82,column:47}},"49":{start:{line:83,column:16},end:{line:84,column:49}},"50":{start:{line:85,column:16},end:{line:85,column:22}},"51":{start:{line:87,column:16},end:{line:87,column:81}},"52":{start:{line:88,column:16},end:{line:89,column:73}},"53":{start:{line:90,column:16},end:{line:90,column:22}},"54":{start:{line:93,column:8},end:{line:93,column:26}},"55":{start:{line:96,column:0},end:{line:96,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:18},end:{line:8,column:5}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:4},end:{line:9,column:5}},loc:{start:{line:9,column:20},end:{line:15,column:5}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:4},end:{line:16,column:5}},loc:{start:{line:16,column:14},end:{line:56,column:5}},line:16},"3":{name:"(anonymous_3)",decl:{start:{line:57,column:4},end:{line:57,column:5}},loc:{start:{line:57,column:18},end:{line:63,column:5}},line:57},"4":{name:"(anonymous_4)",decl:{start:{line:64,column:4},end:{line:64,column:5}},loc:{start:{line:64,column:14},end:{line:94,column:5}},line:64}},branchMap:{"0":{loc:{start:{line:11,column:8},end:{line:13,column:9}},type:"if",locations:[{start:{line:11,column:8},end:{line:13,column:9}},{start:{line:11,column:8},end:{line:13,column:9}}],line:11},"1":{loc:{start:{line:21,column:8},end:{line:23,column:9}},type:"if",locations:[{start:{line:21,column:8},end:{line:23,column:9}},{start:{line:21,column:8},end:{line:23,column:9}}],line:21},"2":{loc:{start:{line:24,column:8},end:{line:26,column:9}},type:"if",locations:[{start:{line:24,column:8},end:{line:26,column:9}},{start:{line:24,column:8},end:{line:26,column:9}}],line:24},"3":{loc:{start:{line:27,column:8},end:{line:34,column:9}},type:"if",locations:[{start:{line:27,column:8},end:{line:34,column:9}},{start:{line:27,column:8},end:{line:34,column:9}}],line:27},"4":{loc:{start:{line:29,column:12},end:{line:31,column:13}},type:"if",locations:[{start:{line:29,column:12},end:{line:31,column:13}},{start:{line:29,column:12},end:{line:31,column:13}}],line:29},"5":{loc:{start:{line:43,column:8},end:{line:54,column:9}},type:"switch",locations:[{start:{line:44,column:12},end:{line:48,column:22}},{start:{line:49,column:12},end:{line:52,column:22}},{start:{line:53,column:12},end:{line:53,column:20}}],line:43},"6":{loc:{start:{line:59,column:8},end:{line:61,column:9}},type:"if",locations:[{start:{line:59,column:8},end:{line:61,column:9}},{start:{line:59,column:8},end:{line:61,column:9}}],line:59},"7":{loc:{start:{line:67,column:8},end:{line:69,column:9}},type:"if",locations:[{start:{line:67,column:8},end:{line:69,column:9}},{start:{line:67,column:8},end:{line:69,column:9}}],line:67},"8":{loc:{start:{line:80,column:8},end:{line:92,column:9}},type:"switch",locations:[{start:{line:81,column:12},end:{line:85,column:22}},{start:{line:86,column:12},end:{line:90,column:22}},{start:{line:91,column:12},end:{line:91,column:20}}],line:80}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/utils/base64.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/utils/base64.ts"],names:[],mappings:"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",sourcesContent:["export class Base64 {\n\n  private readonly padchar: string = '=';\n  private readonly alpha: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n  private getByte64(s: string, i: number): number {\n    const idx = this.alpha.indexOf(s.charAt(i));\n    if (idx === -1) {\n      throw new Error('Cannot decode base64');\n    }\n    return idx;\n  }\n\n  public decode(s: string): string {\n    // convert to string\n    s = String(s);\n\n    let pads = 0;\n    let imax = s.length;\n\n    if (imax === 0) {\n      return s;\n    }\n\n    if (imax % 4 !== 0) {\n      throw new Error('Cannot decode base64');\n    }\n\n    if (s.charAt(imax - 1) === this.padchar) {\n      pads = 1;\n      if (s.charAt(imax - 2) === this.padchar) {\n        pads = 2;\n      }\n      // either way, we want to ignore this last block\n      imax -= 4;\n    }\n\n    const x: string[] = [];\n    let b10: number;\n    let i: number;\n\n    for (i = 0; i < imax; i += 4) {\n      b10 = (this.getByte64(s, i) << 18) | (this.getByte64(s, i + 1) << 12) |\n        (this.getByte64(s, i + 2) << 6) | this.getByte64(s, i + 3);\n      x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff, b10 & 0xff));\n    }\n\n    switch (pads) {\n      case 1:\n        b10 = (this.getByte64(s, i) << 18) | (this.getByte64(s, i + 1) << 12) |\n          (this.getByte64(s, i + 2) << 6);\n        x.push(String.fromCharCode(b10 >> 16, (b10 >> 8) & 0xff));\n        break;\n      case 2:\n        b10 = (this.getByte64(s, i) << 18) | (this.getByte64(s, i + 1) << 12);\n        x.push(String.fromCharCode(b10 >> 16));\n        break;\n      default:\n    }\n    return x.join('');\n  }\n\n  private getByte(s: string, i: number): number {\n    const x: number = s.charCodeAt(i);\n    if (x > 255) {\n      throw new Error('INVALID_CHARACTER_ERR: DOM Exception 5');\n    }\n    return x;\n  }\n\n  public encode(s: string): string {\n    s = String(s);\n\n    const imax = s.length - s.length % 3;\n    if (s.length === 0) {\n      return s;\n    }\n\n    const x: string[] = [];\n    let b10: number;\n    let i: number;\n\n    for (i = 0; i < imax; i += 3) {\n      b10 = (this.getByte(s, i) << 16) | (this.getByte(s, i + 1) << 8) | this.getByte(s, i + 2);\n      x.push(this.alpha.charAt(b10 >> 18));\n      x.push(this.alpha.charAt((b10 >> 12) & 0x3F));\n      x.push(this.alpha.charAt((b10 >> 6) & 0x3f));\n      x.push(this.alpha.charAt(b10 & 0x3f));\n    }\n\n    switch (s.length - imax) {\n      case 1:\n        b10 = this.getByte(s, i) << 16;\n        x.push(this.alpha.charAt(b10 >> 18) + this.alpha.charAt((b10 >> 12) & 0x3F) +\n          this.padchar + this.padchar);\n        break;\n      case 2:\n        b10 = (this.getByte(s, i) << 16) | (this.getByte(s, i + 1) << 8);\n        x.push(this.alpha.charAt(b10 >> 18) + this.alpha.charAt((b10 >> 12) & 0x3F) +\n          this.alpha.charAt((b10 >> 6) & 0x3f) + this.padchar);\n        break;\n      default:\n    }\n    return x.join('');\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6945f07119d6705ae8f916c4c0c74445bab71dd9"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1rata3vxht=function(){return actualCoverage;};}return actualCoverage;}cov_1rata3vxht();cov_1rata3vxht().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1rata3vxht().s[1]++;exports.Base64=void 0;class Base64{constructor(){cov_1rata3vxht().f[0]++;cov_1rata3vxht().s[2]++;this.padchar='=';cov_1rata3vxht().s[3]++;this.alpha='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';}getByte64(s,i){cov_1rata3vxht().f[1]++;const idx=(cov_1rata3vxht().s[4]++,this.alpha.indexOf(s.charAt(i)));cov_1rata3vxht().s[5]++;if(idx===-1){cov_1rata3vxht().b[0][0]++;cov_1rata3vxht().s[6]++;throw new Error('Cannot decode base64');}else{cov_1rata3vxht().b[0][1]++;}cov_1rata3vxht().s[7]++;return idx;}decode(s){cov_1rata3vxht().f[2]++;cov_1rata3vxht().s[8]++;// convert to string
s=String(s);let pads=(cov_1rata3vxht().s[9]++,0);let imax=(cov_1rata3vxht().s[10]++,s.length);cov_1rata3vxht().s[11]++;if(imax===0){cov_1rata3vxht().b[1][0]++;cov_1rata3vxht().s[12]++;return s;}else{cov_1rata3vxht().b[1][1]++;}cov_1rata3vxht().s[13]++;if(imax%4!==0){cov_1rata3vxht().b[2][0]++;cov_1rata3vxht().s[14]++;throw new Error('Cannot decode base64');}else{cov_1rata3vxht().b[2][1]++;}cov_1rata3vxht().s[15]++;if(s.charAt(imax-1)===this.padchar){cov_1rata3vxht().b[3][0]++;cov_1rata3vxht().s[16]++;pads=1;cov_1rata3vxht().s[17]++;if(s.charAt(imax-2)===this.padchar){cov_1rata3vxht().b[4][0]++;cov_1rata3vxht().s[18]++;pads=2;}else{cov_1rata3vxht().b[4][1]++;}// either way, we want to ignore this last block
cov_1rata3vxht().s[19]++;imax-=4;}else{cov_1rata3vxht().b[3][1]++;}const x=(cov_1rata3vxht().s[20]++,[]);let b10;let i;cov_1rata3vxht().s[21]++;for(i=0;i<imax;i+=4){cov_1rata3vxht().s[22]++;b10=this.getByte64(s,i)<<18|this.getByte64(s,i+1)<<12|this.getByte64(s,i+2)<<6|this.getByte64(s,i+3);cov_1rata3vxht().s[23]++;x.push(String.fromCharCode(b10>>16,b10>>8&0xff,b10&0xff));}cov_1rata3vxht().s[24]++;switch(pads){case 1:cov_1rata3vxht().b[5][0]++;cov_1rata3vxht().s[25]++;b10=this.getByte64(s,i)<<18|this.getByte64(s,i+1)<<12|this.getByte64(s,i+2)<<6;cov_1rata3vxht().s[26]++;x.push(String.fromCharCode(b10>>16,b10>>8&0xff));cov_1rata3vxht().s[27]++;break;case 2:cov_1rata3vxht().b[5][1]++;cov_1rata3vxht().s[28]++;b10=this.getByte64(s,i)<<18|this.getByte64(s,i+1)<<12;cov_1rata3vxht().s[29]++;x.push(String.fromCharCode(b10>>16));cov_1rata3vxht().s[30]++;break;default:cov_1rata3vxht().b[5][2]++;}cov_1rata3vxht().s[31]++;return x.join('');}getByte(s,i){cov_1rata3vxht().f[3]++;const x=(cov_1rata3vxht().s[32]++,s.charCodeAt(i));cov_1rata3vxht().s[33]++;if(x>255){cov_1rata3vxht().b[6][0]++;cov_1rata3vxht().s[34]++;throw new Error('INVALID_CHARACTER_ERR: DOM Exception 5');}else{cov_1rata3vxht().b[6][1]++;}cov_1rata3vxht().s[35]++;return x;}encode(s){cov_1rata3vxht().f[4]++;cov_1rata3vxht().s[36]++;s=String(s);const imax=(cov_1rata3vxht().s[37]++,s.length-s.length%3);cov_1rata3vxht().s[38]++;if(s.length===0){cov_1rata3vxht().b[7][0]++;cov_1rata3vxht().s[39]++;return s;}else{cov_1rata3vxht().b[7][1]++;}const x=(cov_1rata3vxht().s[40]++,[]);let b10;let i;cov_1rata3vxht().s[41]++;for(i=0;i<imax;i+=3){cov_1rata3vxht().s[42]++;b10=this.getByte(s,i)<<16|this.getByte(s,i+1)<<8|this.getByte(s,i+2);cov_1rata3vxht().s[43]++;x.push(this.alpha.charAt(b10>>18));cov_1rata3vxht().s[44]++;x.push(this.alpha.charAt(b10>>12&0x3F));cov_1rata3vxht().s[45]++;x.push(this.alpha.charAt(b10>>6&0x3f));cov_1rata3vxht().s[46]++;x.push(this.alpha.charAt(b10&0x3f));}cov_1rata3vxht().s[47]++;switch(s.length-imax){case 1:cov_1rata3vxht().b[8][0]++;cov_1rata3vxht().s[48]++;b10=this.getByte(s,i)<<16;cov_1rata3vxht().s[49]++;x.push(this.alpha.charAt(b10>>18)+this.alpha.charAt(b10>>12&0x3F)+this.padchar+this.padchar);cov_1rata3vxht().s[50]++;break;case 2:cov_1rata3vxht().b[8][1]++;cov_1rata3vxht().s[51]++;b10=this.getByte(s,i)<<16|this.getByte(s,i+1)<<8;cov_1rata3vxht().s[52]++;x.push(this.alpha.charAt(b10>>18)+this.alpha.charAt(b10>>12&0x3F)+this.alpha.charAt(b10>>6&0x3f)+this.padchar);cov_1rata3vxht().s[53]++;break;default:cov_1rata3vxht().b[8][2]++;}cov_1rata3vxht().s[54]++;return x.join('');}}cov_1rata3vxht().s[55]++;exports.Base64=Base64;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VteWVyc2NvdWdoL0RvY3VtZW50cy9HaXRIdWIvcHRjZy1lcHNkL3B0Y2ctc2VydmVyL3NyYy91dGlscy9iYXNlNjQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjA4YkFheUI7ME5BYnpCLEtBQWEsQ0FBQSxNQUFNLENBQW5CLFdBQUEsRUFBQSxpREFFbUIsS0FBQSxPQUFBLENBQWtCLEdBQWxCLENBRm5CLHdCQUdtQixLQUFBLEtBQUEsQ0FBZ0Isa0VBQWhCLENBc0dsQixDQXBHUyxTQUFTLENBQUMsQ0FBRCxDQUFZLENBQVosQ0FBcUIseUJBQ3BDLEtBQU0sQ0FBQSxHQUFHLDBCQUFHLEtBQUssS0FBTCxDQUFXLE9BQVgsQ0FBbUIsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxDQUFULENBQW5CLENBQUgsQ0FBVCxDQURvQyx3QkFFcEMsR0FBSSxHQUFHLEdBQUssQ0FBQyxDQUFiLENBQWdCLG9EQUNkLEtBQU0sSUFBSSxDQUFBLEtBQUosQ0FBVSxzQkFBVixDQUFOLENBQ0QsQ0FGRCxpQ0FGb0Msd0JBS3BDLE1BQU8sQ0FBQSxHQUFQLENBQ0QsQ0FFTSxNQUFNLENBQUMsQ0FBRCxDQUFVLGlEQUNyQjtBQUNBLENBQUMsQ0FBRyxNQUFNLENBQUMsQ0FBRCxDQUFWLENBRUEsR0FBSSxDQUFBLElBQUksMEJBQUcsQ0FBSCxDQUFSLENBQ0EsR0FBSSxDQUFBLElBQUksMkJBQUcsQ0FBQyxDQUFDLE1BQUwsQ0FBUixDQUxxQix5QkFPckIsR0FBSSxJQUFJLEdBQUssQ0FBYixDQUFnQixxREFDZCxNQUFPLENBQUEsQ0FBUCxDQUNELENBRkQsaUNBUHFCLHlCQVdyQixHQUFJLElBQUksQ0FBRyxDQUFQLEdBQWEsQ0FBakIsQ0FBb0IscURBQ2xCLEtBQU0sSUFBSSxDQUFBLEtBQUosQ0FBVSxzQkFBVixDQUFOLENBQ0QsQ0FGRCxpQ0FYcUIseUJBZXJCLEdBQUksQ0FBQyxDQUFDLE1BQUYsQ0FBUyxJQUFJLENBQUcsQ0FBaEIsSUFBdUIsS0FBSyxP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QUFSLENBQWMsSUFBaEMsQ0FBL0IsQ0FDTCxLQUFLLE9BREEsQ0FDVSxLQUFLLE9BRHRCLEVBRkYseUJBSUUsTUFDRixJQUFLLEVBQUwscURBQ0UsR0FBRyxDQUFJLEtBQUssT0FBTCxDQUFhLENBQWIsQ0FBZ0IsQ0FBaEIsR0FBc0IsRUFBdkIsQ0FBOEIsS0FBSyxPQUFMLENBQWEsQ0FBYixDQUFnQixDQUFDLENBQUcsQ0FBcEIsR0FBMEIsQ0FBOUQsQ0FERix5QkFFRSxDQUFDLENBQUMsSUFBRixDQUFPLEtBQUssS0FBTCxDQUFXLE1BQVgsQ0FBa0IsR0FBRyxFQUFJLEVBQXpCLEVBQStCLEtBQUssS0FBTCxDQUFXLE1BQVgsQ0FBbUIsR0FBRyxFQUFJLEVBQVIsQ0FBYyxJQUFoQyxDQUEvQixDQUNMLEtBQUssS0FBTCxDQUFXLE1BQVgsQ0FBbUIsR0FBRyxFQUFJLENBQVIsQ0FBYSxJQUEvQixDQURLLENBQ2tDLEtBQUssT0FEOUMsRUFGRix5QkFJRSxNQUNGLG1DQVhGLENBcEJxQix5QkFpQ3JCLE1BQU8sQ0FBQSxDQUFDLENBQUMsSUFBRixDQUFPLEVBQVAsQ0FBUCxDQUNELENBeEdnQixDLHlCQUFuQixPQUFBLENBQUEsTUFBQSxDQUFBLE1BQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBCYXNlNjQge1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgcGFkY2hhcjogc3RyaW5nID0gJz0nO1xuICBwcml2YXRlIHJlYWRvbmx5IGFscGhhOiBzdHJpbmcgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLyc7XG5cbiAgcHJpdmF0ZSBnZXRCeXRlNjQoczogc3RyaW5nLCBpOiBudW1iZXIpOiBudW1iZXIge1xuICAgIGNvbnN0IGlkeCA9IHRoaXMuYWxwaGEuaW5kZXhPZihzLmNoYXJBdChpKSk7XG4gICAgaWYgKGlkeCA9PT0gLTEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGRlY29kZSBiYXNlNjQnKTtcbiAgICB9XG4gICAgcmV0dXJuIGlkeDtcbiAgfVxuXG4gIHB1YmxpYyBkZWNvZGUoczogc3RyaW5nKTogc3RyaW5nIHtcbiAgICAvLyBjb252ZXJ0IHRvIHN0cmluZ1xuICAgIHMgPSBTdHJpbmcocyk7XG5cbiAgICBsZXQgcGFkcyA9IDA7XG4gICAgbGV0IGltYXggPSBzLmxlbmd0aDtcblxuICAgIGlmIChpbWF4ID09PSAwKSB7XG4gICAgICByZXR1cm4gcztcbiAgICB9XG5cbiAgICBpZiAoaW1heCAlIDQgIT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGRlY29kZSBiYXNlNjQnKTtcbiAgICB9XG5cbiAgICBpZiAocy5jaGFyQXQoaW1heCAtIDEpID09PSB0aGlzLnBhZGNoYXIpIHtcbiAgICAgIHBhZHMgPSAxO1xuICAgICAgaWYgKHMuY2hhckF0KGltYXggLSAyKSA9PT0gdGhpcy5wYWRjaGFyKSB7XG4gICAgICAgIHBhZHMgPSAyO1xuICAgICAgfVxuICAgICAgLy8gZWl0aGVyIHdheSwgd2Ugd2FudCB0byBpZ25vcmUgdGhpcyBsYXN0IGJsb2NrXG4gICAgICBpbWF4IC09IDQ7XG4gICAgfVxuXG4gICAgY29uc3QgeDogc3RyaW5nW10gPSBbXTtcbiAgICBsZXQgYjEwOiBudW1iZXI7XG4gICAgbGV0IGk6IG51bWJlcjtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBpbWF4OyBpICs9IDQpIHtcbiAgICAgIGIxMCA9ICh0aGlzLmdldEJ5dGU2NChzLCBpKSA8PCAxOCkgfCAodGhpcy5nZXRCeXRlNjQocywgaSArIDEpIDw8IDEyKSB8XG4gICAgICAgICh0aGlzLmdldEJ5dGU2NChzLCBpICsgMikgPDwgNikgfCB0aGlzLmdldEJ5dGU2NChzLCBpICsgMyk7XG4gICAgICB4LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShiMTAgPj4gMTYsIChiMTAgPj4gOCkgJiAweGZmLCBiMTAgJiAweGZmKSk7XG4gICAgfVxuXG4gICAgc3dpdGNoIChwYWRzKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIGIxMCA9ICh0aGlzLmdldEJ5dGU2NChzLCBpKSA8PCAxOCkgfCAodGhpcy5nZXRCeXRlNjQocywgaSArIDEpIDw8IDEyKSB8XG4gICAgICAgICAgKHRoaXMuZ2V0Qnl0ZTY0KHMsIGkgKyAyKSA8PCA2KTtcbiAgICAgICAgeC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoYjEwID4+IDE2LCAoYjEwID4+IDgpICYgMHhmZikpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgMjpcbiAgICAgICAgYjEwID0gKHRoaXMuZ2V0Qnl0ZTY0KHMsIGkpIDw8IDE4KSB8ICh0aGlzLmdldEJ5dGU2NChzLCBpICsgMSkgPDwgMTIpO1xuICAgICAgICB4LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShiMTAgPj4gMTYpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgIH1cbiAgICByZXR1cm4geC5qb2luKCcnKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0Qnl0ZShzOiBzdHJpbmcsIGk6IG51bWJlcik6IG51bWJlciB7XG4gICAgY29uc3QgeDogbnVtYmVyID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIGlmICh4ID4gMjU1KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0lOVkFMSURfQ0hBUkFDVEVSX0VSUjogRE9NIEV4Y2VwdGlvbiA1Jyk7XG4gICAgfVxuICAgIHJldHVybiB4O1xuICB9XG5cbiAgcHVibGljIGVuY29kZShzOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHMgPSBTdHJpbmcocyk7XG5cbiAgICBjb25zdCBpbWF4ID0gcy5sZW5ndGggLSBzLmxlbmd0aCAlIDM7XG4gICAgaWYgKHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gcztcbiAgICB9XG5cbiAgICBjb25zdCB4OiBzdHJpbmdbXSA9IFtdO1xuICAgIGxldCBiMTA6IG51bWJlcjtcbiAgICBsZXQgaTogbnVtYmVyO1xuXG4gICAgZm9yIChpID0gMDsgaSA8IGltYXg7IGkgKz0gMykge1xuICAgICAgYjEwID0gKHRoaXMuZ2V0Qnl0ZShzLCBpKSA8PCAxNikgfCAodGhpcy5nZXRCeXRlKHMsIGkgKyAxKSA8PCA4KSB8IHRoaXMuZ2V0Qnl0ZShzLCBpICsgMik7XG4gICAgICB4LnB1c2godGhpcy5hbHBoYS5jaGFyQXQoYjEwID4+IDE4KSk7XG4gICAgICB4LnB1c2godGhpcy5hbHBoYS5jaGFyQXQoKGIxMCA+PiAxMikgJiAweDNGKSk7XG4gICAgICB4LnB1c2godGhpcy5hbHBoYS5jaGFyQXQoKGIxMCA+PiA2KSAmIDB4M2YpKTtcbiAgICAgIHgucHVzaCh0aGlzLmFscGhhLmNoYXJBdChiMTAgJiAweDNmKSk7XG4gICAgfVxuXG4gICAgc3dpdGNoIChzLmxlbmd0aCAtIGltYXgpIHtcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgYjEwID0gdGhpcy5nZXRCeXRlKHMsIGkpIDw8IDE2O1xuICAgICAgICB4LnB1c2godGhpcy5hbHBoYS5jaGFyQXQoYjEwID4+IDE4KSArIHRoaXMuYWxwaGEuY2hhckF0KChiMTAgPj4gMTIpICYgMHgzRikgK1xuICAgICAgICAgIHRoaXMucGFkY2hhciArIHRoaXMucGFkY2hhcik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAyOlxuICAgICAgICBiMTAgPSAodGhpcy5nZXRCeXRlKHMsIGkpIDw8IDE2KSB8ICh0aGlzLmdldEJ5dGUocywgaSArIDEpIDw8IDgpO1xuICAgICAgICB4LnB1c2godGhpcy5hbHBoYS5jaGFyQXQoYjEwID4+IDE4KSArIHRoaXMuYWxwaGEuY2hhckF0KChiMTAgPj4gMTIpICYgMHgzRikgK1xuICAgICAgICAgIHRoaXMuYWxwaGEuY2hhckF0KChiMTAgPj4gNikgJiAweDNmKSArIHRoaXMucGFkY2hhcik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICB9XG4gICAgcmV0dXJuIHguam9pbignJyk7XG4gIH1cbn1cbiJdfQ==