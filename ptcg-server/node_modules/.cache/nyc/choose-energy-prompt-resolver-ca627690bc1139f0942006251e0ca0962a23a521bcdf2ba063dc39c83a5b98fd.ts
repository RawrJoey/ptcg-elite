"use strict";function cov_2n9sdlajwz(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/choose-energy-prompt-resolver.ts";var hash="af95de028e803a84b1d7331c351e5320c645e8ba";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/choose-energy-prompt-resolver.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:44}},"2":{start:{line:4,column:15},end:{line:4,column:36}},"3":{start:{line:5,column:26},end:{line:5,column:54}},"4":{start:{line:6,column:31},end:{line:6,column:87}},"5":{start:{line:9,column:8},end:{line:73,column:9}},"6":{start:{line:10,column:25},end:{line:10,column:27}},"7":{start:{line:11,column:29},end:{line:11,column:50}},"8":{start:{line:12,column:26},end:{line:12,column:82}},"9":{start:{line:12,column:50},end:{line:12,column:81}},"10":{start:{line:13,column:12},end:{line:37,column:13}},"11":{start:{line:14,column:29},end:{line:14,column:37}},"12":{start:{line:15,column:28},end:{line:15,column:78}},"13":{start:{line:15,column:52},end:{line:15,column:77}},"14":{start:{line:16,column:16},end:{line:19,column:17}},"15":{start:{line:18,column:20},end:{line:18,column:94}},"16":{start:{line:18,column:52},end:{line:18,column:92}},"17":{start:{line:20,column:16},end:{line:22,column:17}},"18":{start:{line:21,column:20},end:{line:21,column:26}},"19":{start:{line:23,column:32},end:{line:23,column:47}},"20":{start:{line:24,column:16},end:{line:24,column:42}},"21":{start:{line:25,column:16},end:{line:25,column:37}},"22":{start:{line:26,column:16},end:{line:36,column:19}},"23":{start:{line:27,column:20},end:{line:35,column:21}},"24":{start:{line:28,column:24},end:{line:28,column:38}},"25":{start:{line:31,column:34},end:{line:31,column:50}},"26":{start:{line:32,column:24},end:{line:34,column:25}},"27":{start:{line:33,column:28},end:{line:33,column:47}},"28":{start:{line:38,column:12},end:{line:41,column:13}},"29":{start:{line:40,column:16},end:{line:40,column:71}},"30":{start:{line:45,column:12},end:{line:49,column:15}},"31":{start:{line:46,column:31},end:{line:46,column:67}},"32":{start:{line:47,column:31},end:{line:47,column:67}},"33":{start:{line:48,column:16},end:{line:48,column:39}},"34":{start:{line:51,column:12},end:{line:56,column:13}},"35":{start:{line:52,column:32},end:{line:52,column:48}},"36":{start:{line:53,column:16},end:{line:55,column:17}},"37":{start:{line:54,column:20},end:{line:54,column:41}},"38":{start:{line:58,column:28},end:{line:58,column:32}},"39":{start:{line:59,column:12},end:{line:71,column:13}},"40":{start:{line:60,column:16},end:{line:60,column:34}},"41":{start:{line:61,column:16},end:{line:70,column:17}},"42":{start:{line:61,column:29},end:{line:61,column:30}},"43":{start:{line:62,column:38},end:{line:62,column:52}},"44":{start:{line:63,column:20},end:{line:63,column:43}},"45":{start:{line:64,column:35},end:{line:64,column:94}},"46":{start:{line:65,column:20},end:{line:69,column:21}},"47":{start:{line:66,column:24},end:{line:66,column:43}},"48":{start:{line:67,column:24},end:{line:67,column:41}},"49":{start:{line:68,column:24},end:{line:68,column:30}},"50":{start:{line:72,column:12},end:{line:72,column:69}},"51":{start:{line:76,column:20},end:{line:76,column:21}},"52":{start:{line:77,column:8},end:{line:87,column:11}},"53":{start:{line:78,column:12},end:{line:86,column:13}},"54":{start:{line:79,column:16},end:{line:79,column:27}},"55":{start:{line:81,column:17},end:{line:86,column:13}},"56":{start:{line:82,column:16},end:{line:82,column:28}},"57":{start:{line:85,column:16},end:{line:85,column:27}},"58":{start:{line:88,column:8},end:{line:88,column:21}},"59":{start:{line:91,column:0},end:{line:91,column:64}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:41},end:{line:74,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:45},end:{line:12,column:46}},loc:{start:{line:12,column:50},end:{line:12,column:81}},line:12},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:47},end:{line:15,column:48}},loc:{start:{line:15,column:52},end:{line:15,column:77}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:18,column:47},end:{line:18,column:48}},loc:{start:{line:18,column:52},end:{line:18,column:92}},line:18},"4":{name:"(anonymous_4)",decl:{start:{line:26,column:41},end:{line:26,column:42}},loc:{start:{line:26,column:46},end:{line:36,column:17}},line:26},"5":{name:"(anonymous_5)",decl:{start:{line:45,column:26},end:{line:45,column:27}},loc:{start:{line:45,column:38},end:{line:49,column:13}},line:45},"6":{name:"(anonymous_6)",decl:{start:{line:75,column:4},end:{line:75,column:5}},loc:{start:{line:75,column:33},end:{line:89,column:5}},line:75},"7":{name:"(anonymous_7)",decl:{start:{line:77,column:25},end:{line:77,column:26}},loc:{start:{line:77,column:30},end:{line:87,column:9}},line:77}},branchMap:{"0":{loc:{start:{line:9,column:8},end:{line:73,column:9}},type:"if",locations:[{start:{line:9,column:8},end:{line:73,column:9}},{start:{line:9,column:8},end:{line:73,column:9}}],line:9},"1":{loc:{start:{line:13,column:19},end:{line:13,column:58}},type:"binary-expr",locations:[{start:{line:13,column:19},end:{line:13,column:35}},{start:{line:13,column:39},end:{line:13,column:58}}],line:13},"2":{loc:{start:{line:16,column:16},end:{line:19,column:17}},type:"if",locations:[{start:{line:16,column:16},end:{line:19,column:17}},{start:{line:16,column:16},end:{line:19,column:17}}],line:16},"3":{loc:{start:{line:20,column:16},end:{line:22,column:17}},type:"if",locations:[{start:{line:20,column:16},end:{line:22,column:17}},{start:{line:20,column:16},end:{line:22,column:17}}],line:20},"4":{loc:{start:{line:27,column:20},end:{line:35,column:21}},type:"if",locations:[{start:{line:27,column:20},end:{line:35,column:21}},{start:{line:27,column:20},end:{line:35,column:21}}],line:27},"5":{loc:{start:{line:27,column:24},end:{line:27,column:69}},type:"binary-expr",locations:[{start:{line:27,column:24},end:{line:27,column:49}},{start:{line:27,column:53},end:{line:27,column:69}}],line:27},"6":{loc:{start:{line:32,column:24},end:{line:34,column:25}},type:"if",locations:[{start:{line:32,column:24},end:{line:34,column:25}},{start:{line:32,column:24},end:{line:34,column:25}}],line:32},"7":{loc:{start:{line:38,column:12},end:{line:41,column:13}},type:"if",locations:[{start:{line:38,column:12},end:{line:41,column:13}},{start:{line:38,column:12},end:{line:41,column:13}}],line:38},"8":{loc:{start:{line:51,column:19},end:{line:51,column:99}},type:"binary-expr",locations:[{start:{line:51,column:19},end:{line:51,column:38}},{start:{line:51,column:42},end:{line:51,column:99}}],line:51},"9":{loc:{start:{line:53,column:16},end:{line:55,column:17}},type:"if",locations:[{start:{line:53,column:16},end:{line:55,column:17}},{start:{line:53,column:16},end:{line:55,column:17}}],line:53},"10":{loc:{start:{line:65,column:20},end:{line:69,column:21}},type:"if",locations:[{start:{line:65,column:20},end:{line:69,column:21}},{start:{line:65,column:20},end:{line:69,column:21}}],line:65},"11":{loc:{start:{line:78,column:12},end:{line:86,column:13}},type:"if",locations:[{start:{line:78,column:12},end:{line:86,column:13}},{start:{line:78,column:12},end:{line:86,column:13}}],line:78},"12":{loc:{start:{line:81,column:17},end:{line:86,column:13}},type:"if",locations:[{start:{line:81,column:17},end:{line:86,column:13}},{start:{line:81,column:17},end:{line:86,column:13}}],line:81}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/choose-energy-prompt-resolver.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/choose-energy-prompt-resolver.ts"],names:[],mappings:"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",sourcesContent:["import { Player, State, Action, ResolvePromptAction, Prompt, StateUtils, CardType } from '../../game';\nimport { PromptResolver } from './prompt-resolver';\nimport { ChooseEnergyPrompt, EnergyMap } from '../../game/store/prompts/choose-energy-prompt';\n\n\nexport class ChooseEnergyPromptResolver extends PromptResolver {\n\n  public resolvePrompt(state: State, player: Player, prompt: Prompt<any>): Action | undefined {\n    if (prompt instanceof ChooseEnergyPrompt) {\n      let result: EnergyMap[] = [];\n      const provides = prompt.energy.slice();\n      const costs: CardType[] = prompt.cost.filter(c => c !== CardType.COLORLESS);\n\n      while (costs.length > 0 && provides.length > 0) {\n        const cost = costs[0];\n        let index = provides.findIndex(p => p.provides.includes(cost));\n\n        if (index === -1) {\n          // concrete energy not found, try to use rainbow energies\n          index = provides.findIndex(p => p.provides.includes(CardType.ANY));\n        }\n\n        if (index === -1) {\n          break; // impossible to pay for the cost\n        }\n\n        const provide = provides[index];\n        provides.splice(index, 1);\n        result.push(provide);\n\n        provide.provides.forEach(c => {\n          if (c === CardType.ANY && costs.length > 0) {\n            costs.shift();\n          } else {\n            const i = costs.indexOf(c);\n            if (i !== -1) {\n              costs.splice(i, 1);\n            }\n          }\n        });\n      }\n\n      if (costs.length > 0) {\n        // Impossible to pay for the cost, try to cancel\n        return new ResolvePromptAction(prompt.id, null);\n      }\n\n      // Only colorless energies are remaining to pay\n      // Sort rest of the provided energies by the score\n      // (Number of provided energy, provided type)\n      provides.sort((p1, p2) => {\n        const score1 = this.getEnergyCardScore(p1.provides);\n        const score2 = this.getEnergyCardScore(p2.provides);\n        return score1 - score2;\n      });\n\n      // Add energies until all colorless cost is paid\n      while (provides.length > 0 && !StateUtils.checkEnoughEnergy(result, prompt.cost)) {\n        const provide = provides.shift();\n        if (provide !== undefined) {\n          result.push(provide);\n        }\n      }\n\n      // Make sure we have used only the required energies to pay\n      let needCheck = true;\n      while (needCheck) {\n        needCheck = false;\n        for (let i = 0; i < result.length; i++) {\n          const tempCards = result.slice();\n          tempCards.splice(i, 1);\n          const enough = StateUtils.checkEnoughEnergy(tempCards, prompt.cost);\n          if (enough) {\n            result = tempCards;\n            needCheck = true;\n            break;\n          }\n        }\n      }\n\n      return new ResolvePromptAction(prompt.id, result);\n    }\n  }\n\n  private getEnergyCardScore(provides: CardType[]): number {\n    let score = 0;\n    provides.forEach(c => {\n      if (c === CardType.COLORLESS) {\n        score += 2;\n      } else if (c === CardType.ANY) {\n        score += 10;\n      } else {\n        score += 3;\n      }\n    });\n    return score;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"af95de028e803a84b1d7331c351e5320c645e8ba"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2n9sdlajwz=function(){return actualCoverage;};}return actualCoverage;}cov_2n9sdlajwz();cov_2n9sdlajwz().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2n9sdlajwz().s[1]++;exports.ChooseEnergyPromptResolver=void 0;const game_1=(cov_2n9sdlajwz().s[2]++,require("../../game"));const prompt_resolver_1=(cov_2n9sdlajwz().s[3]++,require("./prompt-resolver"));const choose_energy_prompt_1=(cov_2n9sdlajwz().s[4]++,require("../../game/store/prompts/choose-energy-prompt"));class ChooseEnergyPromptResolver extends(prompt_resolver_1.PromptResolver){resolvePrompt(state,player,prompt){cov_2n9sdlajwz().f[0]++;cov_2n9sdlajwz().s[5]++;if(prompt instanceof choose_energy_prompt_1.ChooseEnergyPrompt){cov_2n9sdlajwz().b[0][0]++;let result=(cov_2n9sdlajwz().s[6]++,[]);const provides=(cov_2n9sdlajwz().s[7]++,prompt.energy.slice());const costs=(cov_2n9sdlajwz().s[8]++,prompt.cost.filter(c=>{cov_2n9sdlajwz().f[1]++;cov_2n9sdlajwz().s[9]++;return c!==game_1.CardType.COLORLESS;}));cov_2n9sdlajwz().s[10]++;while((cov_2n9sdlajwz().b[1][0]++,costs.length>0)&&(cov_2n9sdlajwz().b[1][1]++,provides.length>0)){const cost=(cov_2n9sdlajwz().s[11]++,costs[0]);let index=(cov_2n9sdlajwz().s[12]++,provides.findIndex(p=>{cov_2n9sdlajwz().f[2]++;cov_2n9sdlajwz().s[13]++;return p.provides.includes(cost);}));cov_2n9sdlajwz().s[14]++;if(index===-1){cov_2n9sdlajwz().b[2][0]++;cov_2n9sdlajwz().s[15]++;// concrete energy not found, try to use rainbow energies
index=provides.findIndex(p=>{cov_2n9sdlajwz().f[3]++;cov_2n9sdlajwz().s[16]++;return p.provides.includes(game_1.CardType.ANY);});}else{cov_2n9sdlajwz().b[2][1]++;}cov_2n9sdlajwz().s[17]++;if(index===-1){cov_2n9sdlajwz().b[3][0]++;cov_2n9sdlajwz().s[18]++;break;// impossible to pay for the cost
}else{cov_2n9sdlajwz().b[3][1]++;}const provide=(cov_2n9sdlajwz().s[19]++,provides[index]);cov_2n9sdlajwz().s[20]++;provides.splice(index,1);cov_2n9sdlajwz().s[21]++;result.push(provide);cov_2n9sdlajwz().s[22]++;provide.provides.forEach(c=>{cov_2n9sdlajwz().f[4]++;cov_2n9sdlajwz().s[23]++;if((cov_2n9sdlajwz().b[5][0]++,c===game_1.CardType.ANY)&&(cov_2n9sdlajwz().b[5][1]++,costs.length>0)){cov_2n9sdlajwz().b[4][0]++;cov_2n9sdlajwz().s[24]++;costs.shift();}else{cov_2n9sdlajwz().b[4][1]++;const i=(cov_2n9sdlajwz().s[25]++,costs.indexOf(c));cov_2n9sdlajwz().s[26]++;if(i!==-1){cov_2n9sdlajwz().b[6][0]++;cov_2n9sdlajwz().s[27]++;costs.splice(i,1);}else{cov_2n9sdlajwz().b[6][1]++;}}});}cov_2n9sdlajwz().s[28]++;if(costs.length>0){cov_2n9sdlajwz().b[7][0]++;cov_2n9sdlajwz().s[29]++;// Impossible to pay for the cost, try to cancel
return new game_1.ResolvePromptAction(prompt.id,null);}else{cov_2n9sdlajwz().b[7][1]++;}// Only colorless energies are remaining to pay
// Sort rest of the provided energies by the score
// (Number of provided energy, provided type)
cov_2n9sdlajwz().s[30]++;provides.sort((p1,p2)=>{cov_2n9sdlajwz().f[5]++;const score1=(cov_2n9sdlajwz().s[31]++,this.getEnergyCardScore(p1.provides));const score2=(cov_2n9sdlajwz().s[32]++,this.getEnergyCardScore(p2.provides));cov_2n9sdlajwz().s[33]++;return score1-score2;});// Add energies until all colorless cost is paid
cov_2n9sdlajwz().s[34]++;while((cov_2n9sdlajwz().b[8][0]++,provides.length>0)&&(cov_2n9sdlajwz().b[8][1]++,!game_1.StateUtils.checkEnoughEnergy(result,prompt.cost))){const provide=(cov_2n9sdlajwz().s[35]++,provides.shift());cov_2n9sdlajwz().s[36]++;if(provide!==undefined){cov_2n9sdlajwz().b[9][0]++;cov_2n9sdlajwz().s[37]++;result.push(provide);}else{cov_2n9sdlajwz().b[9][1]++;}}// Make sure we have used only the required energies to pay
let needCheck=(cov_2n9sdlajwz().s[38]++,true);cov_2n9sdlajwz().s[39]++;while(needCheck){cov_2n9sdlajwz().s[40]++;needCheck=false;cov_2n9sdlajwz().s[41]++;for(let i=(cov_2n9sdlajwz().s[42]++,0);i<result.length;i++){const tempCards=(cov_2n9sdlajwz().s[43]++,result.slice());cov_2n9sdlajwz().s[44]++;tempCards.splice(i,1);const enough=(cov_2n9sdlajwz().s[45]++,game_1.StateUtils.checkEnoughEnergy(tempCards,prompt.cost));cov_2n9sdlajwz().s[46]++;if(enough){cov_2n9sdlajwz().b[10][0]++;cov_2n9sdlajwz().s[47]++;result=tempCards;cov_2n9sdlajwz().s[48]++;needCheck=true;cov_2n9sdlajwz().s[49]++;break;}else{cov_2n9sdlajwz().b[10][1]++;}}}cov_2n9sdlajwz().s[50]++;return new game_1.ResolvePromptAction(prompt.id,result);}else{cov_2n9sdlajwz().b[0][1]++;}}getEnergyCardScore(provides){cov_2n9sdlajwz().f[6]++;let score=(cov_2n9sdlajwz().s[51]++,0);cov_2n9sdlajwz().s[52]++;provides.forEach(c=>{cov_2n9sdlajwz().f[7]++;cov_2n9sdlajwz().s[53]++;if(c===game_1.CardType.COLORLESS){cov_2n9sdlajwz().b[11][0]++;cov_2n9sdlajwz().s[54]++;score+=2;}else{cov_2n9sdlajwz().b[11][1]++;cov_2n9sdlajwz().s[55]++;if(c===game_1.CardType.ANY){cov_2n9sdlajwz().b[12][0]++;cov_2n9sdlajwz().s[56]++;score+=10;}else{cov_2n9sdlajwz().b[12][1]++;cov_2n9sdlajwz().s[57]++;score+=3;}}});cov_2n9sdlajwz().s[58]++;return score;}}cov_2n9sdlajwz().s[59]++;exports.ChooseEnergyPromptResolver=ChooseEnergyPromptResolver;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,