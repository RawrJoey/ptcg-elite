{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/effect-reducers/play-pokemon-effect.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/effect-reducers/play-pokemon-effect.ts"],"names":[],"mappings":";;;AAAA,oEAAiE;AACjE,iDAA6C;AAC7C,qDAA0D;AAE1D,mDAA2C;AAG3C,4DAAwE;AACxE,0DAAqD;AAGrD,SAAgB,kBAAkB,CAAC,KAAgB,EAAE,KAAY,EAAE,MAAc;IAE/E,uBAAuB;IACvB,IAAI,MAAM,YAAY,qCAAiB,EAAE;QACvC,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC;QACvC,MAAM,OAAO,GAAG,KAAK,KAAK,kBAAK,CAAC,KAAK,CAAC;QAEtC,IAAI,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/C,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,sBAAO,CAAC,8BAA8B,EAAE;gBACvD,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI;gBACxB,IAAI,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI;aAC9B,CAAC,CAAC;YACH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YACjE,MAAM,CAAC,MAAM,CAAC,iBAAiB,GAAG,KAAK,CAAC,IAAI,CAAC;YAC7C,OAAO,KAAK,CAAC;SACd;QAED,MAAM,SAAS,GAAG,KAAK,KAAK,kBAAK,CAAC,OAAO,IAAI,kBAAK,CAAC,OAAO,CAAC;QAC3D,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC;QACnD,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;QACnD,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,cAAc,CAAC,CAAC;SACjD;QAED,IAAI,SAAS,IAAI,WAAW,CAAC,KAAK,GAAG,KAAK,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,EAAE;YAC9E,MAAM,gBAAgB,GAAG,IAAI,4CAA4B,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YACxF,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;YAE5C,IAAI,gBAAgB,CAAC,iBAAiB,IAAI,KAAK,CAAC,IAAI,EAAE;gBACpD,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,6BAA6B,CAAC,CAAC;aAChE;YAED,MAAM,YAAY,GAAG,IAAI,2BAAY,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;YACxF,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YACxC,OAAO,KAAK,CAAC;SACd;QAED,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,cAAc,CAAC,CAAC;KACjD;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAzCD,gDAyCC","sourcesContent":["import { PlayPokemonEffect } from '../effects/play-card-effects';\nimport { GameError } from '../../game-error';\nimport { GameMessage, GameLog } from '../../game-message';\nimport { Effect } from '../effects/effect';\nimport { Stage } from '../card/card-types';\nimport { State } from '../state/state';\nimport { StoreLike } from '../store-like';\nimport { CheckPokemonPlayedTurnEffect } from '../effects/check-effects';\nimport {EvolveEffect} from '../effects/game-effects';\n\n\nexport function playPokemonReducer(store: StoreLike, state: State, effect: Effect): State {\n\n  /* Play pokemon card */\n  if (effect instanceof PlayPokemonEffect) {\n    const stage = effect.pokemonCard.stage;\n    const isBasic = stage === Stage.BASIC;\n\n    if (isBasic && effect.target.cards.length === 0) {\n      store.log(state, GameLog.LOG_PLAYER_PLAYS_BASIC_POKEMON, {\n        name: effect.player.name,\n        card: effect.pokemonCard.name\n      });\n      effect.player.hand.moveCardTo(effect.pokemonCard, effect.target);\n      effect.target.pokemonPlayedTurn = state.turn;\n      return state;\n    }\n\n    const isEvolved = stage === Stage.STAGE_1 || Stage.STAGE_2;\n    const evolvesFrom = effect.pokemonCard.evolvesFrom;\n    const pokemonCard = effect.target.getPokemonCard();\n    if (pokemonCard === undefined) {\n      throw new GameError(GameMessage.INVALID_TARGET);\n    }\n\n    if (isEvolved && pokemonCard.stage < stage && pokemonCard.name === evolvesFrom) {\n      const playedTurnEffect = new CheckPokemonPlayedTurnEffect(effect.player, effect.target);\n      store.reduceEffect(state, playedTurnEffect);\n\n      if (playedTurnEffect.pokemonPlayedTurn >= state.turn) {\n        throw new GameError(GameMessage.POKEMON_CANT_EVOLVE_THIS_TURN);\n      }\n\n      const evolveEffect = new EvolveEffect(effect.player, effect.target, effect.pokemonCard);\n      store.reduceEffect(state, evolveEffect);\n      return state;\n    }\n\n    throw new GameError(GameMessage.INVALID_TARGET);\n  }\n\n  return state;\n}\n"]}