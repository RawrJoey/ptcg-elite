{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/move-damage-prompt.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/move-damage-prompt.ts"],"names":[],"mappings":"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","sourcesContent":["import { GameError } from '../../game-error';\nimport { GameMessage } from '../../game-message';\nimport { Prompt } from './prompt';\nimport { PlayerType, SlotType, CardTarget } from '../actions/play-card-action';\nimport { State } from '../state/state';\nimport { StateUtils } from '../state-utils';\n\nexport const MoveDamagePromptType = 'Move damage';\n\nexport type MoveDamageResultType = DamageTransfer[];\n\nexport interface DamageTransfer {\n  from: CardTarget;\n  to: CardTarget;\n}\n\nexport interface DamageMap {\n  target: CardTarget;\n  damage: number;\n}\n\nexport interface MoveDamageOptions {\n  allowCancel: boolean;\n  min: number;\n  max: number | undefined;\n  blockedFrom: CardTarget[];\n  blockedTo: CardTarget[];\n}\n\nexport class MoveDamagePrompt extends Prompt<DamageTransfer[]> {\n\n  readonly type: string = MoveDamagePromptType;\n\n  public options: MoveDamageOptions;\n\n  constructor(\n    playerId: number,\n    public message: GameMessage,\n    public playerType: PlayerType,\n    public slots: SlotType[],\n    public maxAllowedDamage: DamageMap[],\n    options?: Partial<MoveDamageOptions>\n  ) {\n    super(playerId);\n\n    // Default options\n    this.options = Object.assign({}, {\n      allowCancel: true,\n      min: 0,\n      max: undefined,\n      blockedFrom: [],\n      blockedTo: []\n    }, options);\n  }\n\n  public decode(result: MoveDamageResultType | null, state: State): DamageTransfer[] | null {\n    if (result === null) {\n      return result;  // operation cancelled\n    }\n    const player = state.players.find(p => p.id === this.playerId);\n    if (player === undefined) {\n      throw new GameError(GameMessage.INVALID_PROMPT_RESULT);\n    }\n    return result;\n  }\n\n  public validate(result: DamageTransfer[] | null, state: State): boolean {\n    if (result === null) {\n      return this.options.allowCancel;  // operation cancelled\n    }\n\n    if (result.length < this.options.min) {\n      return false;\n    }\n\n    if (this.options.max !== undefined && result.length > this.options.max) {\n      return false;\n    }\n\n    const player = state.players.find(p => p.id === this.playerId);\n    if (player === undefined) {\n      return false;\n    }\n    const blockedFrom = this.options.blockedFrom.map(b => StateUtils.getTarget(state, player, b));\n    const blockedTo = this.options.blockedTo.map(b => StateUtils.getTarget(state, player, b));\n\n    for (const r of result) {\n      const from = StateUtils.getTarget(state, player, r.from);\n      if (from === undefined || blockedFrom.includes(from)) {\n        return false;\n      }\n      const to = StateUtils.getTarget(state, player, r.to);\n      if (to === undefined || blockedTo.includes(to)) {\n        return false;\n      }\n    }\n\n    if (this.playerType !== PlayerType.ANY) {\n      if (result.some(r => r.from.player !== this.playerType)\n        || result.some(r => r.to.player !== this.playerType)) {\n        return false;\n      }\n    }\n\n    if (result.some(r => !this.slots.includes(r.from.slot))\n      || result.some(r => !this.slots.includes(r.to.slot))) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n"]}