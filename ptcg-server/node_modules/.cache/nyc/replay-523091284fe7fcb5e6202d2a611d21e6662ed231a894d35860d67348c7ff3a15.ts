"use strict";function cov_1lynpz762x(){var path="/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/core/replay.ts";var hash="09e376f0310ba97a329a8b36eaa13af3d6804147";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/core/replay.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:24}},"2":{start:{line:4,column:19},end:{line:4,column:48}},"3":{start:{line:5,column:16},end:{line:5,column:47}},"4":{start:{line:6,column:21},end:{line:6,column:45}},"5":{start:{line:7,column:23},end:{line:7,column:49}},"6":{start:{line:8,column:27},end:{line:8,column:68}},"7":{start:{line:11,column:8},end:{line:11,column:32}},"8":{start:{line:12,column:8},end:{line:12,column:26}},"9":{start:{line:13,column:8},end:{line:13,column:24}},"10":{start:{line:14,column:8},end:{line:14,column:26}},"11":{start:{line:15,column:8},end:{line:15,column:67}},"12":{start:{line:16,column:8},end:{line:16,column:59}},"13":{start:{line:17,column:8},end:{line:17,column:59}},"14":{start:{line:18,column:8},end:{line:18,column:46}},"15":{start:{line:19,column:8},end:{line:19,column:25}},"16":{start:{line:20,column:8},end:{line:23,column:20}},"17":{start:{line:26,column:8},end:{line:26,column:33}},"18":{start:{line:29,column:8},end:{line:31,column:9}},"19":{start:{line:30,column:12},end:{line:30,column:95}},"20":{start:{line:32,column:24},end:{line:32,column:37}},"21":{start:{line:33,column:22},end:{line:33,column:47}},"22":{start:{line:34,column:16},end:{line:34,column:17}},"23":{start:{line:35,column:8},end:{line:46,column:9}},"24":{start:{line:36,column:12},end:{line:45,column:13}},"25":{start:{line:37,column:29},end:{line:37,column:47}},"26":{start:{line:38,column:30},end:{line:38,column:75}},"27":{start:{line:39,column:16},end:{line:39,column:72}},"28":{start:{line:40,column:16},end:{line:40,column:25}},"29":{start:{line:43,column:16},end:{line:43,column:20}},"30":{start:{line:44,column:16},end:{line:44,column:80}},"31":{start:{line:47,column:8},end:{line:47,column:54}},"32":{start:{line:50,column:8},end:{line:50,column:35}},"33":{start:{line:53,column:8},end:{line:55,column:9}},"34":{start:{line:54,column:12},end:{line:54,column:95}},"35":{start:{line:56,column:8},end:{line:56,column:34}},"36":{start:{line:59,column:8},end:{line:59,column:31}},"37":{start:{line:62,column:21},end:{line:62,column:53}},"38":{start:{line:63,column:21},end:{line:63,column:73}},"39":{start:{line:66,column:8},end:{line:68,column:9}},"40":{start:{line:67,column:12},end:{line:67,column:19}},"41":{start:{line:69,column:8},end:{line:69,column:30}},"42":{start:{line:70,column:8},end:{line:70,column:30}},"43":{start:{line:71,column:8},end:{line:73,column:9}},"44":{start:{line:72,column:12},end:{line:72,column:42}},"45":{start:{line:74,column:8},end:{line:76,column:9}},"46":{start:{line:75,column:12},end:{line:75,column:53}},"47":{start:{line:79,column:21},end:{line:86,column:9}},"48":{start:{line:87,column:8},end:{line:87,column:51}},"49":{start:{line:90,column:8},end:{line:108,column:9}},"50":{start:{line:91,column:25},end:{line:91,column:64}},"51":{start:{line:92,column:12},end:{line:92,column:40}},"52":{start:{line:93,column:12},end:{line:93,column:40}},"53":{start:{line:94,column:12},end:{line:94,column:38}},"54":{start:{line:95,column:12},end:{line:95,column:40}},"55":{start:{line:96,column:12},end:{line:96,column:54}},"56":{start:{line:97,column:12},end:{line:97,column:40}},"57":{start:{line:98,column:12},end:{line:100,column:13}},"58":{start:{line:99,column:16},end:{line:99,column:46}},"59":{start:{line:101,column:12},end:{line:104,column:13}},"60":{start:{line:102,column:34},end:{line:102,column:70}},"61":{start:{line:103,column:16},end:{line:103,column:70}},"62":{start:{line:107,column:12},end:{line:107,column:95}},"63":{start:{line:111,column:8},end:{line:111,column:85}},"64":{start:{line:111,column:33},end:{line:111,column:83}},"65":{start:{line:111,column:60},end:{line:111,column:82}},"66":{start:{line:114,column:27},end:{line:114,column:66}},"67":{start:{line:115,column:8},end:{line:115,column:26}},"68":{start:{line:118,column:21},end:{line:118,column:62}},"69":{start:{line:119,column:8},end:{line:119,column:20}},"70":{start:{line:122,column:8},end:{line:125,column:9}},"71":{start:{line:123,column:12},end:{line:123,column:30}},"72":{start:{line:124,column:12},end:{line:124,column:19}},"73":{start:{line:126,column:8},end:{line:126,column:26}},"74":{start:{line:127,column:16},end:{line:127,column:34}},"75":{start:{line:128,column:8},end:{line:146,column:9}},"76":{start:{line:129,column:26},end:{line:129,column:44}},"77":{start:{line:130,column:28},end:{line:130,column:36}},"78":{start:{line:131,column:22},end:{line:131,column:23}},"79":{start:{line:132,column:12},end:{line:136,column:13}},"80":{start:{line:132,column:25},end:{line:132,column:26}},"81":{start:{line:133,column:16},end:{line:133,column:31}},"82":{start:{line:134,column:30},end:{line:134,column:74}},"83":{start:{line:135,column:16},end:{line:135,column:72}},"84":{start:{line:137,column:28},end:{line:137,column:37}},"85":{start:{line:138,column:12},end:{line:141,column:13}},"86":{start:{line:139,column:16},end:{line:139,column:22}},"87":{start:{line:140,column:16},end:{line:140,column:77}},"88":{start:{line:142,column:31},end:{line:142,column:69}},"89":{start:{line:143,column:30},end:{line:143,column:82}},"90":{start:{line:144,column:12},end:{line:144,column:41}},"91":{start:{line:145,column:12},end:{line:145,column:36}},"92":{start:{line:149,column:8},end:{line:151,column:9}},"93":{start:{line:150,column:12},end:{line:150,column:22}},"94":{start:{line:152,column:22},end:{line:152,column:42}},"95":{start:{line:153,column:8},end:{line:155,column:9}},"96":{start:{line:154,column:12},end:{line:154,column:25}},"97":{start:{line:156,column:18},end:{line:156,column:49}},"98":{start:{line:157,column:23},end:{line:157,column:37}},"99":{start:{line:158,column:18},end:{line:158,column:19}},"100":{start:{line:159,column:8},end:{line:165,column:9}},"101":{start:{line:160,column:12},end:{line:163,column:13}},"102":{start:{line:161,column:16},end:{line:161,column:43}},"103":{start:{line:162,column:16},end:{line:162,column:32}},"104":{start:{line:164,column:12},end:{line:164,column:36}},"105":{start:{line:166,column:8},end:{line:166,column:21}},"106":{start:{line:169,column:0},end:{line:169,column:24}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:4},end:{line:10,column:5}},loc:{start:{line:10,column:30},end:{line:24,column:5}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:4},end:{line:25,column:5}},loc:{start:{line:25,column:20},end:{line:27,column:5}},line:25},"2":{name:"(anonymous_2)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:23},end:{line:48,column:5}},line:28},"3":{name:"(anonymous_3)",decl:{start:{line:49,column:4},end:{line:49,column:5}},loc:{start:{line:49,column:19},end:{line:51,column:5}},line:49},"4":{name:"(anonymous_4)",decl:{start:{line:52,column:4},end:{line:52,column:5}},loc:{start:{line:52,column:26},end:{line:57,column:5}},line:52},"5":{name:"(anonymous_5)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:24},end:{line:60,column:5}},line:58},"6":{name:"(anonymous_6)",decl:{start:{line:61,column:4},end:{line:61,column:5}},loc:{start:{line:61,column:23},end:{line:77,column:5}},line:61},"7":{name:"(anonymous_7)",decl:{start:{line:78,column:4},end:{line:78,column:5}},loc:{start:{line:78,column:16},end:{line:88,column:5}},line:78},"8":{name:"(anonymous_8)",decl:{start:{line:89,column:4},end:{line:89,column:5}},loc:{start:{line:89,column:28},end:{line:109,column:5}},line:89},"9":{name:"(anonymous_9)",decl:{start:{line:110,column:4},end:{line:110,column:5}},loc:{start:{line:110,column:22},end:{line:112,column:5}},line:110},"10":{name:"(anonymous_10)",decl:{start:{line:111,column:25},end:{line:111,column:26}},loc:{start:{line:111,column:33},end:{line:111,column:83}},line:111},"11":{name:"(anonymous_11)",decl:{start:{line:111,column:55},end:{line:111,column:56}},loc:{start:{line:111,column:60},end:{line:111,column:82}},line:111},"12":{name:"(anonymous_12)",decl:{start:{line:113,column:4},end:{line:113,column:5}},loc:{start:{line:113,column:19},end:{line:116,column:5}},line:113},"13":{name:"(anonymous_13)",decl:{start:{line:117,column:4},end:{line:117,column:5}},loc:{start:{line:117,column:21},end:{line:120,column:5}},line:117},"14":{name:"(anonymous_14)",decl:{start:{line:121,column:4},end:{line:121,column:5}},loc:{start:{line:121,column:24},end:{line:147,column:5}},line:121},"15":{name:"(anonymous_15)",decl:{start:{line:148,column:4},end:{line:148,column:5}},loc:{start:{line:148,column:25},end:{line:167,column:5}},line:148}},branchMap:{"0":{loc:{start:{line:10,column:16},end:{line:10,column:28}},type:"default-arg",locations:[{start:{line:10,column:26},end:{line:10,column:28}}],line:10},"1":{loc:{start:{line:29,column:8},end:{line:31,column:9}},type:"if",locations:[{start:{line:29,column:8},end:{line:31,column:9}},{start:{line:29,column:8},end:{line:31,column:9}}],line:29},"2":{loc:{start:{line:29,column:12},end:{line:29,column:57}},type:"binary-expr",locations:[{start:{line:29,column:12},end:{line:29,column:24}},{start:{line:29,column:28},end:{line:29,column:57}}],line:29},"3":{loc:{start:{line:36,column:12},end:{line:45,column:13}},type:"if",locations:[{start:{line:36,column:12},end:{line:45,column:13}},{start:{line:36,column:12},end:{line:45,column:13}}],line:36},"4":{loc:{start:{line:36,column:16},end:{line:36,column:61}},type:"binary-expr",locations:[{start:{line:36,column:16},end:{line:36,column:41}},{start:{line:36,column:45},end:{line:36,column:61}}],line:36},"5":{loc:{start:{line:37,column:29},end:{line:37,column:47}},type:"binary-expr",locations:[{start:{line:37,column:29},end:{line:37,column:42}},{start:{line:37,column:46},end:{line:37,column:47}}],line:37},"6":{loc:{start:{line:53,column:8},end:{line:55,column:9}},type:"if",locations:[{start:{line:53,column:8},end:{line:55,column:9}},{start:{line:53,column:8},end:{line:55,column:9}}],line:53},"7":{loc:{start:{line:53,column:12},end:{line:53,column:51}},type:"binary-expr",locations:[{start:{line:53,column:12},end:{line:53,column:20}},{start:{line:53,column:24},end:{line:53,column:51}}],line:53},"8":{loc:{start:{line:66,column:8},end:{line:68,column:9}},type:"if",locations:[{start:{line:66,column:8},end:{line:68,column:9}},{start:{line:66,column:8},end:{line:68,column:9}}],line:66},"9":{loc:{start:{line:71,column:8},end:{line:73,column:9}},type:"if",locations:[{start:{line:71,column:8},end:{line:73,column:9}},{start:{line:71,column:8},end:{line:73,column:9}}],line:71},"10":{loc:{start:{line:98,column:12},end:{line:100,column:13}},type:"if",locations:[{start:{line:98,column:12},end:{line:100,column:13}},{start:{line:98,column:12},end:{line:100,column:13}}],line:98},"11":{loc:{start:{line:101,column:12},end:{line:104,column:13}},type:"if",locations:[{start:{line:101,column:12},end:{line:104,column:13}},{start:{line:101,column:12},end:{line:104,column:13}}],line:101},"12":{loc:{start:{line:111,column:60},end:{line:111,column:82}},type:"cond-expr",locations:[{start:{line:111,column:72},end:{line:111,column:76}},{start:{line:111,column:79},end:{line:111,column:82}}],line:111},"13":{loc:{start:{line:122,column:8},end:{line:125,column:9}},type:"if",locations:[{start:{line:122,column:8},end:{line:125,column:9}},{start:{line:122,column:8},end:{line:125,column:9}}],line:122},"14":{loc:{start:{line:149,column:8},end:{line:151,column:9}},type:"if",locations:[{start:{line:149,column:8},end:{line:151,column:9}},{start:{line:149,column:8},end:{line:151,column:9}}],line:149},"15":{loc:{start:{line:153,column:8},end:{line:155,column:9}},type:"if",locations:[{start:{line:153,column:8},end:{line:155,column:9}},{start:{line:153,column:8},end:{line:155,column:9}}],line:153},"16":{loc:{start:{line:160,column:12},end:{line:163,column:13}},type:"if",locations:[{start:{line:160,column:12},end:{line:163,column:13}},{start:{line:160,column:12},end:{line:163,column:13}}],line:160}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},b:{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},inputSourceMap:{version:3,file:"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/core/replay.ts",sources:["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/core/replay.ts"],names:[],mappings:"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",sourcesContent:["import { gzip, ungzip } from '@progress/pako-esm';\n\nimport { State, GameWinner } from '../store/state/state';\nimport { ReplayPlayer, ReplayOptions } from './replay.interface';\nimport { GameError } from '../game-error';\nimport { GameCoreError } from '../game-message';\nimport { SerializedState } from '../serializer/serializer.interface';\nimport { StateSerializer } from '../serializer/state-serializer';\n\nexport class Replay {\n\n  private readonly indexJumpSize: number = 16;\n\n  public player1: ReplayPlayer;\n  public player2: ReplayPlayer;\n  public winner: GameWinner;\n  public created: number;\n  private turnMap: number[] = [];\n  private diffs: SerializedState[] = [];\n  private indexes: SerializedState[] = [];\n  private prevState: SerializedState | undefined;\n  private serializer = new StateSerializer();\n  private options: ReplayOptions;\n\n  constructor(options: Partial<ReplayOptions> = {}) {\n    this.player1 = { name: '', userId: 0, ranking: 0 };\n    this.player2 = { name: '', userId: 0, ranking: 0 };\n    this.winner = GameWinner.NONE;\n    this.created = 0;\n    this.options = Object.assign({\n      indexEnabled: true,\n      appendEnabled: false\n    }, options);\n  }\n\n  public getStateCount(): number {\n    return this.diffs.length;\n  }\n\n  public getState(position: number): State {\n    if (position < 0 || position >= this.diffs.length) {\n      throw new GameError(GameCoreError.ERROR_INVALID_STATE);\n    }\n\n    let stateData = this.diffs[0];\n    const jumps = this.indexJumps(position);\n    let i = 0;\n    while (i !== position) {\n      if (this.options.indexEnabled && jumps.length > 0) {\n        const jump = jumps.shift() || 0;\n        const index = this.indexes[(jump / this.indexJumpSize) - 1];\n        stateData = this.serializer.applyDiff(stateData, index);\n        i = jump;\n      } else {\n        i++;\n        stateData = this.serializer.applyDiff(stateData, this.diffs[i]);\n      }\n    }\n\n    return this.serializer.deserialize(stateData);\n  }\n\n  public getTurnCount(): number {\n    return this.turnMap.length;\n  }\n\n  public getTurnPosition(turn: number): number {\n    if (turn < 0 || turn >= this.turnMap.length) {\n      throw new GameError(GameCoreError.ERROR_INVALID_STATE);\n    }\n    return this.turnMap[turn];\n  }\n\n  public setCreated(created: number): void {\n    this.created = created;\n  }\n\n  public appendState(state: State): void {\n    const full = this.serializer.serialize(state);\n    const diff = this.serializer.serializeDiff(this.prevState, state);\n\n    // Ignore the actions, which does not modified the state, like\n    // shuffling an empty deck, or changing the hand order in the same matter\n    if (diff === '[[]]') {\n      return;\n    }\n\n    this.prevState = full;\n    this.diffs.push(diff);\n    if (this.options.indexEnabled) {\n      this.rebuildIndex(this.diffs);\n    }\n    while (this.turnMap.length <= state.turn) {\n      this.turnMap.push(this.diffs.length - 1);\n    }\n  }\n\n  public serialize(): string {\n    const json = {\n      player1: this.player1,\n      player2: this.player2,\n      winner: this.winner,\n      created: this.created,\n      turnMap: this.turnMap,\n      states: this.swapQuotes(this.diffs)\n    };\n    return this.compress(JSON.stringify(json));\n  }\n\n  public deserialize(replayData: string): void {\n    try {\n      const data = JSON.parse(this.decompress(replayData));\n      this.player1 = data.player1;\n      this.player2 = data.player2;\n      this.winner = data.winner;\n      this.created = data.created;\n      this.diffs = this.swapQuotes(data.states);\n      this.turnMap = data.turnMap;\n\n      if (this.options.indexEnabled) {\n        this.rebuildIndex(this.diffs);\n      }\n\n      if (this.options.appendEnabled) {\n        const lastState = this.getState(this.diffs.length - 1);\n        this.prevState = this.serializer.serialize(lastState);\n      }\n    } catch (error) {\n      throw new GameError(GameCoreError.ERROR_INVALID_STATE);\n    }\n  }\n\n  private swapQuotes(diffs: SerializedState[]): SerializedState[] {\n    return diffs.map(diff => diff.replace(/[\"']/g, c => c === '\"' ? '\\'' : '\"'));\n  }\n\n  private compress(data: string): string {\n    const compressed = gzip(data, { to: 'string' });\n    return compressed;\n  }\n\n  private decompress(data: string): string {\n    const text = ungzip(data, { to: 'string' });\n    return text;\n  }\n\n  private rebuildIndex(diffs: SerializedState[]): void {\n    if (diffs.length === 0) {\n      this.indexes = [];\n      return;\n    }\n\n    this.indexes = [];\n    let i = this.indexJumpSize;\n    while (i < diffs.length) {\n      const jumps = this.indexJumps(i);\n      let stateData = diffs[0];\n      let pos = 0;\n      for (let j = 0; j < jumps.length - 1; j++) {\n        pos = jumps[j];\n        const index = this.indexes[(pos / this.indexJumpSize) - 1];\n        stateData = this.serializer.applyDiff(stateData, index);\n      }\n      let indexData = stateData;\n      while (pos < i) {\n        pos++;\n        indexData = this.serializer.applyDiff(indexData, diffs[pos]);\n      }\n      const indexState = this.serializer.deserialize(indexData);\n      const indexDiff = this.serializer.serializeDiff(stateData, indexState);\n      this.indexes.push(indexDiff);\n      i += this.indexJumpSize;\n    }\n  }\n\n  private indexJumps(position: number): number[] {\n    if (position < this.indexJumpSize) {\n      return [];\n    }\n    const jumps = [ this.indexJumpSize ];\n\n    if (position < this.indexJumpSize * 2) {\n      return jumps;\n    }\n\n    const n = Math.floor(Math.log2(position));\n    let jumpSize = Math.pow(2, n);\n    let pos = 0;\n\n    while (jumpSize >= this.indexJumpSize) {\n      if (pos + jumpSize <= position) {\n        jumps.push(pos + jumpSize);\n        pos += jumpSize;\n      }\n      jumpSize = jumpSize / 2;\n    }\n\n    return jumps;\n  }\n\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"09e376f0310ba97a329a8b36eaa13af3d6804147"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1lynpz762x=function(){return actualCoverage;};}return actualCoverage;}cov_1lynpz762x();cov_1lynpz762x().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1lynpz762x().s[1]++;exports.Replay=void 0;const pako_esm_1=(cov_1lynpz762x().s[2]++,require("@progress/pako-esm"));const state_1=(cov_1lynpz762x().s[3]++,require("../store/state/state"));const game_error_1=(cov_1lynpz762x().s[4]++,require("../game-error"));const game_message_1=(cov_1lynpz762x().s[5]++,require("../game-message"));const state_serializer_1=(cov_1lynpz762x().s[6]++,require("../serializer/state-serializer"));class Replay{constructor(options=(cov_1lynpz762x().b[0][0]++,{})){cov_1lynpz762x().f[0]++;cov_1lynpz762x().s[7]++;this.indexJumpSize=16;cov_1lynpz762x().s[8]++;this.turnMap=[];cov_1lynpz762x().s[9]++;this.diffs=[];cov_1lynpz762x().s[10]++;this.indexes=[];cov_1lynpz762x().s[11]++;this.serializer=new state_serializer_1.StateSerializer();cov_1lynpz762x().s[12]++;this.player1={name:'',userId:0,ranking:0};cov_1lynpz762x().s[13]++;this.player2={name:'',userId:0,ranking:0};cov_1lynpz762x().s[14]++;this.winner=state_1.GameWinner.NONE;cov_1lynpz762x().s[15]++;this.created=0;cov_1lynpz762x().s[16]++;this.options=Object.assign({indexEnabled:true,appendEnabled:false},options);}getStateCount(){cov_1lynpz762x().f[1]++;cov_1lynpz762x().s[17]++;return this.diffs.length;}getState(position){cov_1lynpz762x().f[2]++;cov_1lynpz762x().s[18]++;if((cov_1lynpz762x().b[2][0]++,position<0)||(cov_1lynpz762x().b[2][1]++,position>=this.diffs.length)){cov_1lynpz762x().b[1][0]++;cov_1lynpz762x().s[19]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_INVALID_STATE);}else{cov_1lynpz762x().b[1][1]++;}let stateData=(cov_1lynpz762x().s[20]++,this.diffs[0]);const jumps=(cov_1lynpz762x().s[21]++,this.indexJumps(position));let i=(cov_1lynpz762x().s[22]++,0);cov_1lynpz762x().s[23]++;while(i!==position){cov_1lynpz762x().s[24]++;if((cov_1lynpz762x().b[4][0]++,this.options.indexEnabled)&&(cov_1lynpz762x().b[4][1]++,jumps.length>0)){cov_1lynpz762x().b[3][0]++;const jump=(cov_1lynpz762x().s[25]++,(cov_1lynpz762x().b[5][0]++,jumps.shift())||(cov_1lynpz762x().b[5][1]++,0));const index=(cov_1lynpz762x().s[26]++,this.indexes[jump/this.indexJumpSize-1]);cov_1lynpz762x().s[27]++;stateData=this.serializer.applyDiff(stateData,index);cov_1lynpz762x().s[28]++;i=jump;}else{cov_1lynpz762x().b[3][1]++;cov_1lynpz762x().s[29]++;i++;cov_1lynpz762x().s[30]++;stateData=this.serializer.applyDiff(stateData,this.diffs[i]);}}cov_1lynpz762x().s[31]++;return this.serializer.deserialize(stateData);}getTurnCount(){cov_1lynpz762x().f[3]++;cov_1lynpz762x().s[32]++;return this.turnMap.length;}getTurnPosition(turn){cov_1lynpz762x().f[4]++;cov_1lynpz762x().s[33]++;if((cov_1lynpz762x().b[7][0]++,turn<0)||(cov_1lynpz762x().b[7][1]++,turn>=this.turnMap.length)){cov_1lynpz762x().b[6][0]++;cov_1lynpz762x().s[34]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_INVALID_STATE);}else{cov_1lynpz762x().b[6][1]++;}cov_1lynpz762x().s[35]++;return this.turnMap[turn];}setCreated(created){cov_1lynpz762x().f[5]++;cov_1lynpz762x().s[36]++;this.created=created;}appendState(state){cov_1lynpz762x().f[6]++;const full=(cov_1lynpz762x().s[37]++,this.serializer.serialize(state));const diff=(cov_1lynpz762x().s[38]++,this.serializer.serializeDiff(this.prevState,state));// Ignore the actions, which does not modified the state, like
// shuffling an empty deck, or changing the hand order in the same matter
cov_1lynpz762x().s[39]++;if(diff==='[[]]'){cov_1lynpz762x().b[8][0]++;cov_1lynpz762x().s[40]++;return;}else{cov_1lynpz762x().b[8][1]++;}cov_1lynpz762x().s[41]++;this.prevState=full;cov_1lynpz762x().s[42]++;this.diffs.push(diff);cov_1lynpz762x().s[43]++;if(this.options.indexEnabled){cov_1lynpz762x().b[9][0]++;cov_1lynpz762x().s[44]++;this.rebuildIndex(this.diffs);}else{cov_1lynpz762x().b[9][1]++;}cov_1lynpz762x().s[45]++;while(this.turnMap.length<=state.turn){cov_1lynpz762x().s[46]++;this.turnMap.push(this.diffs.length-1);}}serialize(){cov_1lynpz762x().f[7]++;const json=(cov_1lynpz762x().s[47]++,{player1:this.player1,player2:this.player2,winner:this.winner,created:this.created,turnMap:this.turnMap,states:this.swapQuotes(this.diffs)});cov_1lynpz762x().s[48]++;return this.compress(JSON.stringify(json));}deserialize(replayData){cov_1lynpz762x().f[8]++;cov_1lynpz762x().s[49]++;try{const data=(cov_1lynpz762x().s[50]++,JSON.parse(this.decompress(replayData)));cov_1lynpz762x().s[51]++;this.player1=data.player1;cov_1lynpz762x().s[52]++;this.player2=data.player2;cov_1lynpz762x().s[53]++;this.winner=data.winner;cov_1lynpz762x().s[54]++;this.created=data.created;cov_1lynpz762x().s[55]++;this.diffs=this.swapQuotes(data.states);cov_1lynpz762x().s[56]++;this.turnMap=data.turnMap;cov_1lynpz762x().s[57]++;if(this.options.indexEnabled){cov_1lynpz762x().b[10][0]++;cov_1lynpz762x().s[58]++;this.rebuildIndex(this.diffs);}else{cov_1lynpz762x().b[10][1]++;}cov_1lynpz762x().s[59]++;if(this.options.appendEnabled){cov_1lynpz762x().b[11][0]++;const lastState=(cov_1lynpz762x().s[60]++,this.getState(this.diffs.length-1));cov_1lynpz762x().s[61]++;this.prevState=this.serializer.serialize(lastState);}else{cov_1lynpz762x().b[11][1]++;}}catch(error){cov_1lynpz762x().s[62]++;throw new game_error_1.GameError(game_message_1.GameCoreError.ERROR_INVALID_STATE);}}swapQuotes(diffs){cov_1lynpz762x().f[9]++;cov_1lynpz762x().s[63]++;return diffs.map(diff=>{cov_1lynpz762x().f[10]++;cov_1lynpz762x().s[64]++;return diff.replace(/["']/g,c=>{cov_1lynpz762x().f[11]++;cov_1lynpz762x().s[65]++;return c==='"'?(cov_1lynpz762x().b[12][0]++,'\''):(cov_1lynpz762x().b[12][1]++,'"');});});}compress(data){cov_1lynpz762x().f[12]++;const compressed=(cov_1lynpz762x().s[66]++,pako_esm_1.gzip(data,{to:'string'}));cov_1lynpz762x().s[67]++;return compressed;}decompress(data){cov_1lynpz762x().f[13]++;const text=(cov_1lynpz762x().s[68]++,pako_esm_1.ungzip(data,{to:'string'}));cov_1lynpz762x().s[69]++;return text;}rebuildIndex(diffs){cov_1lynpz762x().f[14]++;cov_1lynpz762x().s[70]++;if(diffs.length===0){cov_1lynpz762x().b[13][0]++;cov_1lynpz762x().s[71]++;this.indexes=[];cov_1lynpz762x().s[72]++;return;}else{cov_1lynpz762x().b[13][1]++;}cov_1lynpz762x().s[73]++;this.indexes=[];let i=(cov_1lynpz762x().s[74]++,this.indexJumpSize);cov_1lynpz762x().s[75]++;while(i<diffs.length){const jumps=(cov_1lynpz762x().s[76]++,this.indexJumps(i));let stateData=(cov_1lynpz762x().s[77]++,diffs[0]);let pos=(cov_1lynpz762x().s[78]++,0);cov_1lynpz762x().s[79]++;for(let j=(cov_1lynpz762x().s[80]++,0);j<jumps.length-1;j++){cov_1lynpz762x().s[81]++;pos=jumps[j];const index=(cov_1lynpz762x().s[82]++,this.indexes[pos/this.indexJumpSize-1]);cov_1lynpz762x().s[83]++;stateData=this.serializer.applyDiff(stateData,index);}let indexData=(cov_1lynpz762x().s[84]++,stateData);cov_1lynpz762x().s[85]++;while(pos<i){cov_1lynpz762x().s[86]++;pos++;cov_1lynpz762x().s[87]++;indexData=this.serializer.applyDiff(indexData,diffs[pos]);}const indexState=(cov_1lynpz762x().s[88]++,this.serializer.deserialize(indexData));const indexDiff=(cov_1lynpz762x().s[89]++,this.serializer.serializeDiff(stateData,indexState));cov_1lynpz762x().s[90]++;this.indexes.push(indexDiff);cov_1lynpz762x().s[91]++;i+=this.indexJumpSize;}}indexJumps(position){cov_1lynpz762x().f[15]++;cov_1lynpz762x().s[92]++;if(position<this.indexJumpSize){cov_1lynpz762x().b[14][0]++;cov_1lynpz762x().s[93]++;return[];}else{cov_1lynpz762x().b[14][1]++;}const jumps=(cov_1lynpz762x().s[94]++,[this.indexJumpSize]);cov_1lynpz762x().s[95]++;if(position<this.indexJumpSize*2){cov_1lynpz762x().b[15][0]++;cov_1lynpz762x().s[96]++;return jumps;}else{cov_1lynpz762x().b[15][1]++;}const n=(cov_1lynpz762x().s[97]++,Math.floor(Math.log2(position)));let jumpSize=(cov_1lynpz762x().s[98]++,Math.pow(2,n));let pos=(cov_1lynpz762x().s[99]++,0);cov_1lynpz762x().s[100]++;while(jumpSize>=this.indexJumpSize){cov_1lynpz762x().s[101]++;if(pos+jumpSize<=position){cov_1lynpz762x().b[16][0]++;cov_1lynpz762x().s[102]++;jumps.push(pos+jumpSize);cov_1lynpz762x().s[103]++;pos+=jumpSize;}else{cov_1lynpz762x().b[16][1]++;}cov_1lynpz762x().s[104]++;jumpSize=jumpSize/2;}cov_1lynpz762x().s[105]++;return jumps;}}cov_1lynpz762x().s[106]++;exports.Replay=Replay;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,