{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/put-damage-prompt.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/put-damage-prompt.ts"],"names":[],"mappings":";;;AACA,qCAAkC;AAClC,kEAA+E;AAE/E,gDAA4C;AAG/B,QAAA,mBAAmB,GAAG,YAAY,CAAC;AAOhD,MAAa,eAAgB,SAAQ,eAAmB;IAMtD,YACE,QAAgB,EACT,OAAoB,EACpB,UAAsB,EACtB,KAAiB,EACjB,MAAc,EACd,gBAA6B,EACpC,OAAmC;QAEnC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAPT,YAAO,GAAP,OAAO,CAAa;QACpB,eAAU,GAAV,UAAU,CAAY;QACtB,UAAK,GAAL,KAAK,CAAY;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAa;QAV7B,SAAI,GAAW,2BAAmB,CAAC;QAe1C,kBAAkB;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YAC/B,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,EAAE;SACZ,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;IAEM,MAAM,CAAC,MAA0B,EAAE,KAAY;QACpD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,QAAQ,CAAC,MAA0B,EAAE,KAAY;QACtD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAE,sBAAsB;SACzD;QAED,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAE7C,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;YAC1B,OAAO,KAAK,CAAC;SACd;QAED,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,OAAO,KAAK,CAAC;SACd;QACD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,wBAAU,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;QAEtF,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;YACtB,MAAM,MAAM,GAAG,wBAAU,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YAC7D,IAAI,MAAM,KAAK,SAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBACpD,OAAO,KAAK,CAAC;aACd;SACF;QAED,IAAI,IAAI,CAAC,UAAU,KAAK,6BAAU,CAAC,GAAG,EAAE;YACtC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE;gBACzD,OAAO,KAAK,CAAC;aACd;SACF;QAED,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;YACzD,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;AAlED,0CAkEC","sourcesContent":["import { GameMessage } from '../../game-message';\nimport { Prompt } from './prompt';\nimport { PlayerType, SlotType, CardTarget } from '../actions/play-card-action';\nimport { State } from '../state/state';\nimport { StateUtils } from '../state-utils';\nimport { DamageMap } from './move-damage-prompt';\n\nexport const PutDamagePromptType = 'Put damage';\n\nexport interface PutDamageOptions {\n  allowCancel: boolean;\n  blocked: CardTarget[];\n}\n\nexport class PutDamagePrompt extends Prompt<DamageMap[]> {\n\n  readonly type: string = PutDamagePromptType;\n\n  public options: PutDamageOptions;\n\n  constructor(\n    playerId: number,\n    public message: GameMessage,\n    public playerType: PlayerType,\n    public slots: SlotType[],\n    public damage: number,\n    public maxAllowedDamage: DamageMap[],\n    options?: Partial<PutDamageOptions>\n  ) {\n    super(playerId);\n\n    // Default options\n    this.options = Object.assign({}, {\n      allowCancel: true,\n      blocked: []\n    }, options);\n  }\n\n  public decode(result: DamageMap[] | null, state: State): DamageMap[] | null {\n    return result;\n  }\n\n  public validate(result: DamageMap[] | null, state: State): boolean {\n    if (result === null) {\n      return this.options.allowCancel;  // operation cancelled\n    }\n\n    let damage = 0;\n    result.forEach(r => { damage += r.damage; });\n\n    if (this.damage !== damage) {\n      return false;\n    }\n\n    const player = state.players.find(p => p.id === this.playerId);\n    if (player === undefined) {\n      return false;\n    }\n    const blocked = this.options.blocked.map(b => StateUtils.getTarget(state, player, b));\n\n    for (const r of result) {\n      const target = StateUtils.getTarget(state, player, r.target);\n      if (target === undefined || blocked.includes(target)) {\n        return false;\n      }\n    }\n\n    if (this.playerType !== PlayerType.ANY) {\n      if (result.some(r => r.target.player !== this.playerType)) {\n        return false;\n      }\n    }\n\n    if (result.some(r => !this.slots.includes(r.target.slot))) {\n      return false;\n    }\n\n    return true;\n  }\n\n}\n"]}