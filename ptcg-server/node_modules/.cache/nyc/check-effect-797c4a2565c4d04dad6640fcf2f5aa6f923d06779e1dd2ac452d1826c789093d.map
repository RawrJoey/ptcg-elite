{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/effect-reducers/check-effect.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/effect-reducers/check-effect.ts"],"names":[],"mappings":"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","sourcesContent":["import { State, GamePhase, GameWinner } from '../state/state';\nimport { StoreLike } from '../store-like';\nimport { CheckHpEffect, CheckProvidedEnergyEffect, CheckTableStateEffect } from '../effects/check-effects';\nimport { PokemonCardList } from '../state/pokemon-card-list';\nimport { ChoosePokemonPrompt } from '../prompts/choose-pokemon-prompt';\nimport { GameError } from '../../game-error';\nimport { GameMessage, GameLog } from '../../game-message';\nimport { ChoosePrizePrompt } from '../prompts/choose-prize-prompt';\nimport { CardList } from '../state/card-list';\nimport { PlayerType, SlotType } from '../actions/play-card-action';\nimport { KnockOutEffect } from '../effects/game-effects';\nimport { Effect } from '../effects/effect';\nimport { EnergyCard } from '../card/energy-card';\n\ninterface PokemonItem {\n  playerNum: number;\n  cardList: PokemonCardList;\n}\n\nfunction findKoPokemons(store: StoreLike, state: State): PokemonItem[] {\n  const pokemons: PokemonItem[] = [];\n\n  for (let i = 0; i < state.players.length; i++) {\n    const player = state.players[i];\n    player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, card, target) => {\n      const checkHpEffect = new CheckHpEffect(player, cardList);\n      store.reduceEffect(state, checkHpEffect);\n\n      if (cardList.damage >= checkHpEffect.hp) {\n        pokemons.push({ playerNum: i, cardList });\n      }\n    });\n  }\n\n  return pokemons;\n}\n\nfunction handleBenchSizeChange(store: StoreLike, state: State, benchSize: number): State {\n  state.players.forEach(player => {\n    // Add empty slots if bench is smaller\n    while (player.bench.length < benchSize) {\n      const bench = new PokemonCardList();\n      bench.isPublic = true;\n      player.bench.push(bench);\n    }\n\n    if (player.bench.length === benchSize) {\n      return;\n    }\n\n    // Remove empty slots, starting from the right side\n    const empty: PokemonCardList[] = [];\n    for (let index = player.bench.length - 1; index >= 0; index--) {\n      const bench = player.bench[index];\n      const isEmpty = bench.cards.length === 0;\n      if (player.bench.length - empty.length > benchSize && isEmpty) {\n        empty.push(bench);\n      }\n    }\n\n    if (player.bench.length - empty.length <= benchSize) {\n      // Discarding empty slots is enough\n      for (let i = player.bench.length - 1; i >= 0; i--) {\n        if (empty.includes(player.bench[i])) {\n          player.bench.splice(i, 1);\n        }\n      }\n      return;\n    }\n\n    // Player has more Pokemons than bench size, discard some\n    const count = player.bench.length - empty.length - benchSize;\n    store.prompt(state, new ChoosePokemonPrompt(\n      player.id,\n      GameMessage.CHOOSE_POKEMON_TO_DISCARD,\n      PlayerType.BOTTOM_PLAYER,\n      [ SlotType.BENCH ],\n      { min: count, max: count, allowCancel: false }\n    ), results => {\n      results = results || [];\n      const selected = [ ...empty, ...results ];\n\n      // Discard all empty slots and selected Pokemons\n      for (let i = player.bench.length - 1; i >= 0; i--) {\n        if (selected.includes(player.bench[i])) {\n          player.bench[i].moveTo(player.discard);\n          player.bench.splice(i, 1);\n        }\n      }\n    });\n\n  });\n\n  return state;\n}\n\nfunction chooseActivePokemons(state: State): ChoosePokemonPrompt[] {\n  const prompts: ChoosePokemonPrompt[] = [];\n\n  for (const player of state.players) {\n    const hasActive = player.active.cards.length > 0;\n    const hasBenched = player.bench.some(bench => bench.cards.length > 0);\n    if (!hasActive && hasBenched) {\n      const choose = new ChoosePokemonPrompt(\n        player.id,\n        GameMessage.CHOOSE_NEW_ACTIVE_POKEMON,\n        PlayerType.BOTTOM_PLAYER,\n        [ SlotType.BENCH ],\n        { min: 1, allowCancel: false }\n      );\n      prompts.push(choose);\n    }\n  }\n\n  return prompts;\n}\n\nfunction choosePrizeCards(state: State, prizesToTake: [number, number]): ChoosePrizePrompt[] {\n  const prompts: ChoosePrizePrompt[] = [];\n\n  for (let i = 0; i < state.players.length; i++) {\n    const player = state.players[i];\n    const prizeLeft = player.getPrizeLeft();\n\n    if (prizesToTake[i] > prizeLeft) {\n      prizesToTake[i] = prizeLeft;\n    }\n\n    if (prizesToTake[i] > 0) {\n      const prompt = new ChoosePrizePrompt(player.id, GameMessage.CHOOSE_PRIZE_CARD, { count: prizesToTake[i] });\n      prompts.push(prompt);\n    }\n  }\n\n  return prompts;\n}\n\nexport function endGame(store: StoreLike, state: State, winner: GameWinner): State {\n\n  if (state.players.length !== 2) {\n    throw new GameError(GameMessage.ILLEGAL_ACTION);\n  }\n\n  if ([\n    GamePhase.WAITING_FOR_PLAYERS,\n    GamePhase.PLAYER_TURN,\n    GamePhase.ATTACK,\n    GamePhase.BETWEEN_TURNS\n  ].includes(state.phase) === false) {\n    throw new GameError(GameMessage.ILLEGAL_ACTION);\n  }\n\n  switch (winner) {\n    case GameWinner.NONE:\n      store.log(state, GameLog.LOG_GAME_FINISHED);\n      break;\n    case GameWinner.DRAW:\n      store.log(state, GameLog.LOG_GAME_FINISHED_DRAW);\n      break;\n    case GameWinner.PLAYER_1:\n    case GameWinner.PLAYER_2: {\n      const winnerName = winner === GameWinner.PLAYER_1\n        ? state.players[0].name\n        : state.players[1].name;\n      store.log(state, GameLog.LOG_GAME_FINISHED_WINNER, { name: winnerName });\n      break;\n    }\n  }\n\n  state.winner = winner;\n  state.phase = GamePhase.FINISHED;\n  return state;\n}\n\nfunction checkWinner(\n  store: StoreLike,\n  state: State,\n  onComplete?: () => void\n): State {\n  const points: [number, number] = [0, 0];\n  for (let i = 0; i < state.players.length; i++) {\n    const player = state.players[i];\n    // Player has no active Pokemon, opponent wins.\n    if (player.active.cards.length === 0) {\n      store.log(state, GameLog.LOG_PLAYER_NO_ACTIVE_POKEMON, { name: player.name });\n      points[i === 0 ? 1 : 0]++;\n    }\n    // Player has no Prize cards left, player wins.\n    if (player.prizes.every(p => p.cards.length === 0)) {\n      store.log(state, GameLog.LOG_PLAYER_NO_PRIZE_CARD, { name: player.name });\n      points[i]++;\n    }\n  }\n\n  if (points[0] + points[1] === 0) {\n    if (onComplete) {\n      onComplete();\n    }\n    return state;\n  }\n\n  let winner = GameWinner.DRAW;\n  if (points[0] > points[1]) {\n    winner = GameWinner.PLAYER_1;\n  } else if (points[1] > points[0]) {\n    winner = GameWinner.PLAYER_2;\n  }\n\n  state = endGame(store, state, winner);\n  if (onComplete) {\n    onComplete();\n  }\n  return state;\n}\n\nfunction handlePrompts(\n  store: StoreLike,\n  state: State,\n  prompts: (ChoosePrizePrompt | ChoosePokemonPrompt)[],\n  onComplete: () => void\n): State {\n  const prompt = prompts.shift();\n  if (prompt === undefined) {\n    onComplete();\n    return state;\n  }\n\n  const player = state.players.find(p => p.id === prompt.playerId);\n  if (player === undefined) {\n    throw new GameError(GameMessage.ILLEGAL_ACTION);\n  }\n\n  return store.prompt(state, prompt, (result) => {\n    if (prompt instanceof ChoosePrizePrompt) {\n      const prizes: CardList[] = result;\n      prizes.forEach(prize => prize.moveTo(player.hand));\n      handlePrompts(store, state, prompts, onComplete);\n    } else if (prompt instanceof ChoosePokemonPrompt) {\n      const selectedPokemon = result as PokemonCardList[];\n      if (selectedPokemon.length !== 1) {\n        throw new GameError(GameMessage.ILLEGAL_ACTION);\n      }\n      const benchIndex = player.bench.indexOf(selectedPokemon[0]);\n      if (benchIndex === -1 || player.active.cards.length > 0) {\n        throw new GameError(GameMessage.ILLEGAL_ACTION);\n      }\n      const temp = player.active;\n      player.active = player.bench[benchIndex];\n      player.bench[benchIndex] = temp;\n      handlePrompts(store, state, prompts, onComplete);\n    }\n  });\n}\n\nfunction* executeCheckState(next: Function, store: StoreLike, state: State,\n  onComplete?: () => void): IterableIterator<State> {\n\n  const prizesToTake: [number, number] = [0, 0];\n\n  // This effect checks the general data from the table (bench size)\n  const checkTableStateEffect = new CheckTableStateEffect();\n  store.reduceEffect(state, checkTableStateEffect);\n\n  // Size of the bench has changed. This may require some Pokemons to be discarded\n  handleBenchSizeChange(store, state, checkTableStateEffect.benchSize);\n  if (store.hasPrompts()) {\n    yield store.waitPrompt(state, () => next());\n  }\n\n  const pokemonsToDiscard = findKoPokemons(store, state);\n  for (const item of pokemonsToDiscard) {\n    const player = state.players[item.playerNum];\n    const knockOutEffect = new KnockOutEffect(player, item.cardList);\n    state = store.reduceEffect(state, knockOutEffect);\n\n    if (store.hasPrompts()) {\n      yield store.waitPrompt(state, () => next());\n    }\n\n    if (knockOutEffect.preventDefault === false) {\n      const opponentNum = item.playerNum === 0 ? 1 : 0;\n      prizesToTake[opponentNum] += knockOutEffect.prizeCount;\n    }\n  }\n\n  const prompts: (ChoosePrizePrompt | ChoosePokemonPrompt)[] = [\n    ...choosePrizeCards(state, prizesToTake),\n    ...chooseActivePokemons(state)\n  ];\n\n  const completed: [boolean, boolean] = [false, false];\n  for (let i = 0; i < state.players.length; i++) {\n    const player = state.players[i];\n    const playerPrompts = prompts.filter(p => p.playerId === player.id);\n    state = handlePrompts(store, state, playerPrompts, () => {\n      completed[i] = true;\n      if (completed.every(c => c)) {\n        checkWinner(store, state, onComplete);\n      }\n    });\n  }\n\n  return state;\n}\n\nexport function checkState(store: StoreLike, state: State, onComplete?: () => void): State {\n  if ([GamePhase.PLAYER_TURN, GamePhase.ATTACK, GamePhase.BETWEEN_TURNS].includes(state.phase) === false) {\n    if (onComplete !== undefined) {\n      onComplete();\n    }\n    return state;\n  }\n\n  const generator = executeCheckState(() => generator.next(), store, state, onComplete);\n  return generator.next().value;\n}\n\n\nexport function checkStateReducer(store: StoreLike, state: State, effect: Effect): State {\n\n\n  if (effect instanceof CheckProvidedEnergyEffect) {\n    effect.source.cards.forEach(c => {\n      if (c instanceof EnergyCard && !effect.energyMap.some(e => e.card === c)) {\n        effect.energyMap.push({ card: c, provides: c.provides });\n      }\n    });\n    return state;\n  }\n\n  return state;\n}\n"]}