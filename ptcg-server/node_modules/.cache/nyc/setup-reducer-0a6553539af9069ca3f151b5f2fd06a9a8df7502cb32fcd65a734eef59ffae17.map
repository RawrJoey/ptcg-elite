{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/reducers/setup-reducer.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/reducers/setup-reducer.ts"],"names":[],"mappings":";;;AACA,oEAA+D;AAC/D,0DAAsD;AAEtD,kDAA8C;AAC9C,kEAA6D;AAC7D,wEAAmE;AACnE,6DAAyD;AACzD,0EAAqE;AACrE,0EAAqE;AACrE,4CAAyC;AACzC,oEAA+D;AAC/D,8DAA8D;AAC9D,0CAA8D;AAC9D,iDAA6C;AAC7C,qDAA0D;AAC1D,kEAAyD;AACzD,kEAA6D;AAE7D,mDAAsD;AACtD,sEAAgE;AAChE,kEAA0D;AAC1D,4EAAoE;AAGpE,SAAS,4BAA4B,CAAC,MAAc,EAAE,KAAa;IACjE,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,OAAO;KACR;IACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KACvD;IACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACzC;AACH,CAAC;AAED,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAc,EAAE,KAAgB,EAAE,KAAY;IAChE,MAAM,YAAY,GAAG,EAAC,SAAS,EAAE,sBAAS,CAAC,OAAO,EAAE,KAAK,EAAE,kBAAK,CAAC,KAAK,EAAC,CAAC;IACxE,MAAM,kBAAkB,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;IAClE,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAChC,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAElC,IAAI,cAAc,GAAG,KAAK,CAAC;IAC3B,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAE7B,OAAO,CAAC,cAAc,IAAI,CAAC,gBAAgB,EAAE;QAC3C,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAChC,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,kCAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE;gBAClE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACnC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACrD,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,gBAAgB,EAAE;YACrB,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACpC,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,kCAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE;gBACpE,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACvC,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;gBACzD,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,cAAc,IAAI,CAAC,gBAAgB,EAAE;YACvC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,sBAAO,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAC9E,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;gBACxB,IAAI,mCAAe,CAAC,MAAM,CAAC,EAAE,EAAE,0BAAW,CAAC,uBAAuB,EAChE,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;gBAC7C,IAAI,0BAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,0BAAW,CAAC,qBAAqB,CAAC;aAChE,EAAE,OAAO,CAAC,EAAE;gBACX,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;oBACd,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACpC;gBACD,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,cAAc,IAAI,gBAAgB,EAAE;YACvC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,sBAAO,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;YAC5E,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;gBACxB,IAAI,mCAAe,CAAC,QAAQ,CAAC,EAAE,EAAE,0BAAW,CAAC,uBAAuB,EAClE,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;gBAC3C,IAAI,0BAAW,CAAC,MAAM,CAAC,EAAE,EAAE,0BAAW,CAAC,qBAAqB,CAAC;aAC9D,EAAE,OAAO,CAAC,EAAE;gBACX,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;oBACd,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;iBACxC;gBACD,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;SACJ;KACF;IAED,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE;QACxB,IAAI,uCAAiB,CAAC,MAAM,CAAC,EAAE,EAAE,0BAAW,CAAC,wBAAwB,EACnE,MAAM,CAAC,IAAI,EAAE,YAAY,EAAE,kBAAkB,CAAC;QAChD,IAAI,uCAAiB,CAAC,QAAQ,CAAC,EAAE,EAAE,0BAAW,CAAC,wBAAwB,EACrE,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,kBAAkB,CAAC;KACnD,EAAE,MAAM,CAAC,EAAE;QACV,4BAA4B,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,4BAA4B,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,MAAM,eAAe,GAAG,IAAI,oCAAe,EAAE,CAAC;IAC9C,KAAK,CAAC,YAAY,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;IAE3C,IAAI,eAAe,CAAC,MAAM,EAAE;QAC1B,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;KACpE;SAAM;QACL,MAAM,cAAc,GAAG,IAAI,iCAAc,CAAC,MAAM,CAAC,EAAE,EAAE,0BAAW,CAAC,qBAAqB,CAAC,CAAC;QACxF,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,cAAc,EAAE,SAAS,CAAC,EAAE;YACpD,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;KACJ;IAED,6EAA6E;IAC7E,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAChD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,KAAK,CAAC,cAAc,CAAC,6BAAU,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChG,MAAM,CAAC,cAAc,CAAC,6BAAU,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAE9F,OAAO,gCAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACpC,CAAC;AAED,SAAS,YAAY,CAAC,EAAU,EAAE,IAAY;IAC5C,MAAM,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;IAC5B,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;IAEnB,mCAAmC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,MAAM,KAAK,GAAG,IAAI,oBAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;IAED,qCAAqC;IACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,MAAM,KAAK,GAAG,IAAI,mCAAe,EAAE,CAAC;QACpC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;IAED,MAAM,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC9B,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC/B,MAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC/B,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;IACjC,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAgB,iBAAiB,CAAC,KAAgB,EAAE,KAAY,EAAE,MAAc;IAE9E,IAAI,KAAK,CAAC,KAAK,KAAK,iBAAS,CAAC,mBAAmB,EAAE;QAEjD,IAAI,MAAM,YAAY,mCAAe,EAAE;YACrC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC7B,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,mBAAmB,CAAC,CAAC;aACtD;YAED,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,QAAQ,EAAE;gBACxE,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,eAAe,CAAC,CAAC;aAClD;YAED,MAAM,YAAY,GAAG,IAAI,4BAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE;gBAC3B,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,YAAY,CAAC,CAAC;aAC/C;YAED,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,GAAG,oBAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7C,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBAC5B,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACjC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE3B,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC9B,KAAK,CAAC,KAAK,GAAG,iBAAS,CAAC,KAAK,CAAC;gBAC9B,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBAClE,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;aAC/B;YAED,OAAO,KAAK,CAAC;SACd;QAED,IAAI,MAAM,YAAY,yCAAkB,EAAE;YACxC,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC7B,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,mBAAmB,CAAC,CAAC;aACtD;YAED,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,QAAQ,EAAE;gBACxE,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,eAAe,CAAC,CAAC;aAClD;YAED,MAAM,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1D,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE3B,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,yCAAkB,CAChD,MAAM,CAAC,EAAE,EACT,0BAAW,CAAC,kBAAkB,CAC/B,EAAE,IAAI,CAAC,EAAE;gBACR,IAAI,IAAI,KAAK,IAAI,EAAE;oBACjB,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,sBAAO,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC7E,MAAM,MAAM,GAAG,kBAAU,CAAC,IAAI,CAAC;oBAC/B,KAAK,GAAG,sBAAO,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;oBACtC,OAAO;iBACR;gBACD,MAAM,YAAY,GAAG,IAAI,4BAAY,CAAC,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE;oBAC3B,MAAM,IAAI,sBAAS,CAAC,0BAAW,CAAC,YAAY,CAAC,CAAC;iBAC/C;gBAED,MAAM,CAAC,IAAI,GAAG,oBAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACtC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;oBAC5B,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACjC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;gBAEH,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,KAAK,CAAC,KAAK,GAAG,iBAAS,CAAC,KAAK,CAAC;oBAC9B,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAClE,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;iBAC/B;YACH,CAAC,CAAC,CAAC;SACJ;KACF;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAjFD,8CAiFC","sourcesContent":["import { Action } from '../actions/action';\nimport { AddPlayerAction } from '../actions/add-player-action';\nimport { AlertPrompt } from '../prompts/alert-prompt';\nimport { Card } from '../card/card';\nimport { CardList } from '../state/card-list';\nimport { CoinFlipPrompt } from '../prompts/coin-flip-prompt';\nimport { ChooseCardsPrompt } from '../prompts/choose-cards-prompt';\nimport { DeckAnalyser } from '../../cards/deck-analyser';\nimport { InvitePlayerAction } from '../actions/invite-player-action';\nimport { InvitePlayerPrompt } from '../prompts/invite-player-prompt';\nimport { Player } from '../state/player';\nimport { ShowCardsPrompt } from '../prompts/show-cards-prompt';\nimport { ShuffleDeckPrompt } from '../prompts/shuffle-prompt';\nimport { State, GamePhase, GameWinner } from '../state/state';\nimport { GameError } from '../../game-error';\nimport { GameMessage, GameLog } from '../../game-message';\nimport { PlayerType } from '../actions/play-card-action';\nimport { PokemonCardList } from '../state/pokemon-card-list';\nimport { StoreLike } from '../store-like';\nimport { SuperType, Stage } from '../card/card-types';\nimport { WhoBeginsEffect } from '../effects/game-phase-effects';\nimport { endGame } from '../effect-reducers/check-effect';\nimport { initNextTurn } from '../effect-reducers/game-phase-effect';\n\n\nfunction putStartingPokemonsAndPrizes(player: Player, cards: Card[]): void {\n  if (cards.length === 0) {\n    return;\n  }\n  player.hand.moveCardTo(cards[0], player.active);\n  for (let i = 1; i < cards.length; i++) {\n    player.hand.moveCardTo(cards[i], player.bench[i - 1]);\n  }\n  for (let i = 0; i < 6; i++) {\n    player.deck.moveTo(player.prizes[i], 1);\n  }\n}\n\nfunction* setupGame(next: Function, store: StoreLike, state: State): IterableIterator<State> {\n  const basicPokemon = {superType: SuperType.POKEMON, stage: Stage.BASIC};\n  const chooseCardsOptions = { min: 1, max: 6, allowCancel: false };\n  const player = state.players[0];\n  const opponent = state.players[1];\n\n  let playerHasBasic = false;\n  let opponentHasBasic = false;\n\n  while (!playerHasBasic || !opponentHasBasic) {\n    if (!playerHasBasic) {\n      player.hand.moveTo(player.deck);\n      yield store.prompt(state, new ShuffleDeckPrompt(player.id), order => {\n        player.deck.applyOrder(order);\n        player.deck.moveTo(player.hand, 7);\n        playerHasBasic = player.hand.count(basicPokemon) > 0;\n        next();\n      });\n    }\n\n    if (!opponentHasBasic) {\n      opponent.hand.moveTo(opponent.deck);\n      yield store.prompt(state, new ShuffleDeckPrompt(opponent.id), order => {\n        opponent.deck.applyOrder(order);\n        opponent.deck.moveTo(opponent.hand, 7);\n        opponentHasBasic = opponent.hand.count(basicPokemon) > 0;\n        next();\n      });\n    }\n\n    if (playerHasBasic && !opponentHasBasic) {\n      store.log(state, GameLog.LOG_SETUP_NO_BASIC_POKEMON, { name: opponent.name });\n      yield store.prompt(state, [\n        new ShowCardsPrompt(player.id, GameMessage.SETUP_OPPONENT_NO_BASIC,\n          opponent.hand.cards, { allowCancel: true }),\n        new AlertPrompt(opponent.id, GameMessage.SETUP_PLAYER_NO_BASIC)\n      ], results => {\n        if (results[0]) {\n          player.deck.moveTo(player.hand, 1);\n        }\n        next();\n      });\n    }\n\n    if (!playerHasBasic && opponentHasBasic) {\n      store.log(state, GameLog.LOG_SETUP_NO_BASIC_POKEMON, { name: player.name });\n      yield store.prompt(state, [\n        new ShowCardsPrompt(opponent.id, GameMessage.SETUP_OPPONENT_NO_BASIC,\n          player.hand.cards, { allowCancel: true }),\n        new AlertPrompt(player.id, GameMessage.SETUP_PLAYER_NO_BASIC)\n      ], results => {\n        if (results[0]) {\n          opponent.deck.moveTo(opponent.hand, 1);\n        }\n        next();\n      });\n    }\n  }\n\n  yield store.prompt(state, [\n    new ChooseCardsPrompt(player.id, GameMessage.CHOOSE_STARTING_POKEMONS,\n      player.hand, basicPokemon, chooseCardsOptions),\n    new ChooseCardsPrompt(opponent.id, GameMessage.CHOOSE_STARTING_POKEMONS,\n      opponent.hand, basicPokemon, chooseCardsOptions)\n  ], choice => {\n    putStartingPokemonsAndPrizes(player, choice[0]);\n    putStartingPokemonsAndPrizes(opponent, choice[1]);\n    next();\n  });\n\n  const whoBeginsEffect = new WhoBeginsEffect();\n  store.reduceEffect(state, whoBeginsEffect);\n\n  if (whoBeginsEffect.player) {\n    state.activePlayer = state.players.indexOf(whoBeginsEffect.player);\n  } else {\n    const coinFlipPrompt = new CoinFlipPrompt(player.id, GameMessage.SETUP_WHO_BEGINS_FLIP);\n    yield store.prompt(state, coinFlipPrompt, whoBegins => {\n      state.activePlayer = whoBegins ? 0 : 1;\n      next();\n    });\n  }\n\n  // Set initial Pokemon Played Turn, so players can't evolve during first turn\n  const first = state.players[state.activePlayer];\n  const second = state.players[state.activePlayer ? 0 : 1];\n  first.forEachPokemon(PlayerType.BOTTOM_PLAYER, cardList => { cardList.pokemonPlayedTurn = 1; });\n  second.forEachPokemon(PlayerType.TOP_PLAYER, cardList => { cardList.pokemonPlayedTurn = 2; });\n\n  return initNextTurn(store, state);\n}\n\nfunction createPlayer(id: number, name: string): Player {\n  const player = new Player();\n  player.id = id;\n  player.name = name;\n\n  // Empty prizes, places for 6 cards\n  for (let i = 0; i < 6; i++) {\n    const prize = new CardList();\n    prize.isSecret = true;\n    player.prizes.push(prize);\n  }\n\n  // Empty bench, places for 5 pokemons\n  for (let i = 0; i < 5; i++) {\n    const bench = new PokemonCardList();\n    bench.isPublic = true;\n    player.bench.push(bench);\n  }\n\n  player.active.isPublic = true;\n  player.discard.isPublic = true;\n  player.stadium.isPublic = true;\n  player.supporter.isPublic = true;\n  return player;\n}\n\nexport function setupPhaseReducer(store: StoreLike, state: State, action: Action): State {\n\n  if (state.phase === GamePhase.WAITING_FOR_PLAYERS) {\n\n    if (action instanceof AddPlayerAction) {\n      if (state.players.length >= 2) {\n        throw new GameError(GameMessage.MAX_PLAYERS_REACHED);\n      }\n\n      if (state.players.length == 1 && state.players[0].id === action.clientId) {\n        throw new GameError(GameMessage.ALREADY_PLAYING);\n      }\n\n      const deckAnalyser = new DeckAnalyser(action.deck);\n      if (!deckAnalyser.isValid()) {\n        throw new GameError(GameMessage.INVALID_DECK);\n      }\n\n      const player = createPlayer(action.clientId, action.name);\n      player.deck = CardList.fromList(action.deck);\n      player.deck.isSecret = true;\n      player.deck.cards.forEach(c => {\n        state.cardNames.push(c.fullName);\n        c.id = state.cardNames.length - 1;\n      });\n\n      state.players.push(player);\n\n      if (state.players.length === 2) {\n        state.phase = GamePhase.SETUP;\n        const generator = setupGame(() => generator.next(), store, state);\n        return generator.next().value;\n      }\n\n      return state;\n    }\n\n    if (action instanceof InvitePlayerAction) {\n      if (state.players.length >= 2) {\n        throw new GameError(GameMessage.MAX_PLAYERS_REACHED);\n      }\n\n      if (state.players.length == 1 && state.players[0].id === action.clientId) {\n        throw new GameError(GameMessage.ALREADY_PLAYING);\n      }\n\n      const player = createPlayer(action.clientId, action.name);\n      state.players.push(player);\n\n      state = store.prompt(state, new InvitePlayerPrompt(\n        player.id,\n        GameMessage.INVITATION_MESSAGE\n      ), deck => {\n        if (deck === null) {\n          store.log(state, GameLog.LOG_INVITATION_NOT_ACCEPTED, { name: player.name });\n          const winner = GameWinner.NONE;\n          state = endGame(store, state, winner);\n          return;\n        }\n        const deckAnalyser = new DeckAnalyser(deck);\n        if (!deckAnalyser.isValid()) {\n          throw new GameError(GameMessage.INVALID_DECK);\n        }\n\n        player.deck = CardList.fromList(deck);\n        player.deck.isSecret = true;\n        player.deck.cards.forEach(c => {\n          state.cardNames.push(c.fullName);\n          c.id = state.cardNames.length - 1;\n        });\n\n        if (state.players.length === 2) {\n          state.phase = GamePhase.SETUP;\n          const generator = setupGame(() => generator.next(), store, state);\n          return generator.next().value;\n        }\n      });\n    }\n  }\n\n  return state;\n}\n"]}