{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/prompt.serializer.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/serializer/prompt.serializer.ts"],"names":[],"mappings":"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","sourcesContent":["import { SerializerContext, Serialized, Serializer } from './serializer.interface';\nimport { GameError } from '../game-error';\nimport { GameCoreError } from '../game-message';\nimport { AlertPrompt } from '../store/prompts/alert-prompt';\nimport { AttachEnergyPrompt } from '../store/prompts/attach-energy-prompt';\nimport { ChooseAttackPrompt } from '../store/prompts/choose-attack-prompt';\nimport { ChooseCardsPrompt } from '../store/prompts/choose-cards-prompt';\nimport { ChooseEnergyPrompt } from '../store/prompts/choose-energy-prompt';\nimport { ChoosePokemonPrompt } from '../store/prompts/choose-pokemon-prompt';\nimport { ChoosePrizePrompt } from '../store/prompts/choose-prize-prompt';\nimport { CoinFlipPrompt } from '../store/prompts/coin-flip-prompt';\nimport { ConfirmPrompt } from '../store/prompts/confirm-prompt';\nimport { InvitePlayerPrompt } from '../store/prompts/invite-player-prompt';\nimport { MoveDamagePrompt } from '../store/prompts/move-damage-prompt';\nimport { MoveEnergyPrompt } from '../store/prompts/move-energy-prompt';\nimport { OrderCardsPrompt } from '../store/prompts/order-cards-prompt';\nimport { Prompt } from '../store/prompts/prompt';\nimport { PutDamagePrompt } from '../store/prompts/put-damage-prompt';\nimport { SelectPrompt } from '../store/prompts/select-prompt';\nimport { ShowCardsPrompt } from '../store/prompts/show-cards-prompt';\nimport { ShuffleDeckPrompt } from '../store/prompts/shuffle-prompt';\n\nexport class PromptSerializer implements Serializer<Prompt<any>> {\n\n  public readonly types: string[];\n  public readonly classes: any[];\n\n  private rows: { classValue: (new (...params: any[]) => Prompt<any>), type: string }[] = [\n    { classValue: AlertPrompt, type: 'AlertPrompt' },\n    { classValue: AttachEnergyPrompt, type: 'AttachEnergyPrompt' },\n    { classValue: ChooseAttackPrompt, type: 'ChooseAttackPrompt' },\n    { classValue: ChooseCardsPrompt, type: 'ChooseCardsPrompt' },\n    { classValue: ChooseEnergyPrompt, type: 'ChooseEnergyPrompt' },\n    { classValue: ChoosePokemonPrompt, type: 'ChoosePokemonPrompt' },\n    { classValue: ChoosePrizePrompt, type: 'ChoosePrizePrompt' },\n    { classValue: CoinFlipPrompt, type: 'CoinFlipPrompt' },\n    { classValue: ConfirmPrompt, type: 'ConfirmPrompt' },\n    { classValue: InvitePlayerPrompt, type: 'InvitePlayerPrompt' },\n    { classValue: MoveDamagePrompt, type: 'MoveDamagePrompt' },\n    { classValue: MoveEnergyPrompt, type: 'MoveEnergyPrompt' },\n    { classValue: OrderCardsPrompt, type: 'OrderCardsPrompt' },\n    { classValue: PutDamagePrompt, type: 'PutDamagePrompt' },\n    { classValue: SelectPrompt, type: 'SelectPrompt' },\n    { classValue: ShowCardsPrompt, type: 'ShowCardsPrompt' },\n    { classValue: ShuffleDeckPrompt, type: 'ShuffleDeckPrompt' },\n  ];\n\n  constructor () {\n    this.types = this.rows.map(p => p.type);\n    this.classes = this.rows.map(p => p.classValue);\n  }\n\n  public serialize(prompt: Prompt<any>): Serialized {\n    const data: any = { ...prompt };\n    const row = this.rows.find(r => prompt instanceof r.classValue);\n    if (row === undefined) {\n      throw new GameError(GameCoreError.ERROR_SERIALIZER, `Unknown prompt type '${prompt.type}'.`);\n    }\n\n    return {\n      ...data,\n      _type: row.type,\n    };\n  }\n\n  public deserialize(data: Serialized, context: SerializerContext): Prompt<any> {\n    const row = this.rows.find(p => p.type === data._type);\n    if (row === undefined) {\n      throw new GameError(GameCoreError.ERROR_SERIALIZER, `Unknown prompt type '${data._type}'.`);\n    }\n    const prompt = Object.create(row.classValue.prototype);\n    delete (data as any)._type;\n    return Object.assign(prompt, data);\n  }\n\n}\n"]}