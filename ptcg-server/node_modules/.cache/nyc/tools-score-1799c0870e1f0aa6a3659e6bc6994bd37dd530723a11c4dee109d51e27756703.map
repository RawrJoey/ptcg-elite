{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/tools-score.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/state-score/tools-score.ts"],"names":[],"mappings":";;;AAAA,qCAA+C;AAC/C,mCAAsC;AAEtC,MAAa,UAAW,SAAQ,mBAAW;IAElC,QAAQ,CAAC,KAAY,EAAE,QAAgB;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QAEzC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,CAAC,cAAc,CAAC,iBAAU,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE;YACjE,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;gBAC/B,OAAO;aACR;YACD,MAAM,WAAW,GAAG,QAAQ,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5D,IAAI,WAAW,GAAG,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE;gBAC5C,KAAK,IAAI,WAAW,GAAG,OAAO,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;AArBD,gCAqBC","sourcesContent":["import { State, PlayerType } from '../../game';\nimport { SimpleScore } from './score';\n\nexport class ToolsScore extends SimpleScore {\n\n  public getScore(state: State, playerId: number): number {\n    const player = this.getPlayer(state, playerId);\n    const scores = this.options.scores.tools;\n    \n    let score = 0;\n    player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, card) => {\n      if (cardList.tool === undefined) {\n        return;\n      }\n      const activeScore = cardList === player.active ? scores.active : 0;\n      const hpScore = (card.hp - cardList.damage) * scores.hpLeft;\n      if (activeScore + hpScore >= scores.minScore) {\n        score += activeScore + hpScore;\n      }\n    });\n\n    return score;\n  }\n\n}\n"]}