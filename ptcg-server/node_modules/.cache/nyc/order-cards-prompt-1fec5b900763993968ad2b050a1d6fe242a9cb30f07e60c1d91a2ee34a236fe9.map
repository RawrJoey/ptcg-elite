{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/order-cards-prompt.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/game/store/prompts/order-cards-prompt.ts"],"names":[],"mappings":";;;AAEA,qCAAkC;AAErB,QAAA,oBAAoB,GAAG,aAAa,CAAC;AAMlD,MAAa,gBAAiB,SAAQ,eAAgB;IAMpD,YACE,QAAgB,EACT,OAAoB,EACpB,KAAe,EACtB,OAAoC;QAEpC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAJT,YAAO,GAAP,OAAO,CAAa;QACpB,UAAK,GAAL,KAAK,CAAU;QAPf,SAAI,GAAW,4BAAoB,CAAC;QAY3C,kBAAkB;QAClB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YAC/B,WAAW,EAAE,IAAI;SAClB,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;IAEM,QAAQ,CAAC,MAAuB;QACrC,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;SACjC;QACD,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7C,OAAO,KAAK,CAAC;SACd;QACD,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,IAAI,EAAE,CAAC;QACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;gBACd,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;AArCD,4CAqCC","sourcesContent":["import { CardList } from '../state/card-list';\nimport { GameMessage } from '../../game-message';\nimport { Prompt } from './prompt';\n\nexport const OrderCardsPromptType = 'Order cards';\n\nexport interface OrderCardsOptions {\n  allowCancel: boolean;\n}\n\nexport class OrderCardsPrompt extends Prompt<number[]> {\n\n  readonly type: string = OrderCardsPromptType;\n  \n  public options: OrderCardsOptions;\n\n  constructor(\n    playerId: number,\n    public message: GameMessage,\n    public cards: CardList,\n    options?: Partial<OrderCardsOptions>\n  ) {\n    super(playerId);\n\n    // Default options\n    this.options = Object.assign({}, {\n      allowCancel: true\n    }, options);\n  }\n\n  public validate(result: number[] | null): boolean {\n    if (result === null) {\n      return this.options.allowCancel;\n    }\n    if (result.length !== this.cards.cards.length) {\n      return false;\n    }\n    const s = result.slice();\n    s.sort();\n    for (let i = 0; i < s.length; i++) {\n      if (s[i] !== i) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n"]}