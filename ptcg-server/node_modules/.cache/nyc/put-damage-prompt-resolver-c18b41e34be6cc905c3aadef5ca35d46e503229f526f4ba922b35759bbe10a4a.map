{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/put-damage-prompt-resolver.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/put-damage-prompt-resolver.ts"],"names":[],"mappings":"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","sourcesContent":["import { Player, State, Action, ResolvePromptAction, Prompt, CardTarget,\n  CardList, PlayerType, StateUtils, DamageMap, PokemonCardList, MoveDamagePrompt } from '../../game';\nimport { PromptResolver } from './prompt-resolver';\nimport { PutDamagePrompt } from '../../game/store/prompts/put-damage-prompt';\n\nexport type DamagePromptResolverType = PutDamagePrompt | MoveDamagePrompt;\n\nexport interface DamagePromptResolverTarget {\n  target: CardTarget;\n  cardList: PokemonCardList;\n  damage: number;\n  hp: number;\n  score: number;\n}\n\nexport class PutDamagePromptResolver extends PromptResolver {\n\n  public resolvePrompt(state: State, player: Player, prompt: Prompt<any>): Action | undefined {\n    if (prompt instanceof PutDamagePrompt) {\n      const result = this.getPutDamagePromptResult(state, prompt);\n      return new ResolvePromptAction(prompt.id, result);\n    }\n  }\n\n  private getPutDamagePromptResult(state: State, prompt: PutDamagePrompt): DamageMap[] | null {\n    const items = this.getTargets(state, prompt, prompt.options.blocked);\n\n    const result: DamageMap[] = [];\n    let score = 0;\n    let promptDamage = prompt.damage;\n\n    while (items.length > 0 && promptDamage > 0) {\n      const item = items.shift();\n      if (item === undefined) {\n        break;\n      }\n      const target = item.target;\n      const hpLeft = item.hp - item.damage;\n      const damage = Math.min(promptDamage, hpLeft);\n      promptDamage -= damage;\n      item.damage += damage;\n      score += item.score * damage;\n      result.push({ target, damage });\n    }\n\n    if (result.length === 0 && prompt.options.allowCancel) {\n      return null;\n    }\n\n    if (score < 0 && prompt.options.allowCancel) {\n      return null;\n    }\n\n    return result;\n  }\n\n  protected getTargets(\n    state: State,\n    prompt: DamagePromptResolverType,\n    blocked: CardTarget[]\n  ): DamagePromptResolverTarget[] {\n    const player = state.players.find(p => p.id === prompt.playerId);\n    const opponent = state.players.find(p => p.id !== prompt.playerId);\n    if (player === undefined || opponent === undefined) {\n      return [];\n    }\n    const hasOpponent = [PlayerType.TOP_PLAYER, PlayerType.ANY].includes(prompt.playerType);\n    const hasPlayer = [PlayerType.BOTTOM_PLAYER, PlayerType.ANY].includes(prompt.playerType);\n    let results: DamagePromptResolverTarget[] = [];\n    if (hasOpponent) {\n      opponent.forEachPokemon(PlayerType.TOP_PLAYER, (cardList, card, target) => {\n        const maxAllowedDamage = prompt.maxAllowedDamage.find(d => {\n          return d.target.player === target.player\n            && d.target.slot === target.slot\n            && d.target.index === target.index;\n        });\n        const hp = maxAllowedDamage ? maxAllowedDamage.damage : 0;\n        const damage = cardList.damage;\n        const score = this.stateScore.getPokemonScore(cardList);\n\n        if (hp > 0 && prompt.slots.includes(target.slot)) {\n          results.push({ target, cardList, damage, hp, score });\n        }\n      });\n    }\n    if (hasPlayer) {\n      player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, card, target) => {\n        const maxHp = prompt.maxAllowedDamage.find(d => {\n          return d.target.player === target.player\n            && d.target.slot === target.slot\n            && d.target.index === target.index;\n        });\n        const hp = maxHp ? maxHp.damage - cardList.damage : 0;\n        const damage = cardList.damage;\n        const score = -this.stateScore.getPokemonScore(cardList);\n\n        if (hp > 0 && prompt.slots.includes(target.slot)) {\n          results.push({ target, cardList, damage, hp, score });\n        }\n      });\n    }\n\n    const blockedList: CardList[] = blocked.map(b => StateUtils.getTarget(state, player, b));\n    results = results.filter(i => !blockedList.includes(i.cardList));\n    results.sort((a, b) => b.score - a.score);\n    return results;\n  }\n\n}\n"]}