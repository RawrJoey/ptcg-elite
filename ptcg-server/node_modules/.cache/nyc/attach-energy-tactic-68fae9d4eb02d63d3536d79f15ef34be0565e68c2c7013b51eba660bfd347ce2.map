{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/simple-tactics/attach-energy-tactic.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/simple-tactics/attach-energy-tactic.ts"],"names":[],"mappings":";;;AAAA,qCACsC;AACtC,qDAAgD;AAChD,8DAA0D;AAE1D,MAAa,kBAAmB,SAAQ,6BAAY;IAE3C,SAAS,CAAC,KAAY,EAAE,MAAc;QAC3C,IAAI,MAAM,CAAC,gBAAgB,IAAI,KAAK,CAAC,IAAI,EAAE;YACzC,OAAO,SAAS,CAAC;SAClB;QAED,wCAAwC;QACxC,MAAM,QAAQ,GAAiB,EAAE,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAC5B,IAAI,CAAC,YAAY,iBAAU,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAC7E,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,OAAO;SACR;QAED,MAAM,WAAW,GAAG,IAAI,0BAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClD,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;QACzD,MAAM,OAAO,GAAwD,EAAE,CAAC;QACxE,MAAM,CAAC,cAAc,CAAC,iBAAU,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE;YAE5E,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;gBAC3B,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1B,MAAM,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;gBACrD,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACrB,IAAI,KAAK,GAAG,SAAS,EAAE;oBACrB,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;iBACvC;aACF;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACxB,OAAO;SACR;QAED,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1C,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACjC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACzD,OAAO,IAAI,qBAAc,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACtD,CAAC;CAEF;AA5CD,gDA4CC","sourcesContent":["import { Action, Player, State, EnergyCard, PlayCardAction, CardTarget,\n  PlayerType, Card} from '../../game';\nimport { SimpleTactic } from './simple-tactics';\nimport { EnergyScore } from '../state-score/energy-score';\n\nexport class AttachEnergyTactic extends SimpleTactic {\n\n  public useTactic(state: State, player: Player): Action | undefined {\n    if (player.energyPlayedTurn >= state.turn) {\n      return undefined;\n    }\n\n    // Distinct list with player's energies.\n    const energies: EnergyCard[] = [];\n    player.hand.cards.forEach(c => {\n      if (c instanceof EnergyCard && !energies.some(e => e.fullName === c.fullName)) {\n        energies.push(c);\n      }\n    });\n\n    if (energies.length === 0) {\n      return;\n    }\n\n    const energyScore = new EnergyScore(this.options);\n    const baseScore = energyScore.getScore(state, player.id);\n    const targets: { target: CardTarget, card: Card, score: number }[] = [];\n    player.forEachPokemon(PlayerType.BOTTOM_PLAYER, (cardList, pokemon, target) => {\n\n      for (const card of energies) {\n        cardList.cards.push(card);\n        const score = energyScore.getScore(state, player.id);\n        cardList.cards.pop();\n        if (score > baseScore) {\n          targets.push({ target, score, card });\n        }\n      }\n    });\n\n    if (targets.length === 0) {\n      return;\n    }\n\n    targets.sort((a, b) => b.score - a.score);\n    const target = targets[0].target;\n    const index = player.hand.cards.indexOf(targets[0].card);\n    return new PlayCardAction(player.id, index, target); \n  }\n\n}\n"]}