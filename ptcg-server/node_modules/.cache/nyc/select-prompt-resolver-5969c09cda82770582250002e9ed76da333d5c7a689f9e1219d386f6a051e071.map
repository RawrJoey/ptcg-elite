{"version":3,"file":"/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/select-prompt-resolver.ts","sources":["/Users/joemyerscough/Documents/GitHub/ptcg-epsd/ptcg-server/src/simple-bot/prompt-resolver/select-prompt-resolver.ts"],"names":[],"mappings":";;;AAAA,qCAAsG;AACtG,uDAAmD;AACnD,0EAAsE;AACtE,0DAAsD;AAGtD,MAAa,oBAAqB,SAAQ,gCAAc;IAE/C,aAAa,CAAC,KAAY,EAAE,MAAc,EAAE,MAAmB;QACpE,IAAI,MAAM,YAAY,4BAAY,EAAE;YAClC,MAAM,MAAM,GAAG,IAAI,CAAC,8BAA8B,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YAC1E,OAAO,IAAI,0BAAmB,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,CAAC,CAAC;SACxD;IACH,CAAC;IAEO,8BAA8B,CAAC,KAAY,EAAE,MAAc,EAAE,MAAoB;QACvF,MAAM,MAAM,GAAG,CAAE,0BAAW,CAAC,iBAAiB,EAAE,0BAAW,CAAC,sBAAsB,CAAE,CAAC;QAErF,uCAAuC;QACvC,IAAI,MAAM,CAAC,OAAO,KAAK,0BAAW,CAAC,0BAA0B;eACxD,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM;eACtC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YAClE,OAAO,SAAS,CAAC;SAClB;QAED,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,iBAAU,CAAiB,CAAC;QACxF,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;QAEhF,IAAI,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACnC,OAAO,CAAC,CAAC;SACV;QAED,OAAO,CAAC,CAAC;IACX,CAAC;CAEF;AA9BD,oDA8BC","sourcesContent":["import { Player, State, Action, ResolvePromptAction, Prompt, EnergyCard, CardType } from '../../game';\nimport { PromptResolver } from './prompt-resolver';\nimport { SelectPrompt } from '../../game/store/prompts/select-prompt';\nimport { GameMessage } from '../../game/game-message';\n\n\nexport class SelectPromptResolver extends PromptResolver {\n\n  public resolvePrompt(state: State, player: Player, prompt: Prompt<any>): Action | undefined {\n    if (prompt instanceof SelectPrompt) {\n      const result = this.handleDiscardAllEnergiesPrompt(state, player, prompt);\n      return new ResolvePromptAction(prompt.id, result || 0);\n    }\n  }\n\n  private handleDiscardAllEnergiesPrompt(state: State, player: Player, prompt: SelectPrompt): number | undefined {\n    const values = [ GameMessage.ALL_FIRE_ENERGIES, GameMessage.ALL_LIGHTNING_ENERGIES ];\n\n    // Different kind of the select message\n    if (prompt.message !== GameMessage.CHOOSE_ENERGIES_TO_DISCARD\n      || prompt.values.length !== values.length\n      || prompt.values.some((value, index) => value !== values[index])) {\n      return undefined;\n    }\n\n    const energies = player.hand.cards.filter(c => c instanceof EnergyCard) as EnergyCard[];\n    const fire = energies.filter(e => e.provides.includes(CardType.FIRE));\n    const lightning = energies.filter(e => e.provides.includes(CardType.LIGHTNING));\n\n    if (lightning.length >= fire.length) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n}\n"]}